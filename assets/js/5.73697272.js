(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{352:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_1-js编程风格是函数式编程和面向对象编程的混合体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-js编程风格是函数式编程和面向对象编程的混合体"}},[t._v("#")]),t._v(" 1 JS编程风格是函数式编程和面向对象编程的混合体")]),t._v(" "),a("h2",{attrs:{id:"_2-在html中使用javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-在html中使用javascript"}},[t._v("#")]),t._v(" 2 在HTML中使用JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_2-1-script-元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-script-元素"}},[t._v("#")]),t._v(" 2.1 <script>元素")]),t._v(" "),a("h3",{attrs:{id:"_2-2-async：异步脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-async：异步脚本"}},[t._v("#")]),t._v(" 2.2 async：异步脚本")]),t._v(" "),a("p",[t._v("可选属性，不阻塞页面渲染，立即下载脚本，下载完毕执行脚本，执行顺序无法控制")]),t._v(" "),a("h3",{attrs:{id:"_2-3-defer：延时脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-defer：延时脚本"}},[t._v("#")]),t._v(" 2.3 defer：延时脚本")]),t._v(" "),a("p",[t._v("可选属性，脚本可以延迟到文档完全被解析和显示之后再执行。立即下载，延时执行，顺序执行")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意：带有src属性的script元素，不能再在标签里有js代码")])])]),t._v(" "),a("blockquote",[a("p",[t._v("如果不存在async和defer属性，那么就是按照在html中出现的顺序解析")])]),t._v(" "),a("h3",{attrs:{id:"_2-4-domcontentloaded事件监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-domcontentloaded事件监听器"}},[t._v("#")]),t._v(" 2.4 DOMContentLoaded事件监听器")]),t._v(" "),a("p",[t._v('监听浏览器的 "DOMContentLoaded" 事件，即 HTML 文档体加载、解释完毕事件')]),t._v(" "),a("h3",{attrs:{id:"_2-5-脚本调用策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-脚本调用策略"}},[t._v("#")]),t._v(" 2.5 脚本调用策略")]),t._v(" "),a("p",[t._v("如果脚本无需等待页面解析，且无依赖独立运行，那么应使用 async；\n如果脚本无需等待页面解析，且依赖于其它脚本，调用这些脚本时应使用 defer，将关联的脚本按所需顺序置于 HTML 中。")]),t._v(" "),a("h2",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念"}},[t._v("#")]),t._v(" 3 基本概念")]),t._v(" "),a("h3",{attrs:{id:"_3-1-松散的动态类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-松散的动态类型"}},[t._v("#")]),t._v(" 3.1 松散的动态类型")]),t._v(" "),a("p",[t._v("js变量是松散的动态类型，每个变量仅仅是一个保存值的占位符，所以未初始化就是一个undefined，且可以随时切换类型")]),t._v(" "),a("h3",{attrs:{id:"_3-2-引用错误（referenceerror）异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-引用错误（referenceerror）异常"}},[t._v("#")]),t._v(" 3.2 引用错误（ReferenceError）异常")]),t._v(" "),a("p",[t._v("如果只是声明变量而没有赋值，则该变量的值是undefined，访问一个未声明的变量会导致抛出一个引用错误（ReferenceError）异常")]),t._v(" "),a("h3",{attrs:{id:"可以使用-undefined-来判断一个变量是否已赋值（a-undefined）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可以使用-undefined-来判断一个变量是否已赋值（a-undefined）"}},[t._v("#")]),t._v(" 可以使用 undefined 来判断一个变量是否已赋值（a===undefined）")]),t._v(" "),a("h3",{attrs:{id:"变量提升hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升hoisting"}},[t._v("#")]),t._v(" 变量提升hoisting")]),t._v(" "),a("ul",[a("li",[t._v("JS引擎工作方式是先解析代码获取所有被声明的变量语句，再按行运行，所以所有变量声明语句都被提升到代码头部")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\nundefine\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 在创建变量时会被分为两步：变量的声明和赋值，变量声明命令通知解释引擎，要创建一个变量\n")])])]),a("h3",{attrs:{id:"null表示一个空对象指针，所以typeof-null-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null表示一个空对象指针，所以typeof-null-object"}},[t._v("#")]),t._v(" null表示一个空对象指针，所以typeof null == object")]),t._v(" "),a("h3",{attrs:{id:"转为false的值：空字符串、0、nan、null（与之相对的是任何对象）、undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转为false的值：空字符串、0、nan、null（与之相对的是任何对象）、undefined"}},[t._v("#")]),t._v(" 转为false的值：空字符串、0、NaN、null（与之相对的是任何对象）、undefined")]),t._v(" "),a("ul",[a("li",[t._v("Boolean({}) == true")])]),t._v(" "),a("h3",{attrs:{id:"相等和不相等：转换后再比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相等和不相等：转换后再比较"}},[t._v("#")]),t._v(" 相等和不相等：转换后再比较")]),t._v(" "),a("p",[t._v("全等和不全等：不转换就比较")]),t._v(" "),a("h3",{attrs:{id:"对于var而言，区块-不构成作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于var而言，区块-不构成作用域"}},[t._v("#")]),t._v(" 对于var而言，区块{}不构成作用域")]),t._v(" "),a("h2",{attrs:{id:"_4-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量"}},[t._v("#")]),t._v(" 4 变量")]),t._v(" "),a("h3",{attrs:{id:"_4-1-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-声明"}},[t._v("#")]),t._v(" 4.1 声明")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("var")]),t._v(" "),a("ul",[a("li",[t._v("没有块作用域、声明提升")])])]),t._v(" "),a("li",[a("p",[t._v("let")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所声明的变量，只在let命令所在的代码块内有效")])]),t._v(" "),a("li",[a("p",[t._v("不存在变量提升（let、const）")])]),t._v(" "),a("li",[a("p",[t._v("暂时性死区\ntemporal dead zone\n简称 TDZ")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在代码块内，使用let命令声明变量之前，该变量都是不可用的")])]),t._v(" "),a("li",[a("p",[t._v("1）TDZ意味着typeof不再是一个百分之百安全的操作（此前即使变量不存在，也是返回undefined）")]),t._v(" "),a("ul",[a("li",[t._v("typeof x; // ReferenceError\nlet x;")])])]),t._v(" "),a("li",[a("p",[t._v("2）函数参数也是声明")]),t._v(" "),a("ul",[a("li",[t._v("function bar(x = y, y = 2) {\nreturn [x, y];\n}")])])])])])])])]),t._v(" "),a("p",[t._v("bar(); // 报错")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t- 3）声明前使用（赋值时先计算等号右边，再将计算结果赋值给左边变量）\n\n\t\t- // 报错\n")])])]),a("p",[t._v("let x = x;\n// ReferenceError: x is not defined")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t- 本质：只要一进入当前作用域，所要使用的变量就已经存在了，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量\n\n- let不允许在相同作用域内，重复声明同一个变量\n- let实际上为 JavaScript 新增了块级作用域\n\n\t- ES5 只有全局作用域和函数作用域，没有块级作用域。ES5 规定，函数只能在顶层作用域和函数作用域之中声明，不能在块级作用域声明\n\t- ES6 明确允许在块级作用域之中声明函数，块级作用域之中，函数声明语句的行为类似于let，在块级作用域之外不可引用\n\t- 块级作用域的出现，实际上使得获得广泛应用的匿名立即执行函数表达式（匿名 IIFE）不再必要\n\t- 但是，浏览器并不一定遵守约定，导致：\n")])])]),a("p",[t._v("1）允许在块级作用域内声明函数。\n2）函数声明类似于var，即会提升到全局作用域或函数作用域的头部。\n3）函数声明还会提升到所在的块级作用域的头部。\n- 考虑到环境导致的行为差异太大，应该避免在块级作用域内声明函数。如果确实需要，也应该写成函数表达式，而不是函数声明语句")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- for循环的计数器，就很合适使用let命令。设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域\n")])])]),a("ul",[a("li",[a("p",[t._v("const")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("const声明一个只读的常量。一旦声明，常量的值就不能改变，所以，const一旦声明变量，就必须立即初始化")])]),t._v(" "),a("li",[a("p",[t._v("const命令声明的常量不提升\n同样存在暂时性死区\n只能在声明的位置后面使用\n不可重复声明\n只在声明的块中有效")])]),t._v(" "),a("li",[a("p",[t._v("本质：常量标识符指向的那个内存地址所保存的数据不得改动")]),t._v(" "),a("ul",[a("li",[t._v("原始类型的值就存放在该块内存区域，等同于常量")]),t._v(" "),a("li",[t._v("引用类型：标识符存放的是内存地址，即指向实际数据的指针，这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了")])])])])]),t._v(" "),a("li",[a("p",[t._v("（ES6）如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错")])]),t._v(" "),a("li",[a("p",[t._v("ES6 一共有 6 种声明变量的方法：var、let、const、function、import、class")])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-顶层对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-顶层对象"}},[t._v("#")]),t._v(" 4.2 顶层对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在浏览器环境指的是window对象，在 Node 指的是global对象。ES5 之中，顶层对象的属性与全局变量是等价的")])]),t._v(" "),a("li",[a("p",[t._v("顶层对象的属性与全局变量挂钩，被认为是 JavaScript 语言最大的设计败笔之一")])]),t._v(" "),a("li",[a("p",[t._v("ES6 做出改变，规定")]),t._v(" "),a("ul",[a("li",[t._v("1）为了保持兼容性，var命令和function命令声明的全局变量，依旧是顶层对象的属性")]),t._v(" "),a("li",[t._v("2）let命令、const命令、class命令声明的全局变量，不属于顶层对象的属性")]),t._v(" "),a("li",[t._v("也就是说，从 ES6 开始，全局变量将逐步与顶层对象的属性脱钩")])])]),t._v(" "),a("li",[a("p",[t._v("各种实现里面是不统一的")]),t._v(" "),a("ul",[a("li",[t._v("1）浏览器里面，顶层对象是window，但 Node 和 Web Worker 没有window。\n2）浏览器和 Web Worker 里面，self也指向顶层对象，但是 Node 没有self。\n3）Node 里面，顶层对象是global，但其他环境都不支持。")])])]),t._v(" "),a("li",[a("p",[t._v("ES2020 在语言标准的层面，引入globalThis作为顶层对象。也就是说，任何环境下，globalThis都是存在的，都可以从它拿到顶层对象，指向全局环境下的this")])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_5-控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-控制语句"}},[t._v("#")]),t._v(" 5 控制语句")]),t._v(" "),a("h3",{attrs:{id:"_5-1-if-判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-if-判断"}},[t._v("#")]),t._v(" 5.1 if 判断")]),t._v(" "),a("p",[a("code",[t._v("if(条件) {...};")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("if")]),t._v("后括号内的条件可以为表达式或布尔值，表达式的运算结果需为布尔值")])]),t._v(" "),a("h3",{attrs:{id:"_5-2-if-else-判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-if-else-判断"}},[t._v("#")]),t._v(" 5.2 if...else 判断")]),t._v(" "),a("p",[a("code",[t._v("if(条件) {...} else {...};")])]),t._v(" "),a("h3",{attrs:{id:"_5-3-if-else-if-else-判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-if-else-if-else-判断"}},[t._v("#")]),t._v(" 5.3 if...else if...else 判断")]),t._v(" "),a("p",[a("code",[t._v("if(条件1) {...} else if(条件2) {...} else {...};")])]),t._v(" "),a("h3",{attrs:{id:"_5-4-for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-for循环"}},[t._v("#")]),t._v(" 5.4 for循环")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("for(初始化表达式; 循环条件; 递增表达式) ...\n或者\nfor (初始化表达式; 循环条件; 递增表达式) {...}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",[a("li",[t._v("初始化表达式（initialize）：确定循环变量的初始值，只在循环开始时执行一次。")]),t._v(" "),a("li",[t._v("条件表达式（test）：每轮循环开始时，都要执行这个条件表达式，只有值为真，才继续进行循环。")]),t._v(" "),a("li",[t._v("递增表达式（increment）：每轮循环的最后一个操作，通常用来递增循环变量。")]),t._v(" "),a("li",[t._v("for语句的三个部分（initialize、test、increment），可以省略任何一个，也可以全部省略。")]),t._v(" "),a("li",[t._v("for循环"),a("strong",[t._v("特别之处")]),t._v("，就是设置循环变量的部分是一个父作用域，而循环体内部是一个单独的子作用域")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abc")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abc")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abc")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"_5-5-while-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-while-循环"}},[t._v("#")]),t._v(" 5.5 while 循环")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("while (条件) 语句;\n// 或者\nwhile (条件) 语句;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_5-6-do-while-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-do-while-循环"}},[t._v("#")]),t._v(" 5.6 do while 循环")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("do 语句\nwhile (条件);\n// 或者\ndo {\n  语句\n} while (条件);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[t._v("与while循环类似，唯一的区别就是先运行一次循环体，然后判断循环条件。")]),t._v(" "),a("li",[t._v("不管条件是否为真，do...while循环至少运行一次，这是这种结构最大的特点")])]),t._v(" "),a("h3",{attrs:{id:"_5-7-for-in-键循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-for-in-键循环"}},[t._v("#")]),t._v(" 5.7 for in 键循环")]),t._v(" "),a("p",[t._v("用以枚举对象的所有属性，属性没有顺序，所以循环顺序不可预测")]),t._v(" "),a("h3",{attrs:{id:"_5-8-for-of-值循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-for-of-值循环"}},[t._v("#")]),t._v(" 5.8 for of 值循环")]),t._v(" "),a("h3",{attrs:{id:"_5-9-switch-case-选择判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-switch-case-选择判断"}},[t._v("#")]),t._v(" 5.9 switch case 选择判断")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("switch使用全等，传入true，会依次判断case")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("switch(表达式) {case 表达式:....}")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("判断"),a("code",[t._v("switch")]),t._v("与"),a("code",[t._v("case")]),t._v("后的表达式是否相等，相等则执行"),a("code",[t._v("case")]),t._v("后的语句块")])])])]),t._v(" "),a("li",[a("p",[t._v("case语句块中的break不能少")])]),t._v(" "),a("li",[a("p",[t._v("建议switch...case结构可以用对象结构代替")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hack'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slash'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'run'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'run'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Invalid action.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用对象改进：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" actions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hack'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slash'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'run'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'run'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" actions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Invalid action.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" actions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h3",{attrs:{id:"_5-10-三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-10-三元运算符"}},[t._v("#")]),t._v(" 5.10 三元运算符")]),t._v(" "),a("p",[a("code",[t._v("(条件) ? 表达式1 : 表达式2")])]),t._v(" "),a("h3",{attrs:{id:"_5-11-break与continue-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-11-break与continue-命令"}},[t._v("#")]),t._v(" 5.11 break与continue 命令")]),t._v(" "),a("p",[t._v("break语句和continue语句都具有跳转作用，可以让代码不按既有的顺序执行")]),t._v(" "),a("ul",[a("li",[t._v("break语句用于跳出代码块或循环。")]),t._v(" "),a("li",[t._v("continue语句用于立即终止本轮循环，返回循环结构的头部，开始下一轮循环")])]),t._v(" "),a("h3",{attrs:{id:"_5-12-label-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-12-label-标签"}},[t._v("#")]),t._v(" 5.12 label 标签")]),t._v(" "),a("p",[a("code",[t._v("label: 语句")]),t._v("\n语句的前面有标签（label），相当于定位符，用于跳转到程序的任意位置。常与break语句和continue语句配合使用，跳出特定的循环或代码块")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_6-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据类型"}},[t._v("#")]),t._v(" 6 数据类型")]),t._v(" "),a("h3",{attrs:{id:"_6-1-javascript-语言的每一个值，都属于某一种数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-javascript-语言的每一个值，都属于某一种数据类型"}},[t._v("#")]),t._v(" 6.1 JavaScript 语言的每一个值，都属于某一种数据类型")]),t._v(" "),a("h3",{attrs:{id:"_6-2-原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-原始类型"}},[t._v("#")]),t._v(" 6.2 原始类型")]),t._v(" "),a("ol",[a("li",[t._v("基础类型\n"),a("ol",[a("li",[t._v("基本类型：简单的数据段，undefined、null、boolean、number、string，按值访问，可以操作保存在变量中实际的值，栈内存")]),t._v(" "),a("li",[t._v('undefined: undefined是一个表示"此处无定义"的原始值，转为数值时为NaN'),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1）变量声明了，但没有赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ni "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2）调用函数时，应该提供的参数没有提供，该参数等于 undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3）对象没有赋值的属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4）函数没有返回值时，默认返回 undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])]),t._v(" "),a("li",[t._v("null: null是一个表示“空”的对象，转为数值时为0")]),t._v(" "),a("li",[t._v("boolean: 布尔类型"),a("br"),t._v("\n下列运算符会返回布尔值：\n"),a("ol",[a("li",[t._v("前置逻辑运算符： ! (Not)")]),t._v(" "),a("li",[t._v("相等运算符：===，!==，==，!=")]),t._v(" "),a("li",[t._v("比较运算符：>，>=，<，<=")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果 JavaScript 预期某个位置应该是布尔值（参与"),a("strong",[t._v("逻辑运算")]),t._v("或"),a("strong",[t._v("作为条件表达式")]),t._v("），会将该位置上现有的值自动转为布尔值，undefined、null、0、NaN、\"\"或''（空字符串）五个值会转为false。"),a("br"),t._v(" "),a("strong",[t._v("注意：空数组（[]）和空对象（{}）对应的布尔值，都是true")])])])]),t._v(" "),a("li",[t._v("number: 数值类型\n"),a("ol",[a("li",[t._v("JS内部，"),a("strong",[t._v("所有数字都是以64位浮点数形式储存")]),t._v("，即使整数也是如此，底层根本没有整数，所有数字都是小数，浮点数不精确，涉及小数的计算和比较需要注意。"),a("code",[t._v("1 === 1.0 // true")])]),t._v(" "),a("li",[t._v("数值精度: (-1)^符号位 * 1.xx...xx * 2^指数部分")]),t._v(" "),a("li",[t._v("数值范围")]),t._v(" "),a("li",[t._v("数值进制\n"),a("ul",[a("li",[t._v("使用字面量（literal）直接表示一个数值时，JS对整数提供四种进制的表示方法：十进制、十六进制、八进制、二进制：")]),t._v(" "),a("li",[t._v("1）十进制（Decimal）：没有前导0的数值。\n2）八进制（Octal）：有前缀0o或0O的数值，且只用到0-7的八个阿拉伯数字的数值。")]),t._v(" "),a("li",[t._v("3）十六进制（Hex）：有前缀0x或0X的数值。")]),t._v(" "),a("li",[t._v("4）二进制（Binary）：有前缀0b或0B的数值。")])]),t._v(" "),a("blockquote",[a("p",[t._v("前导0表示八进制，处理时很容易造成混乱。ES5 的严格模式和 ES6，已经废除了这种表示法。"),a("br"),t._v("\n默认情况下，JS内部会自动将八进制、十六进制、二进制转为十进制")])])]),t._v(" "),a("li",[t._v("特殊数值\n"),a("ul",[a("li",[a("p",[t._v("正零和负零: 除当做分母外不同（得到正负Infinity），其余时刻都等于正常0")])]),t._v(" "),a("li",[a("p",[t._v("NaN（Not a Number）: 表示一个本要返回数值的操作数未返回数值的情况，避免抛出错误。出现在将字符串解析成数字、数学函数的运算结果出错的场合。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("acos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[t._v("注意，NaN不是独立的数据类型，而是一个特殊数值，它的数据类型依然属于number，使用typeof运算符可以看得很清楚。"),a("code",[t._v("typeof NaN // 'number'")])])]),t._v(" "),a("p",[t._v("NaN与任何数（包括它自己）的运算，得到的都是NaN，NaN不等于任何值，包括它本身"),a("br"),t._v("\n涉及NaN的操作都返回NaN。"),a("br"),t._v("\nNaN不与任何值相等，包括NaN，只能使用 "),a("code",[t._v("Number.isNaN(...)")]),t._v(" 或 "),a("code",[t._v("Object.is(..., NaN)")]),t._v(" 判断一个值是否为NaN。")])]),t._v(" "),a("li",[a("p",[t._v("Infinity: 表示“无穷”，表示两种场景。一种是一个正的数值太大，或一个负的数值太小，无法表示；另一种是非0数值除以0，得到Infinity")])])])]),t._v(" "),a("li",[t._v("全局方法（window对象的方法）\n"),a("ul",[a("li",[t._v("parseInt()"),a("br"),t._v("\n用于将字符串转为整数；"),a("code",[t._v("parseInt('123') // 123")]),a("br"),t._v("\n如果字符串头部有空格，空格会被自动去除；"),a("code",[t._v("parseInt(' 81') // 81")]),a("br"),t._v("\n如果parseInt的参数不是字符串，则会先转为字符串再转换；"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.23'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 43")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'17'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'17'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x11先默认转为十进制17，再转为字符串")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),t._v("字符串转为整数的时候，是一个个字符依次转换，如果遇到不能转为数字的字符，就不再进行下去，返回已经转好的部分；（Number函数是有非数字就NaN）"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12.34'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15e2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'15px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),t._v("如果字符串的第一个字符不能转化为数字（后面跟着数字的正负号除外），返回NaN"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),t._v("返回值只有两种可能，要么是一个十进制整数，要么是NaN"),a("br"),t._v("\n如果字符串以0x或0X开头，parseInt会将其按照十六进制数解析；如果字符串以0开头，将其按照10进制解析"),a("br"),t._v("\n进制转换：接受第二个参数（2到36之间），表示被解析的值的进制，返回该值对应的十进制数"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 216")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 512")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[t._v("parseFloat()"),a("br"),t._v("\n用于将一个字符串转为浮点数"),a("br"),t._v("\n如果字符串包含不能转为浮点数的字符，则不再进行往后转换，返回已经转好的部分"),a("br"),t._v("\n自动过滤字符串前导的空格"),a("br"),t._v("\n如果参数不是字符串，或者字符串的第一个字符不能转化为浮点数，则返回NaN"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FF2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[t._v("isNaN(): 用来判断一个值是否为NaN"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),t._v("isNaN只对数值有效，如果传入其他值，会被先转成数值"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),t._v("但是，对于空数组和只有一个数值成员的数组，isNaN返回false")]),t._v(" "),a("li",[t._v("isFinite(): 返回一个布尔值，表示某个值是否为正常的数值")])])])])]),t._v(" "),a("li",[t._v("string: 字符串类型\n"),a("ol",[a("li",[t._v("字符串就是零个或多个排在一起的字符，放在单引号、双引号或反引号之中")]),t._v(" "),a("li",[t._v("反斜杠（\\）在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义符")]),t._v(" "),a("li",[t._v("字符串可以被视为字符数组\n"),a("ul",[a("li",[t._v("可以使用数组的方括号运算符，用来返回某个位置的字符（位置编号从0开始）")]),t._v(" "),a("li",[t._v("如果方括号中的数字超过字符串的长度，或者方括号中根本不是数字，则返回undefined")]),t._v(" "),a("li",[t._v("实际上，无法改变字符串之中的单个字符")])])]),t._v(" "),a("li",[t._v("length属性: 返回字符串的长度，该属性也是无法改变的")]),t._v(" "),a("li",[t._v("每个字符在 JavaScript 内部都是以16位（即2个字节）的 UTF-16 格式储存。也就是说，JS的单位字符长度固定为16位长度，即2个字节")]),t._v(" "),a("li",[t._v("Base64 转码\n"),a("ul",[a("li",[t._v("文本里面包含一些不可打印的符号，比如 ASCII 码 0 到 31 的符号都无法打印出来，这时可以使用 Base64 编码，将它们转成可以打印的字符。另一个场景是，有时需要以文本格式传递二进制数据，那么也可以使用 Base64 编码")]),t._v(" "),a("li",[t._v("Base64 就是一种编码方法，可以将任意值转成 0～9、A～Z、a-z、+和/这64个字符组成的可打印字符。使用它的主要目的，不是为了加密，而是为了不出现特殊字符，简化程序的处理")]),t._v(" "),a("li",[t._v("原生方法\n"),a("ul",[a("li",[t._v("btoa()：任意值转为 Base64 编码（原生）")]),t._v(" "),a("li",[t._v("atob()：Base64 编码转为原来的值（原生）")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意，这两个方法不适合非 ASCII 码的字符，会报错。要将非 ASCII 码字符转为 Base64 编码，"),a("strong",[t._v("必须中间插入一个转码环节")]),t._v("，再使用这两个方法")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("btoa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("atob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "JUU0JUJEJUEwJUU1JUE1JUJE"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b64Decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JUU0JUJEJUEwJUU1JUE1JUJE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "你好"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])])])]),t._v(" "),a("li",[t._v("遍历器接口\n"),a("ul",[a("li",[t._v("ES6 为字符串添加了遍历器接口，使得字符串可以被for...of循环遍历"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" codePoint "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("codePoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "f"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "o"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "o"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("优点："),a("strong",[t._v("可以识别大于0xFFFF的码点")]),t._v("，传统的for循环无法识别这样的码点")])])]),t._v(" "),a("li",[t._v("模板字符串\n"),a("ul",[a("li",[t._v("模板字符串（template string）是增强版的字符串，用反引号（`）标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量")]),t._v(" "),a("li",[t._v("如果使用模板字符串表示多行字符串，所有的空格和缩进都会被保留在输出之中")]),t._v(" "),a("li",[t._v("模板字符串中嵌入JS表达式，需要将表达式写在 "),a("code",[t._v("${}")]),t._v(" 之中，如果大括号中的表达式值不是字符串，将按照一般的规则转为字符串")])])]),t._v(" "),a("li",[t._v("标签模板\n"),a("ul",[a("li",[t._v("过滤 HTML 字符串，防止用户输入恶意内容")]),t._v(" "),a("li",[t._v("多语言转换（国际化处理）")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("tiger")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("1997")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("name: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", year: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name: tiger, year: 1997")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tag "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("name: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", year: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("strings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("vars")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'name: ', ', year: ', '' ]")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'tiger', '1997' ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("blockquote",[a("p",[t._v("标签函数的第一个参数是模板字符串的字符串部分，后面参数依次是模板字符串中的变量，也可以使用剩余参数合并成一个数组")])])]),t._v(" "),a("li",[t._v("常用函数：toUpperCase、toLowerCase、trim、charAt、repeat、replace")]),t._v(" "),a("li",[t._v("字符串截取: slice、substring、substr"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tigercheng'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个参数：起始位置（左闭右开）")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gercheng")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gercheng")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gercheng")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个参数：起始位置 + 结束位置/截取数量（左闭右开）")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// g，[2, 3)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// g，[2, 3)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ger，[2, 5)，截取三个")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负数：两个参数：起始位置 + 结束位置/截取数量（左闭右开）")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// en")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无意义，负数转为 [0, 0)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// en")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 身份证号码安全处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("212998099163358509")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("secureFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("secureFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 212998************")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])])]),t._v(" "),a("li",[t._v("字符串检索: indexOf、includes、lastIndexOf、startsWith、endsWith\n"),a("ul",[a("li",[t._v("indexOf、lastIndexOf 可以传入第二个参数，表示其实查找位置")]),t._v(" "),a("li",[t._v("includes、startsWith、endsWith 返回结果是布尔值")])]),t._v(" "),a("blockquote",[a("p",[t._v("可以先统一转为大小写，再进行检索")])])]),t._v(" "),a("li",[t._v("字符串替换: replace\n"),a("ul",[a("li",[t._v("第一个参数：被替换的字符串")]),t._v(" "),a("li",[t._v("第二个参数：替换字符串")])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"_6-3-引用类型-合成类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-引用类型-合成类型"}},[t._v("#")]),t._v(" 6.3 引用类型/合成类型")]),t._v(" "),a("h4",{attrs:{id:"_6-3-1-引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-引用类型"}},[t._v("#")]),t._v(" 6.3.1 引用类型")]),t._v(" "),a("ol",[a("li",[t._v("object、array、function，多个值构成的对象，js不允许直接访问内存地址，只能操作对象的引用，按引用访问，堆内存")]),t._v(" "),a("li",[t._v("引用类型描述一类对象所具有的属性和方法")]),t._v(" "),a("li",[t._v("引用类型的值（对象）是引用类型的一个实例")])]),t._v(" "),a("h4",{attrs:{id:"_6-3-2-object-对象类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-object-对象类型"}},[t._v("#")]),t._v(" 6.3.2 Object 对象类型")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'World'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("对象的所有键名都是字符串")]),t._v("（数值会被自动转为字符串，其他类型会报错）")])]),t._v(" "),a("li",[a("p",[t._v("如果键名是数值，会被自动转为字符串，注意js中其他进制会被自动转为十进制")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e-2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".234")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFF")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   1: "a",')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   3.2: "b",')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   100: true,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   0.01: true,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   0.234: true,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   255: true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("对象的每一个键名又称为 “属性” （property），它的 “键值” 可以是任何数据类型。如果一个属性的值为函数，通常把这个属性称为 “方法” ，它可以像函数那样调用")]),t._v(" "),a("blockquote",[a("p",[t._v("属性可以动态创建，不必在对象声明时就指定")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("1）不同的变量名指向同一个对象，则都是这个对象的引用，即指向同一个内存地址。修改其中一个变量，会影响到其他所有变量。"),a("br"),t._v("\n2）两个变量指向同一个原始类型的值。那么，变量这时都是值的拷贝")])])]),t._v(" "),a("li",[a("p",[t._v("无法确定是对象还是代码块，一律解释为代码块。如果要解释为对象，最好在大括号前加上圆括号。圆括号的里面，只能是表达式，所以确保大括号只能解释为对象")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("属性操作")]),t._v(" "),a("ol",[a("li",[t._v("读取\n"),a("ul",[a("li",[t._v("1）点运算符 或 2）方括号运算符"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\np"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello World"')]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello World"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("方括号运算符内部使用表达式"),a("br"),t._v("\n键名必须放在引号里面，否则会被当作变量处理。数字键可以不加引号，会自动转成字符串。先运算表达式，再用表达式结果作为要读取的属性。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[t._v("数值键名不能使用点运算符（会被当成小数点），只能使用方括号运算符 （数组也是对象）"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello world"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])])]),t._v(" "),a("li",[t._v("赋值\n"),a("ul",[a("li",[t._v("点运算符和方括号运算符，不仅可以用来读取值，还可以用来赋值"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'World'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[t._v("JS允许属性的“后绑定”，也就是说，你可以在任意时刻新增属性")])])]),t._v(" "),a("li",[t._v("查看\n"),a("ul",[a("li",[t._v("查看一个对象本身的所有属性，可以使用Object.keys方法"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nkey1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nkey2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['key1', 'key2']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])])]),t._v(" "),a("li",[t._v("删除\n"),a("ul",[a("li",[t._v("delete命令用于删除对象的属性，删除成功后返回true"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["p"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("删除一个不存在的属性，delete不报错，而且返回true")]),t._v(" "),a("li",[t._v("只有一种情况，delete命令会返回false，那就是该属性存在，且不得删除"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[t._v("delete命令只能删除对象本身的属性，无法删除继承的属性")])])]),t._v(" "),a("li",[t._v("是否存在\n"),a("ul",[a("li",[t._v("in运算符用于检查对象是否包含某个属性（注意，检查的是键名，不是键值）"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[t._v("in运算符不能识别哪些属性是对象自身的，哪些属性是继承得来")]),t._v(" "),a("li",[t._v("使用对象的hasOwnProperty方法判断是否为对象自身的属性"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])])]),t._v(" "),a("li",[t._v("遍历\n"),a("ul",[a("li",[t._v("for...in循环用来遍历一个对象的全部属性：\n"),a("ul",[a("li",[t._v("1）遍历对象所有可遍历（enumerable）属性，跳过不可遍历的属性")]),t._v(" "),a("li",[t._v("2）遍历对象自身的属性和继承的属性")])])]),t._v(" "),a("li",[t._v("遍历对象自身的属性，使用for...in的时候，应该结合hasOwnProperty方法，在循环内部判断某个属性是否为对象自身的属性")])])])])])]),t._v(" "),a("h4",{attrs:{id:"_6-3-3-function-函数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-3-function-函数类型"}},[t._v("#")]),t._v(" 6.3.3 Function 函数类型")]),t._v(" "),a("ol",[a("li",[t._v("函数是一段可以反复调用的代码块，每个函数都是Function引用类型的实例（值、对象），函数也是对象/引用类型值，具有属性和方法，函数名实际上是指向函数对象的指针，因而没有函数重载。")]),t._v(" "),a("li",[t._v("函数声明\n"),a("ol",[a("li",[t._v("function 命令声明的代码区块，就是一个函数。函数提升，整个函数体会像变量声明一样，被提升到代码头部。")]),t._v(" "),a("li",[t._v("函数表达式：将一个匿名函数赋值给变量。这个匿名函数又称函数表达式（Function Expression），因为赋值语句的等号右侧只能放表达式。function命令后面不带有函数名。如果加上函数名，该函数名只在函数体内部有效，在函数体外部无效。函数表达式只在运行到的时候才解释执行。\n"),a("blockquote",[a("p",[t._v("使用var的函数表达式，声明会提升但赋值不会提升，报错"),a("code",[t._v("TypeError: f is not a function")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ok'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: f is not a function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: f is not a function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])]),t._v(" "),a("li",[t._v("如果同一个函数被多次声明，后面的声明就会覆盖前面的声明，由于函数名的提升，前一次声明在任何时候都是无效的。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数表达式'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数命令式'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数表达式")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\nf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f(); // TypeError: f is not a function")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])])])])]),t._v(" "),a("li",[t._v("圆括号运算符：函数名后面紧跟一对圆括号，就会调用/执行这个函数")]),t._v(" "),a("li",[t._v("return语句，表示返回。return语句不是必需的，如果没有的话，该函数就不返回任何值，或者说返回undefined")]),t._v(" "),a("li",[a("strong",[t._v("一等公民：JS语言将函数看作一种值，与其它值（数值、字符串、布尔值等等）地位相同")]),t._v("。凡是可以使用值的地方，就能使用函数。函数只是一个可以执行的值，此外并无特殊之处。")]),t._v(" "),a("li",[t._v("属性/方法\n"),a("ol",[a("li",[a("p",[t._v("name属性 返回函数的名字")]),t._v(" "),a("blockquote",[a("p",[t._v("通过变量赋值定义的函数，那么name属性返回变量名；")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果变量的值是一个具名函数，那么name属性返回function关键字之后的那个函数名")])])]),t._v(" "),a("li",[a("p",[t._v("length属性 返回函数预期传入的参数个数，即函数定义之中的参数个数，不管调用时输入了多少个参数，函数声明时确定")])]),t._v(" "),a("li",[a("p",[t._v("toString方法 返回一个字符串，内容是函数的源码")])]),t._v(" "),a("li",[a("p",[t._v("原生函数toString()方法返回 "),a("code",[t._v("function (){[native code]}")])])])])]),t._v(" "),a("li",[t._v("函数作用域\n"),a("ol",[a("li",[t._v("作用域（scope）指的是变量存在的范围\n"),a("blockquote",[a("p",[t._v("对于var命令来说，只用全局作用域和函数作用域，局部变量只能在函数内部声明，在其他区块中声明，一律都是全局变量")])])]),t._v(" "),a("li",[t._v("函数作用域内部也会产生 "),a("strong",[t._v("“变量提升”")]),t._v(" 现象")]),t._v(" "),a("li",[a("strong",[t._v("函数本身也是一个值（函数类型的实例），也有自己的作用域。它的作用域与变量一样，就是其声明时所在的作用域，与其运行时所在的作用域无关。函数执行时所在的作用域，是定义时的作用域，而不是调用时所在的作用域。")])]),t._v(" "),a("li",[t._v("函数体内部声明的函数，作用域绑定函数体内部"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[a("strong",[t._v("执行环境、变量对象、作用域链")]),t._v(" "),a("ul",[a("li",[t._v("执行环境（excutiosn context）定义变量或函数有权访问的其他数据，每个函数都有自己的执行环境")]),t._v(" "),a("li",[t._v("变量对象（variable object）每个执行环境都有一个与之关联的变量对象，保存执行环境中的变量和函数")]),t._v(" "),a("li",[t._v("当执行流进入一个函数的时候，函数的执行环境就会被压进一个环境栈，函数执行结束，栈弹出其环境，将控制权交给之前的执行环境")]),t._v(" "),a("li",[t._v("作用域链（scope chain）保证对执行环境有权访问的变量和函数的有序访问，其前端始终是当前执行环境的变量对象，下一个变量对象来自包含环境（外部），直到全局执行环境（作用域链的最后一个对象")]),t._v(" "),a("li",[t._v("标识符的解析是沿着作用域链一级级的解析，从前端开始，直到全局执行环境")])])])])]),t._v(" "),a("li",[t._v("函数参数\n"),a("ol",[a("li",[t._v("函数参数不是必需的，JS允许省略参数，省略的参数值变为undefined，函数的length属性与实际传入的参数个数无关，只反映函数预期传入的参数个数\n"),a("blockquote",[a("p",[t._v("没有办法只省略靠前的参数，而保留靠后的参数。如果一定要省略靠前的参数，只有显式传入undefined")])])]),t._v(" "),a("li",[t._v("传递方式\n"),a("ul",[a("li",[t._v("原始类型的值（数值、字符串、布尔值），传递方式是传值传递（passes by value），函数体内修改参数值，不会影响到函数外部")]),t._v(" "),a("li",[t._v("复合类型的值（数组、对象、其他函数），传递方式是传址传递（pass by reference）。传入函数的原始值的地址，在函数内部修改参数，会影响到原始值\n"),a("blockquote",[a("p",[t._v("如果函数内部修改的，不是参数对象的某个属性，而是替换掉整个参数，这时不会影响到原始值。因为这时是重新赋值，函数参数在函数括号中时声明")])])])])]),t._v(" "),a("li",[t._v("如果有同名的参数，则取最后出现的那个值")])])]),t._v(" "),a("li",[t._v("arguments 属性对象\n"),a("ol",[a("li",[t._v("JavaScript 允许函数有不定数目的参数，所以需要一种机制，可以在函数体内部读取所有参数")]),t._v(" "),a("li",[t._v("arguments对象包含了函数运行时的所有参数")]),t._v(" "),a("li",[t._v("这个对象只有在函数体内部，才可以使用")]),t._v(" "),a("li",[t._v("正常模式下，arguments对象可以在运行时修改；严格模式下，arguments对象与函数参数不具有联动关系")]),t._v(" "),a("li",[t._v("length属性，可以判断函数调用时到底带几个参数，因为arguments对象在运行时才会创建，函数运行时确定")]),t._v(" "),a("li",[t._v("像数组，但它是一个对象，可以将arguments转为真正的数组"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("callee属性是一个指向拥有该arguments对象的函数的指针，返回它所对应的原函数，严格模式下禁用。在编写递归函数时，使用arguments.callee（拥有该arguments对象的函数）更保险")])])]),t._v(" "),a("li",[t._v("this 属性对象\n"),a("ol",[a("li",[t._v("引用该函数据以执行的执行环境对象，即以该函数为方法的环境对象，运行时确定")]),t._v(" "),a("li",[t._v("函数名仅仅是指针，复制函数就是复制指针，在堆内存中还是同一个函数，所以 this 是在函数运行时确定的，指向调用该函数的环境对象（谁调用该函数，this就指向谁）")])])]),t._v(" "),a("li",[t._v("caller 属性对象"),a("br"),t._v("\n指向调用当前函数的函数"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("caller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Function: f1]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Function]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])])]),t._v(" "),a("li",[t._v("call、apply、bind\n"),a("ol",[a("li",[t._v("apply方法的参数：运行函数的作用域（执行环境所关联的变量对象）、参数数组（Array的实例，也可以是arguments）")]),t._v(" "),a("li",[t._v("call仅仅第二个参数不同，需要列出所有参数")]),t._v(" "),a("li",[t._v("bind：返回一个新函数，新函数的this绑定到bind方法的参数")])])]),t._v(" "),a("li",[t._v("闭包（Closure）\n"),a("ol",[a("li",[t._v("有权读取另一个函数作用域内部变量的函数，简单理解成“定义在一个函数内部的函数”。")]),t._v(" "),a("li",[t._v("最大的特点：可以“记住”诞生的环境，本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁")]),t._v(" "),a("li",[t._v("注意，外层函数每次运行，都会生成一个新的闭包，而这个闭包又会保留外层函数的内部变量，所以内存消耗很大")]),t._v(" "),a("li",[t._v("函数第一次被调用的时候，会创建一个执行环境（excution environment）及相应的作用域链，将作用域链赋值给特殊的属性[[Scope]]，再使用this、arguments、其他命名参数的值初始化函数的活动对象（active object），在作用域链中，外部函数的活动对象处于下一层，直至作用域终点的全局执行环境。")]),t._v(" "),a("li",[t._v("作用域链的本质：指向变量对象的指针列表，指向本地活动对象、下一层变量对象、直至全局变量对象。")]),t._v(" "),a("li",[t._v("函数执行完毕，局部活动对象就会被销毁，内存中仅保存全局作用域（全局执行环境的变量对象）。")]),t._v(" "),a("li",[t._v("闭包存在的时候，外部函数执行完毕，执行环境的作用域链被销毁，其活动对象不会被销毁，因为匿名函数的作用域链仍在引用这个活动对象，所以外部函数的活动对象仍存在于内存中，直至内部函数被销毁。")]),t._v(" "),a("li",[t._v("闭包的this：this是运行时基于函数的执行环境绑定的，当函数被当做某个对象的方法被调用时，this就等于那个对象，匿名函数的执行具有全局性。")]),t._v(" "),a("li",[t._v("每个函数在调用时，都会自动取得this和arguments，所以在内部函数中无法直接访问外部函数的this和arguments变量，只能间接访问到。")])])]),t._v(" "),a("li",[t._v("立即调用的函数表达式（IIFE）:Immediately-Invoked Function Expression， JavaScript 引擎规定，如果function关键字出现在行首，一律解释成语句。")])]),t._v(" "),a("h4",{attrs:{id:"_6-3-4-array-数组类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-4-array-数组类型"}},[t._v("#")]),t._v(" 6.3.4 Array 数组类型")]),t._v(" "),a("ol",[a("li",[t._v("数组是按次序排列的一组任何类型数据，每个值的位置都有编号（从0开始），整个数组用方括号表示。本质上，数组属于一种特殊的对象（特殊之处在于键都是数字，而数字会自动转为字符串）。typeof运算符会返回数组的类型是object。数组会自动扩容，当一个值放在超过数组长度的位置上，数组会重新计算长度，用空位填充新增位置，length属性可以设置（清空数组）。\n"),a("blockquote",[a("p",[t._v("数组的创建：1） Array 是 JavaScript 的原生对象，同时也是一个构造函数，可以用它生成新的数组；2）数组字面量；3）扩展运算符；4）Array.of()；5）Array.from()")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建数组")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ <2 empty items> ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ <2 empty items> ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2 ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2 ]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2, 3 ]")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2, 3 ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 2 ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2 ]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'male'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看效果更佳")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[t._v("数组空位\n"),a("ol",[a("li",[t._v("当数组的某个位置是空元素，即两个逗号之间没有任何值，我们称该数组存在空位（hole）。空位不影响length属性，可以读取的，返回undefined。使用delete命令删除一个数组成员，会形成空位，并且不会影响length属性。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, <1 empty item>, 3 ]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("某个位置是空位，与某个位置是undefined，是不一样的\n"),a("ul",[a("li",[t._v("如果是空位，使用数组的forEach方法、for...in结构、以及Object.keys方法进行遍历，空位都会被跳过。")]),t._v(" "),a("li",[t._v("如果某个位置是undefined，遍历的时候就不会被跳过。")])])])])]),t._v(" "),a("li",[t._v("数组属性和方法\n"),a("blockquote",[a("p",[t._v("可以为数组添加属性，不影响length属性的值")])]),t._v(" "),a("ol",[a("li",[t._v("length属性"),a("br"),t._v("\n数组的length属性返回数组的成员数量，可写。数组是一种动态的数据结构，可以随时增减数组的成员，所以 length 属性是一个动态的值。作为引用类型/对象，数组的数字键不需要连续，length 属性的值总是等于最大的整数键加1。\n"),a("ul",[a("li",[t._v("如果设置一个小于当前成员个数的值，数组成员会自动减少到length设置的值。清空数组的一个有效方法，就是将length属性设为0。")]),t._v(" "),a("li",[t._v("如果length属性设为大于数组个数时，新增位置填充空位，读取空位会返回undefined（相当于声明了，但未赋值）。")])])]),t._v(" "),a("li",[t._v("静态方法\n"),a("ul",[a("li",[t._v("Array.isArray()：判断参数是否为数组,返回一个布尔值，表示参数是否为数组，弥补typeof运算符的不足。")]),t._v(" "),a("li",[t._v("Array.from()：将一个类数组转为数组，如：NodeList等，同时可以传入第二个函数参数，该函数参数以转换后的数组元素作为参数进行遍历（类似数组的map方法）。")])])]),t._v(" "),a("li",[t._v("实例方法\n"),a("ul",[a("li",[t._v("Array.prototype.valueOf()：数组的valueOf方法返回数组本身。是一个所有对象都拥有的方法，表示对该对象求值，不同对象的valueOf方法不尽一致，也可以自定义。")]),t._v(" "),a("li",[t._v("Array.prototype.toString()：数组的toString方法返回返回以“,”（默认值）连接的字符串，也是对象的通用方法，可以自定义。\n"),a("blockquote",[a("p",[t._v("String(arr) 调用的即是 Array.prototype.toString()方法。")])])]),t._v(" "),a("li",[t._v("插入、删除系列\n"),a("ul",[a("li",[t._v("push 方法（尾入）：用于在数组的末端添加一个或多个元素，并返回添加新元素后的数组长度，改变原数组。")]),t._v(" "),a("li",[t._v("pop 方法（尾出）：用于删除数组的最后一个元素，并返回该元素，改变原数组。对空数组使用pop方法，不会报错，而是返回undefined。\n"),a("blockquote",[a("p",[t._v("push和pop结合使用，就构成了“后进先出”的"),a("strong",[t._v("栈结构")]),t._v("（stack）")])])]),t._v(" "),a("li",[t._v("shift 方法（头出）：用于删除数组的第一个元素，并返回该元素，改变原数组。shift() 方法可以遍历并清空一个数组。\n"),a("blockquote",[a("p",[t._v("push()和shift()结合使用，就构成了“先进先出”的"),a("strong",[t._v("队列结构")]),t._v("（queue）")])])]),t._v(" "),a("li",[t._v("unshift 方法（头入）：用于在数组的第一个位置添加元素，并返回添加新元素后的数组长度，改变原数组。")]),t._v(" "),a("li",[t._v("splice 方法（万能）：用于删除原数组的一部分成员，并在删除的位置添加新的数组成员，返回值是被删除的元素组成的数组，改变原数组，可以实现："),a("strong",[t._v("删除、插入、替换、截取")]),t._v("。"),a("br"),t._v("\n第一个参数是删除的起始位置（从0开始），第二个参数是被删除的元素个数，如果后面还有更多的参数，则表示这些就是要被插入数组的新元素。\n"),a("blockquote",[a("p",[t._v("1）如果起始位置是负数，就表示从倒数位置开始删除"),a("br"),t._v("\n2）如果只是单纯地插入元素，第二个参数可以设为0"),a("br"),t._v("\n3）如果只提供第一个参数，等同于将原数组在指定位置拆分成两个数组（删除到最后一个元素）")])])])])]),t._v(" "),a("li",[t._v("合并系列\n"),a("ul",[a("li",[t._v("join 方法（数组内）：以指定参数作为分隔符，将所有数组成员连接为一个字符串返回。如果不提供参数，默认用逗号分隔。如果数组成员是 undefined、null 或 空位，会被转成空字符串。（通过call方法，这个方法也可以用于字符串或类似数组的对象）"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "h-e-l-l-o"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[t._v("concat 方法（数组间）：用于多个数组的合并。它将新数组的成员，添加到原数组成员的后部，然后返回一个新数组，原数组不变。concat 也接受其他类型的值作为参数，添加到目标数组尾部。如果数组成员包括对象，concat方法返回当前数组的一个浅拷贝。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello", "world", "!"]')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [{ a: 1 }, { b: 2 }]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("排序系列\n"),a("ul",[a("li",[t._v("reverse 方法：用于颠倒排列数组元素，返回改变后的数组，改变原数组。")]),t._v(" "),a("li",[t._v("sort 方法：对数组成员进行排序，默认是按照字典顺序排序，改变原数组。可以传入一个函数作为参数，按照自定义方式排序，该参数函数接受两个参数，表示进行比较的两个数组成员，如果该参数函数的返回值大于0，表示第一个成员排在第二个成员后面，其他情况下，都是第一个元素排在第二个元素前面（自定义的排序函数最好返回数值）。")])])]),t._v(" "),a("li",[t._v("提取系列\n"),a("ul",[a("li",[t._v("slice 方法：用于提取目标数组的一部分，返回一个新数组，原数组不变。第一个参数为起始位置（从0开始，会包括在返回的新数组之中），第二个参数为终止位置（但该位置的元素本身不包括在内），遵循“左闭右开”原则。\n"),a("blockquote",[a("p",[t._v("1）如果省略第二个参数，则一直返回到原数组的最后一个成员"),a("br"),t._v("\n2）如果 slice 方法的参数是负数，则表示倒数计算的位置"),a("br"),t._v("\n3）slice 没有参数，实际上等于返回一个原数组的拷贝，可以将类似数组的对象转为真正的数组")])])])])]),t._v(" "),a("li",[t._v("迭代遍历系列\n"),a("ul",[a("li",[t._v("参数1：在每一项元素上运行的函数，参数2：运行该函数的作用域对象（可选），都不修改原数组")]),t._v(" "),a("li",[t._v("map 方法：返回函数返回值组成的数组。1）接受一个函数作为第一个参数。该函数调用时，map方法向它传入三个参数：当前成员、当前位置和数组本身；2）还可以接受第二个参数，用来绑定回调函数内部的this变量。\n"),a("blockquote",[a("p",[t._v("如果数组有空位，map方法的回调函数在这个位置不会执行，会跳过数组的空位")])])]),t._v(" "),a("li",[t._v("forEach 方法：对每个元素运行函数，没有返回值。用法与map方法一致，第一个参数是参数函数，该参数函数同样接受三个参数：当前值、当前位置、整个数组；第二个参数接收绑定参数函数的this变量，也会跳过数组的空位。")]),t._v(" "),a("li",[t._v("filter 方法：返回参数函数返回值为true组成的数组，用法与map方法一致，参数是一个函数，该函数同样接受三个参数：当前值、当前位置、整个数组；接受第二个参数，绑定参数函数的this变量。")]),t._v(" "),a("li",[t._v("every 方法：参数函数返回值都为true，就为true。")]),t._v(" "),a("li",[t._v("some 方法：参数函数返回值任一为true，就为true")])])]),t._v(" "),a("li",[t._v("累积系列（reduce、reduceRight）\n"),a("ul",[a("li",[t._v("依次处理数组的每个成员，最终累计为一个值，并返回该累积变量")]),t._v(" "),a("li",[t._v("参数函数的四个参数：1）累积变量，默认为数组的第一个成员；2）当前变量，默认为数组的第二个成员；3）当前位置（从0开始）索引；4）原数组对象。前两个参数是必须的，后两个参数则是可选的。")]),t._v(" "),a("li",[t._v("如果要对累积变量指定初值，可以把它放在reduce方法和reduceRight方法的第二个参数，第二个参数相当于设定了默认值，处理空数组时尤其有用。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找出字符长度最长的数组成员")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLongest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("longest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" longest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" entry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" longest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLongest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "aaa"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[t._v("索引系列\n"),a("ul",[a("li",[t._v("indexOf 方法：返回给定元素在数组中第一次出现的位置，如果没有出现则返回-1。还可以接受第二个参数，表示搜索的开始位置。")]),t._v(" "),a("li",[t._v("lastIndexOf 方法：返回给定元素在数组中最后一次出现的位置，如果没有出现则返回-1。还可以接受第二个参数，表示搜索的开始位置。")])])]),t._v(" "),a("li",[t._v("链式调用：上面这些数组方法之中，有不少返回的还是数组，所以可以链式使用")])])])])]),t._v(" "),a("li",[t._v("类数组对象 array-like object\n"),a("ol",[a("li",[t._v("如果一个对象的所有键名都是正整数或零，并且有length属性，那么这个对象就很像数组，属于类数组对象。“类似数组的对象”并不是数组，因为它们不具备数组特有的方法。类数组对象的根本特征，是具有length属性，只要有length属性，就可以认为这个对象类似于数组，但是这个length不是动态的。典型的“类似数组的对象”是函数的arguments对象，以及大多数 DOM 元素集，还有字符串。")]),t._v(" "),a("li",[t._v("转变成真正的数组"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])]),t._v(" "),a("li",[t._v("扩展/展开运算符 ...\n"),a("ol",[a("li",[t._v("rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。只有函数调用时，扩展运算符才可以放在圆括号中。扩展运算符可以展开数组，所以不再需要apply方法，将数组转为函数的参数了。常将字符串、类数组转为真正的数组，再调用数组独有的函数，或是将不重要的参数收集到一个数组中。\n"),a("blockquote",[a("p",[t._v("展开：出现在赋值号右边"),a("br"),t._v("\n收集：出现在赋值号左边")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5 的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6的写法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5 的写法")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("77")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6 的写法")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("77")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("77")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[t._v("复制数组"),a("br"),t._v("\n数组是复合数据类型/引用类型，直接复制的话，只是复制了指向底层数据结构的指针，而不是克隆一个全新的数组"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法一")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("合并数组"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5 的合并数组")]),t._v("\narr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'a', 'b', 'c', 'd', 'e' ]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6 的合并数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'a', 'b', 'c', 'd', 'e' ]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])]),t._v(" "),a("li",[t._v("与解构赋值结合"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 't', 'i', 'g', 'e', 'r' ]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("firstChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("restChars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// t")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("restChars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'i', 'g', 'e', 'r' ]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("rChars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fChar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// t")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rChars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'i', 'g', 'e', 'r' ]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_6-4-类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-类型判断"}},[t._v("#")]),t._v(" 6.4 类型判断")]),t._v(" "),a("ol",[a("li",[t._v("typeof运算符"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "boolean"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("blockquote",[a("p",[t._v("可以用来检查一个没有声明的变量，而不报错，在判断语句中使用")])])]),t._v(" "),a("li",[t._v("instanceof运算符\n"),a("ul",[a("li",[t._v("判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" strString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strString "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[t._v("Object.prototype.toString方法"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义判断类型的函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Boolean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"String"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Array"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("[object ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("确定基本类型使用typeof，确定引用类型使用instanceof（不精确）")])]),t._v(" "),a("h3",{attrs:{id:"_6-5-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-类型转换"}},[t._v("#")]),t._v(" 6.5 类型转换")]),t._v(" "),a("ol",[a("li",[t._v("JavaScript 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值")]),t._v(" "),a("li",[t._v("变量的数据类型是不确定的，但是各种运算符对数据类型是有要求的。如果运算符发现，运算子的类型与预期不符，就会自动转换类型。")]),t._v(" "),a("li",[t._v("强制转换\n"),a("ol",[a("li",[t._v("Number()\n"),a("ul",[a("li",[a("p",[t._v("将任意类型的值转化成数值（转换成原始类型）")])]),t._v(" "),a("li",[a("p",[t._v("原始类型"),a("br"),t._v("\n1）数值：转换后还是原来的值 "),a("code",[t._v("Number(324) // 324")]),a("br"),t._v("\n2）字符串：如果可以被解析为数值，则转换为相应的数值 "),a("code",[t._v("Number('324') // 324")]),a("br"),t._v("\n3）字符串：如果不可以被解析为数值，返回 NaN "),a("code",[t._v("Number('324abc') // NaN")]),a("br"),t._v("\n4）空字符串转为0 "),a("code",[t._v("Number('') // 0")]),a("br"),t._v("\n5）布尔值：true 转成 1，false 转成 0"),a("br"),t._v(" "),a("code",[t._v("js Number(true); // 1 Number(false); // 0")]),t._v("\n6）undefined：转成 NaN "),a("code",[t._v("Number(undefined) // NaN")]),a("br"),t._v("\n7）null：转成0 "),a("code",[t._v("Number(null) // 0")])]),t._v(" "),a("ul",[a("li",[t._v("Number 函数将字符串转为数值，要比 parseInt 函数严格很多。基本上，只要有一个字符无法转成数值，整个字符串就会被转为 NaN。")]),t._v(" "),a("li",[t._v("parseInt 逐个解析字符，而 Number 函数整体转换字符串的类型")]),t._v(" "),a("li",[t._v("parseInt 和 Number 函数都会自动过滤一个字符串前导和后缀的空格")])])]),t._v(" "),a("li",[a("p",[t._v("引用类型"),a("br"),t._v("\n简单的规则是，Number 方法的参数是对象时，将返回 NaN ，除非是包含单个数值的数组")]),t._v(" "),a("p",[t._v("1）第一步，调用对象自身的 valueOf 方法。如果返回原始类型的值，则直接对该值使用 Number 函数，不再进行后续步骤。"),a("br"),t._v("\n2）第二步，如果 valueOf 方法返回的还是对象，则改为调用对象自身的 toString 方法。如果 toString 方法返回原始类型的值，则对该值使用Number函数，不再进行后续步骤。"),a("br"),t._v("\n3）第三步，如果 toString 方法返回的是对象，就报错。")]),t._v(" "),a("blockquote",[a("p",[t._v("valueOf() ==> toString()")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\narr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1，单个数值的数组转为该数值")]),t._v("\narr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'97'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 97")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])])])]),t._v(" "),a("li",[t._v("String()\n"),a("ul",[a("li",[t._v("将任意类型的值转化成字符串")]),t._v(" "),a("li",[t._v("原始类型"),a("br"),t._v("\n1）数值：转为相应的字符串。"),a("br"),t._v("\n2）字符串：转换后还是原来的值。"),a("br"),t._v('\n3）布尔值：true转为字符串"true"，false转为字符串"false"。'),a("br"),t._v('\n4）undefined：转为字符串"undefined"。'),a("br"),t._v('\n5）null：转为字符串"null"。')]),t._v(" "),a("li",[t._v("引用类型"),a("br"),t._v("\n参数如果是对象，返回一个类型字符串；如果是数组，返回该数组的字符串形式"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,2,3"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),t._v("1）先调用对象自身的toString方法。如果返回原始类型的值，则对该值使用String函数，不再进行以下步骤。"),a("br"),t._v("\n2）如果toString方法返回的是对象，再调用原对象的valueOf方法。如果valueOf方法返回原始类型的值，则对该值使用String函数，不再进行以下步骤。"),a("br"),t._v("\n3）如果valueOf方法返回的是对象，就报错。\n"),a("blockquote",[a("p",[t._v("toString() ==> valueOf()")])])])])]),t._v(" "),a("li",[t._v("Boolean()\n"),a("ul",[a("li",[t._v("将任意类型的值转为布尔值")]),t._v(" "),a("li",[t._v("除了 "),a("code",[t._v("undefined、null、+0或-0、NaN、''（空字符串）")]),t._v(" 五个值的转换结果为false，其他的值全部为true。")]),t._v(" "),a("li",[t._v("注意，所有对象（包括空对象）的转换结果都是true，甚至连 false 对应的布尔对象 new Boolean(false) 也是 true（所有对象的布尔值都是true）\n"),a("blockquote",[a("p",[a("strong",[t._v("Boolean() 传入引用类型数据参数结果都为真，引用类型数据存放的是内存地址")])])])])])])])]),t._v(" "),a("li",[t._v("自动转换\n"),a("ol",[a("li",[a("strong",[t._v("预期")]),t._v("什么类型的值，就自动调用该类型的强制转换函数")]),t._v(" "),a("li",[t._v("比较运算和逻辑判断的自动转换\n"),a("ol",[a("li",[t._v("在参与比较运算时会自动进行"),a("strong",[t._v("转为数值")]),t._v("的类型转换（调用Number函数）")]),t._v(" "),a("li",[t._v("在作为逻辑运算/条件表达式时会自动进行"),a("strong",[t._v("转为布尔值")]),t._v("的类型转换（调用Boolean函数）")])])]),t._v(" "),a("li",[t._v("场景："),a("br"),t._v("\n1）不同类型的数据互相运算"),a("br"),t._v("\n2）对非布尔值类型的数据求布尔值"),a("br"),t._v("\n3）对非数值类型的值使用一元运算符（即+和-）"),a("br"),t._v("\n4）调用基础类型所对应的包装类型的一些属性和方法"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tigercheng'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: Cannot use 'in' operator to search for 'length' in tigercheng")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log('length' in name); ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nameObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tigercheng"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" nameObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'length'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" nameObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])]),t._v(" "),a("li",[t._v("自动转为布尔值"),a("br"),t._v("\n除了 "),a("code",[t._v("undefined、null、+0或-0、NaN、''（空字符串）")]),t._v(" 五个值，其他都是自动转为true。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔字面量")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" flagObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 有输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flagObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无输出")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("blockquote",[a("p",[a("strong",[t._v("注意：值为 false 的布尔对象自动转为 true 布尔类型")])])])]),t._v(" "),a("li",[t._v("自动转换字符串\n"),a("ul",[a("li",[t._v("遇到预期为字符串的地方，就会将非字符串的值自动转为字符串。具体规则是，先将复合类型的值转为原始类型的值，再将原始类型的值转为字符串")]),t._v(" "),a("li",[t._v("字符串的自动转换，主要发生在字符串的加法运算时。当一个值为字符串，另一个值为非字符串，则后者转为字符串。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '51'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5[object Object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5function (){}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "5null"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])])]),t._v(" "),a("li",[t._v("自动转为数值\n"),a("ul",[a("li",[t._v("自动调用Number函数")]),t._v(" "),a("li",[t._v("除了加法运算符（+）有可能把运算子转为字符串，其他运算符都会把运算子自动转成数值"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'97'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '9710'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 107 乘法自动转换")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 107 强制转换")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[a("strong",[t._v("注意：比较运算符会把运算子自动转成数值，再进行数值的比较")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔类型 true ==> 1, false ==> 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 97==1")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 1==1")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 0==1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 0==0")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 1==1")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'97'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 97==0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[t._v("null转为数值时为0，而undefined转为数值时为NaN")])])])])]),t._v(" "),a("li",[t._v("字符串数组与字符串的转换\n"),a("ol",[a("li",[t._v("字符串数组转字符串：join\n"),a("blockquote",[a("p",[t._v("参数是连接字符串数组各项的字符或字符串")])])]),t._v(" "),a("li",[t._v("字符串转字符串数组：split\n"),a("blockquote",[a("p",[t._v("参数是分割字符串的字符或字符串")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiger11cheng'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nameArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nameArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'tiger', 'cheng' ]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nameArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用空字符串连接")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'tigercheng'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" charArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用空字符串分割")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("charArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['t', 'i', 'g', 'e', 'r', 'c', 'h', 'e', 'n', 'g']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_7-运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-运算"}},[t._v("#")]),t._v(" 7 运算")]),t._v(" "),a("h3",{attrs:{id:"_7-1-算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-算术运算符"}},[t._v("#")]),t._v(" 7.1 算术运算符")]),t._v(" "),a("h4",{attrs:{id:"_7-1-1-加法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-1-加法"}},[t._v("#")]),t._v(" 7.1.1 加法")]),t._v(" "),a("ol",[a("li",[t._v("JavaScript 允许非数值的相加，加法运算符存在重载")]),t._v(" "),a("li",[t._v("布尔值都会自动转成数值，然后再相加"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[t._v("两个字符串相加，这时加法运算符会变成连接运算符，返回一个新的字符串，将两个原字符串连接在一起"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bc'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[t._v("如果一个运算子是字符串，另一个运算子是非字符串，这时非字符串会转成字符串，再连接在一起"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1a"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "falsea"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[t._v("其他算术运算符（比如减法、除法和乘法）都不会发生重载。它们的规则是：所有运算子一律转为数值，再进行相应的数学运算，注意NaN")]),t._v(" "),a("li",[t._v("对象的相加：如果运算子是对象，必须先转成原始类型的值，然后再相加")]),t._v(" "),a("li",[t._v("对象转成原始类型的值："),a("br"),t._v("\n1）首先，自动调用对象的valueOf方法"),a("br"),t._v("\n2）再自动调用对象的toString方法，将其转为字符串")])]),t._v(" "),a("h4",{attrs:{id:"_7-1-2-求余"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-2-求余"}},[t._v("#")]),t._v(" 7.1.2 求余")]),t._v(" "),a("ol",[a("li",[t._v("返回前一个运算子被后一个运算子除，所得的余数")]),t._v(" "),a("li",[t._v("运算结果的正负号由第一个运算子的正负号决定，为了得到负数的正确余数值，可以先使用绝对值函数"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-1-3-指数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-3-指数"}},[t._v("#")]),t._v(" 7.1.3 指数")]),t._v(" "),a("ol",[a("li",[t._v("指数运算符（**）完成指数运算，前一个运算子是底数，后一个运算子是指数")]),t._v(" "),a("li",[t._v("指数运算符是右结合，而不是左结合")])]),t._v(" "),a("h3",{attrs:{id:"_7-2-比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-比较运算符"}},[t._v("#")]),t._v(" 7.2 比较运算符")]),t._v(" "),a("h4",{attrs:{id:"_7-2-1-非相等运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1-非相等运算符"}},[t._v("#")]),t._v(" 7.2.1 非相等运算符")]),t._v(" "),a("ol",[a("li",[t._v("字符串：按照字典顺序进行比较，比较字符的 Unicode 码点"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cat'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[t._v("原始类型值"),a("br"),t._v("\n两个运算子都是原始类型的值，则是先转成数值再比较"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 5 > Number('4')")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即 5 > 4")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("任何值（包括NaN本身）与NaN比较，返回的都是false")])])]),t._v(" "),a("li",[t._v("对象\n"),a("ol",[a("li",[t._v("如果运算子是对象，会转为原始类型的值，再进行比较")]),t._v(" "),a("li",[t._v("先调用valueOf方法；如果返回的还是对象，再接着调用toString方法")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-2-2-相等运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-2-相等运算符"}},[t._v("#")]),t._v(" 7.2.2 相等运算符")]),t._v(" "),a("ol",[a("li",[t._v("相等运算符（==）比较两个值是否相等")]),t._v(" "),a("li",[t._v("原始类型的值会转换成数值再进行比较"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 Number('true') === Number(true)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 NaN === 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[t._v("对象（这里指广义的对象，包括数组和函数）与原始类型的值比较时，对象转换成原始类型的值，再进行比较")]),t._v(" "),a("li",[t._v("undefined 和 null 与其他类型的值比较时，结果都为false，它们互相比较时结果为true")]),t._v(" "),a("li",[t._v("相等运算符隐藏的类型转换，会带来一些违反直觉的结果"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-2-3-严格相等运算符-全等运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-3-严格相等运算符-全等运算符"}},[t._v("#")]),t._v(" 7.2.3 严格相等运算符/全等运算符")]),t._v(" "),a("ol",[a("li",[t._v("严格相等运算符（===）比较它们是否为“同一个值”")]),t._v(" "),a("li",[t._v("同一类型的原始类型的值（数值、字符串、布尔值）比较时，值相同就返回true，值不同就返回false")]),t._v(" "),a("li",[t._v("两个复合类型（对象、数组、函数）的数据比较时，不是比较它们的值是否相等，而是比较它们是否指向同一个地址"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("blockquote",[a("p",[t._v("空对象、空数组、空函数的值，都存放在不同的内存地址，结果当然是false")])])]),t._v(" "),a("li",[t._v("对于两个对象的比较，严格相等运算符比较的是地址，而大于或小于运算符比较的是值")]),t._v(" "),a("li",[t._v("undefined 和 null 与自身严格相等"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nv1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" v2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_7-3-布尔-逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-布尔-逻辑运算符"}},[t._v("#")]),t._v(" 7.3 布尔/逻辑运算符")]),t._v(" "),a("h4",{attrs:{id:"_7-3-1-逻辑非"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-1-逻辑非"}},[t._v("#")]),t._v(" 7.3.1 逻辑非 !")]),t._v(" "),a("ol",[a("li",[t._v("非布尔值，取反运算符会将其转为布尔值\n"),a("blockquote",[a("p",[t._v("以下六个值取反后为true，其他值都为false："),a("br"),t._v(" "),a("code",[t._v("undefined、null、false、0、NaN、空字符串（''）")])])])]),t._v(" "),a("li",[t._v("对一个值连续做两次取反运算，等于将其转为对应的布尔值，与Boolean函数的作用相同"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("x\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("&&")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用于多个表达式的求值")])]),t._v(" "),a("li",[a("p",[t._v("运算规则是：如果第一个运算子的布尔值为true，则返回第二个运算子的值（注意是值，不是布尔值）；如果第一个运算子的布尔值为false，则直接返回第一个运算子的值，且不再对第二个运算子求值")]),t._v(" "),a("ul",[a("li",[t._v("if (i) {\ndoSomething();\n}")])])])])])]),t._v(" "),a("p",[t._v("// 等价于")]),t._v(" "),a("p",[t._v("i && doSomething();")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 跳过第二个运算子的机制，被称为“短路”\n- 多个连用时返回第一个布尔值为false的表达式的值。如果所有表达式的布尔值都为true，则返回最后一个表达式的值\n\n\t- 因为与表达式由第一个false决定\n")])])]),a("ul",[a("li",[a("p",[t._v("||")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用于多个表达式的求值")])]),t._v(" "),a("li",[a("p",[t._v("运算规则是：如果第一个运算子的布尔值为true，则返回第一个运算子的值，且不再对第二个运算子求值；如果第一个运算子的布尔值为false，则返回第二个运算子的值")])]),t._v(" "),a("li",[a("p",[t._v("跳过第二个运算子的机制，被称为“短路”")])]),t._v(" "),a("li",[a("p",[t._v("多个连用时返回第一个布尔值为true的表达式的值。如果所有表达式都为false，则返回最后一个表达式的值")]),t._v(" "),a("ul",[a("li",[t._v("或表达式有第一个true决定")])])])])]),t._v(" "),a("li",[a("p",[t._v("?:")]),t._v(" "),a("ul",[a("li",[t._v("三元条件运算符由问号（?）和冒号（:）组成，分隔三个表达式")])])])]),t._v(" "),a("h3",{attrs:{id:"_7-4-二进制位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-二进制位运算符"}},[t._v("#")]),t._v(" 7.4 二进制位运算符")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("二进制位运算符用于直接对二进制位进行计算")])]),t._v(" "),a("li",[a("p",[t._v("直接处理每一个比特位（bit），非常底层的运算，好处是速度极快")])]),t._v(" "),a("li",[a("p",[t._v("位运算符只对整数起作用，如果一个运算子不是整数，会自动转为整数后再执行")])]),t._v(" "),a("li",[a("p",[t._v("在 JavaScript 内部，数值都是以64位浮点数的形式储存，但是做位运算的时候，是以32位带符号的整数进行运算的，并且返回值也是一个32位带符号的整数")]),t._v(" "),a("ul",[a("li",[t._v("i = i | 0; //将i（不管是整数或小数）转为32位整数")])])]),t._v(" "),a("li",[a("p",[t._v("|")]),t._v(" "),a("ul",[a("li",[t._v("或运算符（|）逐位比较两个运算子，两个二进制位之中只要有一个为1，就返回1，否则返回0")])])]),t._v(" "),a("li",[a("p",[t._v("&")]),t._v(" "),a("ul",[a("li",[t._v("与运算符（&）逐位比较两个运算子，两个二进制位之中只要有一个位为0，就返回0，否则返回1")])])]),t._v(" "),a("li",[a("p",[t._v("~")]),t._v(" "),a("ul",[a("li",[t._v("否运算符（~）将每个二进制位都变为相反值（0变为1，1变为0）")]),t._v(" "),a("li",[t._v("对一个整数连续两次二进制否运算，得到它自身;对一个小数连续进行两次二进制否运算，能达到取整效果（取整方法中最快的一种）")]),t._v(" "),a("li",[t._v("对其他类型进行二进制否运算，JavaScript 引擎会先调用Number函数，将字符串转为数值")])])]),t._v(" "),a("li",[a("p",[t._v("^")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("异或运算（^）在两个二进制位不同时返回1，相同时返回0（相异则或）")])]),t._v(" "),a("li",[a("p",[t._v("连续对两个数a和b进行三次异或运算，a^=b; b^=a; a^=b;，可以互换它们的值（最快方法）")])]),t._v(" "),a("li",[a("p",[t._v("异或运算也可以用来取整")]),t._v(" "),a("ul",[a("li",[t._v("12.9 ^ 0 // 12")])])])])]),t._v(" "),a("li",[a("p",[t._v("<<")]),t._v(" "),a("ul",[a("li",[t._v("左移运算符（<<）表示将一个数的二进制值向左移动指定的位数，尾部补0，即乘以2的指定次方")]),t._v(" "),a("li",[t._v("向左移动的时候，最高位的符号位是一起移动的")]),t._v(" "),a("li",[t._v("如果左移0位，就相当于将该数值转为32位整数，等同于取整，对于正数和负数都有效")])])]),t._v(" "),a("li",[a("p",[t._v(">>")]),t._v(" "),a("ul",[a("li",[t._v("右移运算符（>>）表示将一个数的二进制值向右移动指定的位数。如果是正数，头部全部补0；如果是负数，头部全部补1。右移运算符基本上相当于除以2的指定次方（最高位即符号位参与移动）。")])])]),t._v(" "),a("li",[a("p",[t._v(">>>")]),t._v(" "),a("ul",[a("li",[t._v("头部补零的右移运算符（>>>）与右移运算符（>>）只有一个差别，就是一个数的二进制形式向右移动时，头部一律补零，而不考虑符号位")]),t._v(" "),a("li",[t._v("总是得到正值")])])]),t._v(" "),a("li",[a("p",[t._v("开关作用")])])]),t._v(" "),a("h3",{attrs:{id:"_7-5-逗号运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-逗号运算符"}},[t._v("#")]),t._v(" 7.5 逗号运算符")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("逗号运算符用于对两个表达式求值，并返回后一个表达式的值")])]),t._v(" "),a("li",[a("p",[t._v("一个用途是，在返回一个值之前，进行一些辅助操作")]),t._v(" "),a("ul",[a("li",[t._v("var value = (console.log('Hi!'), true);\n// Hi!")])])])]),t._v(" "),a("h3",{attrs:{id:"_7-6-解构赋值运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-解构赋值运算"}},[t._v("#")]),t._v(" 7.6 解构赋值运算")]),t._v(" "),a("h4",{attrs:{id:"_7-6-1-解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-解构赋值"}},[t._v("#")]),t._v(" 7.6.1 解构赋值")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("ES6 允许按照一定模式，从等号右边的对象中提取值，提取被称为解构（Destructuring），再对变量进行赋值，形成解构赋值运算。如果解构失败，赋值时变量的值等于undefined。")]),t._v(" "),a("p",[t._v("本质上，解构赋值属于“模式匹配”，只要等号两边的“模式”相同，左边的变量就会被赋予对应的值，这种“模式”可以认为是对象的属性，在对象中就是属性，在数组中就是索引（js中，数组也是对象，数字索引会转为字符串属性），基础类型会转为对应的包装对象。不完全解构，即等号左边的模式，只匹配等号右边对象的一部分。")])]),t._v(" "),a("li",[a("p",[t._v("解构赋值允许指定默认值，ES6 内部使用严格相等运算符（===）来判断一个“模式”所对应的值是否为"),a("code",[t._v("undefined")]),t._v("，如果值为 undefined，则默认值生效。默认值可以引用解构赋值的其他变量，但该变量必须已经声明（TDZ）。")]),t._v(" "),a("blockquote",[a("p",[t._v("undefined 和 null 与其他类型的值比较时，结果都为false，自我比较时结果为true")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, <1 empty item>, 3 ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 20 3")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 20 null")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 20 30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数无返回值时，返回结果为undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 20 30")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("blockquote",[a("p",[t._v("如果默认值是一个表达式，那么这个表达式是惰性求值的，即只有在用到的时候，才会求值，所以能取到值时根本不会执行函数。（这句话有问题，需要查证）")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 形成空位，值为undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, <1 empty item> ]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2020-06-21T02:51:17.983Z")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2020-06-21T02:51:17.983Z")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-6-2-解构赋值运算内部机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-2-解构赋值运算内部机制"}},[t._v("#")]),t._v(" 7.6.2 解构赋值运算内部机制")]),t._v(" "),a("p",[t._v("解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。前者是键是模式，后者是值是变量名。数组的元素是按次序排列的，变量的取值由它的位置决定；对象的属性没有次序，变量必须与属性同名，才能取到正确的值。解构也可以用于嵌套结构的对象，能够取到继承的属性。\n> 数组也是对象，索引就是属性名，数字键会自动转为字符串\n"),a("code",[t._v("js let { foo: baz,'bar':bar } = { foo: 'aaa', bar: 'bbb' }; console.log(baz); // aaa console.log(bar); // bbb")])]),t._v(" "),a("h4",{attrs:{id:"_7-6-3-常见的解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-3-常见的解构赋值"}},[t._v("#")]),t._v(" 7.6.3 常见的解构赋值")]),t._v(" "),a("ol",[a("li",[t._v("对象的解构赋值的花括号不要写在行首，避免 JavaScript 将其解释为代码块，放在一个圆括号里面，就可以正确执行。")]),t._v(" "),a("li",[t._v("数组本质是特殊的对象，因此可以对数组进行对象属性的解构。事实上，只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值。如果等号右边是不可遍历的结构，就会报错。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" last"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfirst "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nlast "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[t._v("字符串也可以解构赋值，这是因为此时，字符串被转换成了一个类似数组的对象")]),t._v(" "),a("li",[t._v("数值、布尔值解构赋值时，则会先转为对象")]),t._v(" "),a("li",[t._v("函数参数：函数的参数也可以使用解构赋值，解构赋值时也可以有默认值，注意与函数参数默认值的区分。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3, 8]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3, undefined]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [undefined, undefined]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [0, 0]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("blockquote",[a("p",[t._v("1）函数参数不为undefined，所以不使用函数参数默认值，x=3，y=8；"),a("br"),t._v("\n2）函数参数不为undefined，所以不使用函数参数默认值，x=3，y=undefined；"),a("br"),t._v("\n3）函数参数不为undefined，所以不使用函数参数默认值，x=undefined，y=undefined；"),a("br"),t._v("\n4）函数参数为undefined，所以使用函数参数默认值，x=0，y=0；")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-6-4-解构赋值用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-4-解构赋值用途"}},[t._v("#")]),t._v(" 7.6.4 解构赋值用途")]),t._v(" "),a("ol",[a("li",[t._v("交换变量的值")]),t._v(" "),a("li",[t._v("从函数返回多个值。函数只能返回一个值，如果要返回多个值，只能将它们放在数组或对象里返回。有了解构赋值，取出这些值就非常方便")]),t._v(" "),a("li",[t._v("函数参数的定义。解构赋值可以方便地将一组参数与变量名对应起来")]),t._v(" "),a("li",[t._v("提取 JSON 数据。解构赋值对提取 JSON 对象中的数据（尤其有用）。"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" jsonData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("867")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5309")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jsonData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 42, "OK", [867, 5309]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])]),t._v(" "),a("li",[t._v("设置函数参数的默认值，避免了在函数体内部再写"),a("code",[t._v("var foo = config.foo || 'default foo';")]),t._v("这样的语句。")]),t._v(" "),a("li",[t._v("遍历 Map 结构，部署了 Iterator 接口的对象，都可以用for...of循环遍历"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'second'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" is "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first is hello")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// second is world")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])]),t._v(" "),a("li",[t._v("输入模块的指定方法，解构赋值使得输入语句非常清晰"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" SourceMapConsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SourceNode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source-map"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[t._v("可以很方便地将现有对象的方法，赋值到某个变量"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例二")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hello")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_8-错误处理机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-错误处理机制"}},[t._v("#")]),t._v(" 8 错误处理机制")]),t._v(" "),a("h2",{attrs:{id:"_9-变量、作用域、内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-变量、作用域、内存"}},[t._v("#")]),t._v(" 9 变量、作用域、内存")]),t._v(" "),a("p",[t._v("作用域、\n内存")]),t._v(" "),a("h3",{attrs:{id:"js松散类型的本质，决定了js变量只是特定时间用于保存特定值的名字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js松散类型的本质，决定了js变量只是特定时间用于保存特定值的名字"}},[t._v("#")]),t._v(" js松散类型的本质，决定了js变量只是特定时间用于保存特定值的名字")]),t._v(" "),a("h3",{attrs:{id:"复制、函数参数的传递（复制给命名参数，函数参数就是局部变量）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制、函数参数的传递（复制给命名参数，函数参数就是局部变量）"}},[t._v("#")]),t._v(" 复制、函数参数的传递（复制给命名参数，函数参数就是局部变量）")]),t._v(" "),a("ul",[a("li",[t._v("基本类型：创建新值，再赋值")]),t._v(" "),a("li",[t._v("引用类型：赋值堆内存地址")])]),t._v(" "),a("h3",{attrs:{id:"所有引用类型都是object的实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有引用类型都是object的实例"}},[t._v("#")]),t._v(" 所有引用类型都是Object的实例")]),t._v(" "),a("h3",{attrs:{id:"执行环境和作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行环境和作用域"}},[t._v("#")]),t._v(" 执行环境和作用域")]),t._v(" "),a("ul",[a("li",[t._v("执行环境中的代码执行完毕，环境就销毁，变量、函数也随之销毁，全局执行环境在应用程序退出时销毁")]),t._v(" "),a("li",[t._v("每个函数都有自己的执行环境")]),t._v(" "),a("li",[t._v("函数被当做变量对待，所以访问规则与环境中其他变量相同")]),t._v(" "),a("li",[t._v("没有使用声明标识符声明的变量会被添加到全局环境（严格模式下，初始化未声明的变量会报错）")])]),t._v(" "),a("h3",{attrs:{id:"垃圾收集（gc）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集（gc）"}},[t._v("#")]),t._v(" 垃圾收集（GC）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("自动垃圾收集机制")])]),t._v(" "),a("li",[a("p",[t._v("找出不再继续使用的变量，释放其占用的变量")])]),t._v(" "),a("li",[a("p",[t._v("标记清除mark-and-sweep")]),t._v(" "),a("ul",[a("li",[t._v("进入环境就标记为“进入环境”，离开环境标记为“离开环境”")])])]),t._v(" "),a("li",[a("p",[t._v("引用计数reference counting")]),t._v(" "),a("ul",[a("li",[t._v("跟踪值被引用的计数，被引用加一，引用变量赋新值减一，为0就清除")]),t._v(" "),a("li",[t._v("循环引用问题")]),t._v(" "),a("li",[t._v("解除引用（dereferencing）：手动切断变量与之前引用的连接，赋新值为null，本质是使变量脱离执行环境，使其在下一次垃圾回收时被回收")])])])]),t._v(" "),a("h2",{attrs:{id:"_10-面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-面向对象"}},[t._v("#")]),t._v(" 10 面向对象")]),t._v(" "),a("h3",{attrs:{id:"每个对象都是基于一个引用类型创建的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每个对象都是基于一个引用类型创建的"}},[t._v("#")]),t._v(" 每个对象都是基于一个引用类型创建的")]),t._v(" "),a("h3",{attrs:{id:"两种属性："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种属性："}},[t._v("#")]),t._v(" 两种属性：")]),t._v(" "),a("p",[t._v("数据属性\n访问器属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数据属性")]),t._v(" "),a("ul",[a("li",[t._v("Configurable")]),t._v(" "),a("li",[t._v("Enumerable：能否通过for in遍历")]),t._v(" "),a("li",[t._v("Writeable")]),t._v(" "),a("li",[t._v("Value")]),t._v(" "),a("li",[t._v("修改属性的特性，使用Object.defineProperty\n属性所在的对象\n属性名\n描述符对象")])])]),t._v(" "),a("li",[a("p",[t._v("访问器属性")]),t._v(" "),a("ul",[a("li",[t._v("Configurable")]),t._v(" "),a("li",[t._v("Enumerable：能否通过for in遍历")]),t._v(" "),a("li",[t._v("Get：读取属性时调用的函数")]),t._v(" "),a("li",[t._v("Set：设置属性时调用的函数")]),t._v(" "),a("li",[t._v("不包含数据值，包含一对getter和setter函数\ngetter：返回值\nsetter：设置新值")]),t._v(" "),a("li",[t._v("不能直接定义，必须使用Object.defineProperty")])])])]),t._v(" "),a("h3",{attrs:{id:"创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建对象"}},[t._v("#")]),t._v(" 创建对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("工厂模式")]),t._v(" "),a("ul",[a("li",[t._v("function createPerson1(name, age) {\nvar obj = new Object();\nobj.name = name;\nobj.age = age;\nobj.sayHello=function(){\nconsole.log("),a("code",[t._v("name: ${this.name}")]),t._v(");\n}\nreturn obj;\n}")])])])]),t._v(" "),a("p",[t._v('var p11 = createPerson1("allx", 12);')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("构造函数模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("步骤\n1）创建一个新对象\n2）将构造函数的作用域（执行环境对象）赋值给新对象（this也就指向这个对象）\n3）执行构造函数中的代码，为新对象添加属性\n4）返回新对象")]),t._v(" "),a("ul",[a("li",[t._v("function Person2(name, age) {\nthis.name = name;\nthis.age = age;\nthis.sayHello = function () {\nconsole.log("),a("code",[t._v("name: ${this.name}")]),t._v(");\n}\n}")])])])])])]),t._v(" "),a("p",[t._v('let p21 = new Person2("allx", 12);')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 把构造函数当做普通函数使用？this会绑定到全局变量上，因为函数中的this在运行时确定，哪个执行环境对象调用该函数，this就指向谁\n- 函数也是对象，所以与属性无二，因此构造函数的实例对象的函数属性都是新创建的，不同实例上的同名函数时不相等的（不是指向同一内存地址）\n")])])]),a("ul",[a("li",[a("p",[t._v("原型模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("每个构造函数都有prototype属性，指针，指向一个对象，是调用构造函数创建的对象实例的原型对象，可以让所有对象实例共享它的属性和方法")]),t._v(" "),a("ul",[a("li",[t._v('function Person3() {}\nPerson3.prototype.name = "allx";\nPerson3.prototype.age = 12;\nPerson3.prototype.sayHello = function () {\nconsole.log('),a("code",[t._v("name: ${this.name}")]),t._v(");\n};")])])])])])]),t._v(" "),a("p",[t._v("let p31 = new Person3();")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 无论何时，都会为新创建的函数对象指定一个prototype属性，该属性指向函数对象的原型对象，原型对象的constructor属性指向该函数对象，使用该函数创建的对象实例的__proto__属性也指向函数对象的原型对象\n- 构造函数与其对象实例并无直接关系\n- Object.getPrototypeOf(p)：返回对象实例p对应的构造函数的原型对象\n- 虽然可以通过对象实例访问原型中的值，但不能修改该值，给对象实例设置与原型属性同名的属性，会在对象实例上新创建属性，屏蔽掉原型上的属性，除非使用delete操作符，才能继续访问原型上的属性\n- hasOwnProperty方法判断一个属性是实例上的还是原型上的\n- in操作符\n\n\t- 单独使用：在给定对象能访问给定属性时返回true，无论该属性在原型上还是实例上\n\t- for in：返回的是所有能通过对象访问、可枚举的属性，无论原型还是实例\n\n- 原型是动态的，每次查找属性都是一次原型链上的搜索，任何原型的修改都会立即反应\n- 原型对象的重写：将构造函数的原型对象指针指向一个新对象，此时需要重写constructor属性\n\n\t- function Person32() {}\n")])])]),a("p",[t._v('Person32.prototype = {\nname: "allx",\nage: 18,\nsayHello: function () {\nconsole.log('),a("code",[t._v("name: ${this.name}")]),t._v(');\n}\n}\nObject.defineProperty(Person32.prototype, "constructor", {\nenumerable: false,\nvalue: Person32\n});')]),t._v(" "),a("p",[t._v("let p32 = new Person32();")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 实例中的指针仅指向原型，不指向构造函数，重写原型对象会切断现有原型与之前任何已存在的对象实例的联系\n- 问题：原型上的属性被实例共享，函数、基本数据类型没有太多问题，但是引用类型数据存在一些问题（引用类型存储的是一个指向堆内存的指针）\n")])])]),a("ul",[a("li",[a("p",[t._v("组合构造函数和原型模式\n混成模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("构造函数定义实例属性和方法\n原型模式定义静态共享方法和属性")]),t._v(" "),a("ul",[a("li",[t._v("function Person4(name, age) {\nthis.name = name;\nthis.age = age;\n}\nPerson4.prototype.sayHello = function () {\nconsole.log("),a("code",[t._v("name: ${this.name}")]),t._v(");\n}")])])])])])]),t._v(" "),a("p",[t._v('let p41 = new Person4("allx", 21);')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("动态原型模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("封装实例属性/方法和静态方法/属性")]),t._v(" "),a("ul",[a("li",[t._v('function Person5(name, age) {\nthis.name = name;\nthis.age = age;\nif (typeof this.sayHello != "function") {\nPerson5.prototype.sayHello = function () {\nconsole.log('),a("code",[t._v("name: ${this.name}")]),t._v(");\n}\n}\n}")])])])])])]),t._v(" "),a("p",[t._v('let p51 = new Person5("allx", 21);')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 第一次创建对象时初始化原型对象，这时不能重写原型对象，避免切断联系\n")])])]),a("ul",[a("li",[a("p",[t._v("寄生构造函数模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("封装创建对象的代码，再返回该对象\n与工厂模式类似，只是是使用new")]),t._v(" "),a("ul",[a("li",[t._v("function Person6(name, age) {\nvar obj = new Object();\nobj.name = name;\nobj.age = age;\nobj.sayHello = function () {\nconsole.log("),a("code",[t._v("name: ${this.name}")]),t._v(");\n}\nreturn obj;\n}")])])])])])]),t._v(" "),a("p",[t._v('let p61 = new Person6("allx", 23);')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 返回的对象与构造函数或者与构造函数的原型属性之间没有关系，构造函数返回的对象与在构造函数外创建的对象没有什么不同\n")])])]),a("ul",[a("li",[a("p",[t._v("稳妥构造函数模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("稳妥对象：没有公共属性，方法也不需要引用this")])]),t._v(" "),a("li",[a("p",[t._v("与寄生构造函数类似，但不引用this，不使用new")]),t._v(" "),a("ul",[a("li",[t._v("function Person7(name, age) {\nvar obj = new Object();\nobj.name = name;\nobj.age = age;\nobj.sayHello = function () {\nconsole.log("),a("code",[t._v("name: ${name}")]),t._v(");\n}\nreturn obj;\n}")])])])])])]),t._v(" "),a("p",[t._v('let p71 = new Person7("allx", 23);')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 返回的对象与构造函数或者与构造函数的原型属性之间没有关系\n")])])]),a("ul",[a("li",[a("p",[t._v("class类模式\nES6语法糖")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("接近传统语言的写法，让对象原型的写法更加清晰、更像面向对象编程的语法，类必须使用new调用，否则会报错")])]),t._v(" "),a("li",[a("p",[t._v("class中的constructor方法就是构造方法，this代表实例对象，方法之间不需要逗号分割，使用时也是使用new命令（与构造函数相同）")]),t._v(" "),a("ul",[a("li",[t._v('class Person8 {\nconstructor(name, age) {\nthis.name = name;\nthis.age = age;\nthis.hobbies = ["jump", "rap"];\n}')])])])]),t._v(" "),a("p",[t._v("sayHello() {\nconsole.log("),a("code",[t._v("name: ${this.name}")]),t._v(");\n}\n}")])])]),t._v(" "),a("p",[t._v('p41 = new Person8("allx", 12);')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 类的数据类型就是函数，类本身就指向构造函数\n- 构造函数的prototype属性，在 ES6 的“类”上面继续存在\n\n\t- 类的所有方法都定义在类的prototype属性上面，在类的实例上面调用方法，其实就是调用原型上的方法\n\t- 由于类的方法都定义在prototype对象上面，所以类的新方法可以添加在prototype对象上面\n\n- 类的内部所有定义的方法，都是不可枚举的（non-enumerable）\n- constructor方法\n\n\t- 类的默认方法，通过new命令生成对象实例时，自动调用该方法，一个类必须有constructor方法，如果没有显式定义，一个空的constructor方法会被默认添加\n\t- 默认返回实例对象（即this），完全可以指定返回另外一个对象\n\n- 类的实例\n\n\t- 实例的属性除非显式定义在其本身（即定义在this对象上），否则都是定义在原型上（即定义在class上）\n\t- 类的所有实例共享一个原型对象\n\n- 取值函数\n")])])]),a("p",[t._v("存值函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t- 存值函数和取值函数是设置在属性的 Descriptor 对象上的\n\n- 类的属性名可使用方括号加表达式\n- class表达式\n\n\t- 采用 Class 表达式，可以写出立即执行的 Class\n\n- 注意点\n\n\t- 类和模块都是默认严格模式\n\t- 类中不存在变量提升\n\t- name属性返回紧跟在class后的类名\n\t- 方法名前加*表示生成函数\n\t- 类中this默认指向类的实例\n\n\t\t- 如果将这个方法提取出来单独使用，this会指向该方法运行时所在的环境（由于 class 内部是严格模式，所以 this 实际指向的是undefined）\n\t\t- 解决方法：\n")])])]),a("p",[t._v("1）在构造方法中绑定this，这样就不会找不到print方法了，\n2）使用箭头函数（箭头函数内部的this总是指向定义时所在的对象），\n3）使用Proxy，获取方法的时候，自动绑定this")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 静态方法\n\n\t- 如果在一个方法前，加上static关键字，就表示该方法不会被实例继承，而是直接通过类来调用，这就称为“静态方法”\n\t- 注意，如果静态方法包含this关键字，这个this指的是类，而不是实例\n\t- 父类的静态方法，可以被子类继承\n\t- 静态方法也可以从super对象上调用的\n\n- 实例属性\n\n\t- 实例属性除了定义在constructor()方法里面的this上面，也可以定义在类的最顶层\n\n\t\t- 所有实例对象自身的属性都定义在类的头部，看上去简洁\n\n- 静态属性\n\n\t- Class 本身的属性，即Class.propName，而不是定义在实例对象（this）上的属性\n\n\t\t- Person8.staticProp=“ppppp”；\n\n\t- 一个提案提供了类的静态属性，写法是在实例属性的前面，加上static关键字\n\n- 私有方法\n")])])]),a("p",[t._v("私有属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t- 只能在类的内部访问的方法和属性，外部不能访问，有利于代码的封装，但 ES6 不提供，只能通过变通方法模拟实现\n\t- 模拟\n\n\t\t- 命名区别\n\t\t- 将私有方法移出模块，因为模块内部的所有方法都是对外可见的\n\t\t- 利用Symbol值的唯一性，将私有方法的名字命名为一个Symbol值\n\n\t- 一个提案，为class加了私有属性。方法是在属性名或方法之前，使用#表示\n\n- new.target\n\n\t- ES6 为new命令引入了一个new.target属性，该属性一般用在构造函数之中，返回new命令作用于的那个构造函数\n\t- 如果构造函数不是通过new命令或Reflect.construct()调用的，new.target会返回undefined，因此这个属性可以用来确定构造函数是怎么调用的\n\t- Class 内部调用new.target，返回当前 Class\n\t- 子类继承父类时，new.target会返回子类\n\n\t\t- 可以写出不能独立使用、必须继承后才能使用的类\n")])])]),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原型链继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("js仅支持实现继承，不支持接口继承，实现继承依靠原型链实现")])]),t._v(" "),a("li",[a("p",[t._v("构造函数、原型、实例的关系：构造函数有一个原型对象，原型对象有一个指向构造函数的指针，实例有一个指向原型对象的指针")])]),t._v(" "),a("li",[a("p",[t._v("让一个原型对象PA等于另一个构造函数B的实例b：PA有一个__proto__指针指向PB，PB有一个constrcutor指针指向B，a可以访问b能访问的所有原型属性和方法")]),t._v(" "),a("ul",[a("li",[t._v("A.prototype=new B();")]),t._v(" "),a("li",[t._v("注意：PA的重写，导致了PA没有指向A的constructor指针属性了")]),t._v(" "),a("li",[t._v("给原型添加方法的语句一定要放在原型对象重写的语句之后")]),t._v(" "),a("li",[t._v("不能使用字面量对象，会切断联系")]),t._v(" "),a("li",[t._v('function Super() {\nthis.name = "name: super";\n}\nSuper.prototype.getSuperName = function () {\nconsole.log(this.name);\n};')])])])])])]),t._v(" "),a("p",[t._v('function Sub() {\nthis.name = "name: sub";\n}\nSub.prototype = new Super();\nSub.prototype.getSubName = function () {\nconsole.log(this.name);\n}')]),t._v(" "),a("p",[t._v("let subInstance = new Sub();\nsubInstance.getSubName();")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 确定实例和原型的关系\n\n\t- isinstanceof\n\n\t\t- 测试实例与原型链中出现过得构造函数\n\n\t- isPrototypeOf\n\n- 存在的问题\n\n\t- 1）包含引用类型值的原型属性会被所有实例共享\n\t- 2）在创建子类型实例的时候，不能向超类型的构造函数传递参数（没有办法在不影响所有对象实例的情况下，给超类型的构造函数传递参数）\n")])])]),a("ul",[a("li",[a("p",[t._v("借用构造函数继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在子类型的构造函数中调用超类型的构造函数（可以向超类型构造函数传递参数）")]),t._v(" "),a("ul",[a("li",[t._v("function Super2(name) {\nthis.name = name;\n}")])])])])])]),t._v(" "),a("p",[t._v('function Sub2() {\nSuper2.call(this, "super name");\nthis.subname = "sub name";\n}\nSub2.prototype.getSubName = function () {\nconsole.log(this.subname);\n}')]),t._v(" "),a("p",[t._v("subInstance = new Sub2();\nsubInstance.getSubName();")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 超类型的方法只能在构造函数内定义，因为在超类原型对象上定义的函数在子类中并不可见\n")])])]),a("ul",[a("li",[a("p",[t._v("组合继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原型链+借用构造函数")]),t._v(" "),a("ul",[a("li",[t._v('function Super3(supername) {\nthis.supername = supername;\nthis.hobbies = ["jump", "rap"];\n}\nSuper3.prototype.getSuperName = function () {\nconsole.log(this.supername);\n}')])])])])])]),t._v(" "),a("p",[t._v('function Sub3() {\nSuper3.call(this, "super name");\nthis.subname = "sub name";\n}\nSub3.prototype = new Super3();\nSub3.prototype.getSubName = function () {\nconsole.log(this.subname);\n}')]),t._v(" "),a("p",[t._v('subInstance = new Sub3();\nsubInstance.getSubName();\nsubInstance.hobbies.unshift("sing");\nconsole.log(subInstance.hobbies);\nconsole.log(subInstance.supername);')]),t._v(" "),a("p",[t._v("let subInstance2 = new Sub3();\nconsole.log(subInstance2.hobbies);")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原型式继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Object.create()")]),t._v(" "),a("ul",[a("li",[t._v("function object(o) {\nfunction F() {}\nF.prototype = o;\nreturn new F();\n}")])])]),t._v(" "),a("li",[a("p",[t._v("第一个参数作为新函数的原型对象\n第二个参数作为新对象的额外属性")]),t._v(" "),a("ul",[a("li",[t._v('let POO = {\nname: "allx",\nhobbies: ["jump", "rap"]\n}\nlet subInstance1 = Object.create(POO);\nsubInstance1.name = "tiger";\nsubInstance1.hobbies.unshift("sing");\nconsole.log(subInstance1.name);\nconsole.log(subInstance1.hobbies);')])])])])])]),t._v(" "),a("p",[t._v("subInstance2 = Object.create(POO);\nconsole.log(subInstance2.name);\nconsole.log(subInstance2.hobbies);")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 包含引用类型的属性始终都会共享相应的内存空间，就像使用原型模式\n")])])]),a("ul",[a("li",[a("p",[t._v("寄生式继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建一个封装继承过程的函数，在其中增强新对象，再返回该对象")]),t._v(" "),a("ul",[a("li",[t._v('function SubFactory(origin) {\nlet obj = Object.create(origin);\nobj.getName = function () {\nconsole.log("name:", this.name);\n}\nreturn obj;\n}')])])])])])]),t._v(" "),a("p",[t._v('POO = {\nname: "tigercheng",\nhobbies: ["jump", "rap"]\n}')]),t._v(" "),a("p",[t._v('subInstance1 = SubFactory(POO);\nsubInstance1.name = "huangcheng";\nconsole.log(subInstance1.name);\nsubInstance1.hobbies.unshift("sing");\nconsole .log(subInstance1.hobbies);')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("寄生组合式继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("组合继承会调用两次超类型构造函数（创建子类型原型、子类型构造函数调用）")])]),t._v(" "),a("li",[a("p",[t._v("通过借用构造函数继承属性，通过原型链混成形式继承方法（最理想的方式）")]),t._v(" "),a("ul",[a("li",[t._v("function inheritPrototype(subtype, supertype) {\nlet prototype = Object.create(supertype);\nprototype.constructor = subtype;\nsubtype.prototype = prototype;\n}")])])])])])]),t._v(" "),a("p",[t._v('function SuperType() {\nthis.supername = "super name";\nthis.hobbies = ["jump", "rap"];\n}')]),t._v(" "),a("p",[t._v('SuperType.prototype.getSuperName = function () {\nconsole.log("name:", this.supername);\n}')]),t._v(" "),a("p",[t._v('function SubType() {\nSuperType.call(this);\nthis.subname = "sub name";\n}')]),t._v(" "),a("p",[t._v('inheritPrototype(SubType, SuperType);\nSubType.prototype.getSubName = function () {\nconsole.log("name:", this.subname);\n}')]),t._v(" "),a("p",[t._v("subInstance1 = new SubType();\nconsole.log(subInstance1);")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 1）创建超类型原型的副本\n")])])]),a("p",[t._v("2）为副本添加constructor属性为子类型\n3）将副本赋值给子类型的原型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("extends类继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("super方法")]),t._v(" "),a("ul",[a("li",[t._v("子类必须在constructor方法中调用super方法，否则新建实例时会报错。子类自己的this对象，必须先通过父类的构造函数完成塑造，得到与父类同样的实例属性和方法，然后再对其进行加工，加上子类自己的实例属性和方法。如果不调用super方法，子类就得不到this对象。")]),t._v(" "),a("li",[t._v("在子类的构造函数中，只有调用super之后，才可以使用this关键字，否则会报错。因为子类实例的构建，基于父类实例，只有super方法才能调用父类实例")])])]),t._v(" "),a("li",[a("p",[t._v("实质")]),t._v(" "),a("ul",[a("li",[t._v("ES5 的继承实质是先创造子类的实例对象this，然后再将父类的方法添加到this上面（Parent.apply(this)）")]),t._v(" "),a("li",[t._v("ES6 的继承实质是先将父类实例对象的属性和方法，加到this上面（所以必须先调用super方法），然后再用子类的构造函数修改this")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_11-bom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-bom"}},[t._v("#")]),t._v(" 11 BOM")]),t._v(" "),a("h3",{attrs:{id:"window"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器窗口的实例")])]),t._v(" "),a("li",[a("p",[t._v("在全局作用域中声明的所有变量和函数，都会变成window对象的成员")])]),t._v(" "),a("li",[a("p",[t._v("大小：window.innerWidth、window.innerHeight（页面视图容器）、window.outerWidth、window.outerHeight（浏览器窗口）")])]),t._v(" "),a("li",[a("p",[t._v("页面视口大小：document.documentElement.clientWidth(Height)、document.body.clientWidth(Height)")])]),t._v(" "),a("li",[a("p",[t._v("open方法：第一个参数url、第二个参数是新窗口命名或[_self, _parent, _top, _blank]其中一个、第三个参数是新窗口的设置属性字符串，返回新窗口的window实例对象，新window有一个opener指针指向调用open方法的window")])]),t._v(" "),a("li",[a("p",[t._v("open方法只能通过用户点击来调用，不然会被拦截（拦截弹出式窗口），settimeout也会被拦截")]),t._v(" "),a("ul",[a("li",[t._v('let btn = document.getElementById("btn");\nbtn.addEventListener("click", () => {\nlet baidu = window.open("https://www.baidu.com", "_blank");\n});\nbtn = null;')])])]),t._v(" "),a("li",[a("p",[t._v("close方法：关闭窗口")])]),t._v(" "),a("li",[a("p",[t._v("setTimeout、clearTimeout、setInterval、clearInterval")]),t._v(" "),a("ul",[a("li",[t._v("使用setTimeout模拟setInterval是一种最佳模式")]),t._v(" "),a("li",[t._v("interval方式是设置两次开始时间间隔，模拟方式是上次结束和下次开始的间隔，更合理")])])]),t._v(" "),a("li",[a("p",[t._v("系统对话框：alert、confirm、prompt")])])]),t._v(" "),a("h3",{attrs:{id:"location"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" location")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("提供与当前窗口中加载的文档相关信息，以及一些导航功能")])]),t._v(" "),a("li",[a("p",[t._v("既是window对象的属性，也是document对象的属性（引用的是同一个）")])]),t._v(" "),a("li",[a("p",[t._v("属性")]),t._v(" "),a("ul",[a("li",[t._v("hash：#及其后的内容")]),t._v(" "),a("li",[t._v("host：服务器名（或IP）和端口号")]),t._v(" "),a("li",[t._v("hostname：服务器名（或IP）")]),t._v(" "),a("li",[t._v("href：完整url，直接修改也行")]),t._v(" "),a("li",[t._v("pathname：路径名")]),t._v(" "),a("li",[t._v("port：端口")]),t._v(" "),a("li",[t._v("search：查询字符串（？及其后）")])])]),t._v(" "),a("li",[a("p",[t._v("url操作")]),t._v(" "),a("ul",[a("li",[t._v("location.assign(url);\nwindow.lovation=url;\nlocation.href=url;")]),t._v(" "),a("li",[t._v("每次修改url（hash除外），页面都会以新url重新加载")]),t._v(" "),a("li",[t._v("每次修改url之后都会在历史记录中生成一条新记录，可以前进或后退来操作历史记录")]),t._v(" "),a("li",[t._v("location.replace(url)方法改变url不会生成记录，且不能回到前一个页面")]),t._v(" "),a("li",[t._v("location.reload(bool)方法重载当前页面，若true则从服务器端重载，不传则可能从浏览器缓存中重载")])])])]),t._v(" "),a("h3",{attrs:{id:"navigator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navigator"}},[t._v("#")]),t._v(" navigator")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器实例")])]),t._v(" "),a("li",[a("p",[t._v("属性")]),t._v(" "),a("ul",[a("li",[t._v("onLine：是否连接了互联网")]),t._v(" "),a("li",[t._v("appName：完整的浏览器名字")]),t._v(" "),a("li",[t._v("userAgent")])])])]),t._v(" "),a("h3",{attrs:{id:"screen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#screen"}},[t._v("#")]),t._v(" screen")]),t._v(" "),a("ul",[a("li",[t._v("显式器的信息")])]),t._v(" "),a("h3",{attrs:{id:"history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("记录上网历史记录，是window对象的属性，所以与相对应的window所关联")])]),t._v(" "),a("li",[a("p",[t._v("go(n)：前进或后退n个页面")]),t._v(" "),a("ul",[a("li",[t._v("go(1) = forward()")]),t._v(" "),a("li",[t._v("go(-1) = back()")])])]),t._v(" "),a("li",[a("p",[t._v("length属性：记录历史记录的数量")])])]),t._v(" "),a("h2",{attrs:{id:"_12-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-dom"}},[t._v("#")]),t._v(" 12 DOM")]),t._v(" "),a("h3",{attrs:{id:"文档对象模型：针对html、xml文档的api（应用程序编程接口）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型：针对html、xml文档的api（应用程序编程接口）"}},[t._v("#")]),t._v(" 文档对象模型：针对HTML、XML文档的API（应用程序编程接口）")]),t._v(" "),a("h3",{attrs:{id:"js中所有节点都继承自node，nodetype属性表明节点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中所有节点都继承自node，nodetype属性表明节点类型"}},[t._v("#")]),t._v(" js中所有节点都继承自Node，nodeType属性表明节点类型")]),t._v(" "),a("ul",[a("li",[t._v("元素节点（element）：1，对应常量Node.ELEMENT_NODE")]),t._v(" "),a("li",[t._v("属性节点（attr）：2，对应常量Node.ATTRIBUTE_NODE")]),t._v(" "),a("li",[t._v("文本节点（text）：3，对应常量Node.TEXT_NODE")]),t._v(" "),a("li",[t._v("注释节点（Comment）：8，对应常量Node.COMMENT_NODE")]),t._v(" "),a("li",[t._v("文档节点（document）：9，对应常量Node.DOCUMENT_NODE")]),t._v(" "),a("li",[t._v("文档类型节点（DocumentType）：10，对应常量Node.DOCUMENT_TYPE_NODE")]),t._v(" "),a("li",[t._v("文档片断节点（DocumentFragment）：11，对应常量Node.DOCUMENT_FRAGMENT_NODE")])]),t._v(" "),a("h3",{attrs:{id:"childnodes：一个nodelist类数组对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#childnodes：一个nodelist类数组对象"}},[t._v("#")]),t._v(" childNodes：一个NodeList类数组对象")]),t._v(" "),a("ul",[a("li",[t._v("NodeList：基于DOM结构动态执行查询，DOM结构的变化会自动反映在NodeList对象中")])]),t._v(" "),a("h3",{attrs:{id:"parentnode：父节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parentnode：父节点"}},[t._v("#")]),t._v(" parentNode：父节点")]),t._v(" "),a("h3",{attrs:{id:"firstchild、lastchild"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firstchild、lastchild"}},[t._v("#")]),t._v(" firstChild、lastChild")]),t._v(" "),a("h3",{attrs:{id:"previoussibling、nextsibling：前后节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#previoussibling、nextsibling：前后节点"}},[t._v("#")]),t._v(" previousSibling、nextSibling：前后节点")]),t._v(" "),a("h3",{attrs:{id:"操作节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作节点"}},[t._v("#")]),t._v(" 操作节点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("appendChild(node)：向childNodes列表尾端添加一个节点")])]),t._v(" "),a("li",[a("p",[t._v("insertBefore(node, nextnode)：在某个节点之前插入，如果第二个参数为null，则是在尾端插入")])]),t._v(" "),a("li",[a("p",[t._v("replaceChild(newNode, oldNode)：替换节点")]),t._v(" "),a("ul",[a("li",[t._v("被替换节点的所有关系指针会被复制给新节点，被替换的节点仍是文档所有，但在文档中没有位置，考虑手动回收")])])]),t._v(" "),a("li",[a("p",[t._v("removeChild(node)：移除节点")]),t._v(" "),a("ul",[a("li",[t._v("仍是文档所有，但在文档中没有位置，考虑手动回收")])])]),t._v(" "),a("li",[a("p",[t._v("cloneChild：复制节点，是否深浅")])]),t._v(" "),a("li",[a("p",[t._v("normalize：删除空文本节点，合并相邻文本节点")])])]),t._v(" "),a("h3",{attrs:{id:"document类型："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document类型："}},[t._v("#")]),t._v(" Document类型：")]),t._v(" "),a("p",[t._v("document")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("文档")])]),t._v(" "),a("li",[a("p",[t._v("属性")]),t._v(" "),a("ul",[a("li",[t._v("title：标题，能设置")]),t._v(" "),a("li",[t._v("URL：完整的URL")]),t._v(" "),a("li",[t._v("domain：包含页面的文档，能设置，但只能设置为更大的域")]),t._v(" "),a("li",[t._v("referrer：来源页面的URL")])])]),t._v(" "),a("li",[a("p",[t._v("查找元素")]),t._v(" "),a("ul",[a("li",[t._v("getElementById：单个元素")]),t._v(" "),a("li",[t._v("getElementsByTagName：HTMLCollection，动态集合类似数组")])])])]),t._v(" "),a("h3",{attrs:{id:"element类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element类型"}},[t._v("#")]),t._v(" Element类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所有HTML元素都是HTMLElement类型，HTMLElement类型继承自Element类型")])]),t._v(" "),a("li",[a("p",[t._v("属性")]),t._v(" "),a("ul",[a("li",[t._v("id：元素在文档中的唯一标识符")]),t._v(" "),a("li",[t._v("title：附加说明信息，工具提示条")]),t._v(" "),a("li",[t._v("className：元素指定的CSS类")])])]),t._v(" "),a("li",[a("p",[t._v("取特性")]),t._v(" "),a("ul",[a("li",[t._v("getAttribute：id、title、class")]),t._v(" "),a("li",[t._v("不区分大小写，")]),t._v(" "),a("li",[t._v("自定义特性需要加上data-前缀，还只能通过getAttribute来取")])])]),t._v(" "),a("li",[a("p",[t._v("设置特性")]),t._v(" "),a("ul",[a("li",[t._v("setAtribute")]),t._v(" "),a("li",[t._v("不区分大小写，统一被设为小写")])])]),t._v(" "),a("li",[a("p",[t._v("删除特性")]),t._v(" "),a("ul",[a("li",[t._v("removeAttribute")])])]),t._v(" "),a("li",[a("p",[t._v("attributes属性")]),t._v(" "),a("ul",[a("li",[t._v("NamedNodeMap，动态集合，类似数组")])])]),t._v(" "),a("li",[a("p",[t._v("创建元素")]),t._v(" "),a("ul",[a("li",[t._v("document.createElement()：参数为要创建的元素的标签（不区分大小写），创建后的元素节点还在内存中，尚未添加到文档树中")]),t._v(" "),a("li",[t._v("一旦将元素添加到文档树中，浏览器就会立即显式这个元素，对其的修改会实时反映")])])]),t._v(" "),a("li",[a("p",[t._v("元素的子节点：不同浏览器会有差别（空白符）")])])]),t._v(" "),a("h3",{attrs:{id:"text类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text类型"}},[t._v("#")]),t._v(" Text类型")]),t._v(" "),a("ul",[a("li",[t._v("文本中的HTML会被自动转义")]),t._v(" "),a("li",[t._v("创建：document.createTextNode，传入文本内容（HTML会自动转义）")]),t._v(" "),a("li",[t._v("normalize：规范化文本节点")])]),t._v(" "),a("h3",{attrs:{id:"comment类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comment类型"}},[t._v("#")]),t._v(" Comment类型")]),t._v(" "),a("ul",[a("li",[t._v("注释节点")])]),t._v(" "),a("h3",{attrs:{id:"documentfragment类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment类型"}},[t._v("#")]),t._v(" DocumentFragment类型")]),t._v(" "),a("ul",[a("li",[t._v("文档片段，“轻量级”的文档，可以包含和控制节点，但不像文档那样占据额外的资源，不能直接添加进文档，做为仓库，保存将要添加进文档的节点")]),t._v(" "),a("li",[t._v("创建：document.createDocumentFragment()")]),t._v(" "),a("li",[t._v("如果将文档中的节点添加到文档片段中，那么文档树就移除该节点，浏览器就看不见该节点。添加到文档片段的节点不属于文档树。使用appendChild、insertBefore方法将文档片段中内容添加到文档树中时，将文档片段作为参数，其实是将文档片段的所有子节点移除再添加到文档树相应位置上。文档片段永远不会成为文档树的一部分。")]),t._v(" "),a("li",[t._v("使用文档片段一次性添加多个元素，可以避免浏览器反复渲染")])]),t._v(" "),a("h3",{attrs:{id:"script动态脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script动态脚本"}},[t._v("#")]),t._v(" script动态脚本")]),t._v(" "),a("h3",{attrs:{id:"link动态样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link动态样式"}},[t._v("#")]),t._v(" link动态样式")]),t._v(" "),a("h3",{attrs:{id:"选择符api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择符api"}},[t._v("#")]),t._v(" 选择符API")]),t._v(" "),a("ul",[a("li",[t._v("querySelector、querySelectorAll：css解析，性能更好，后者返回NodeList")])]),t._v(" "),a("h3",{attrs:{id:"元素遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素遍历"}},[t._v("#")]),t._v(" 元素遍历")]),t._v(" "),a("ul",[a("li",[t._v("childElementCount、firstElementChild、lastelementChild、previousElementSibling、nextElementSibling")])]),t._v(" "),a("h3",{attrs:{id:"类的扩充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的扩充"}},[t._v("#")]),t._v(" 类的扩充")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("getElementsByClassName：依据类名选择")])]),t._v(" "),a("li",[a("p",[t._v("classList")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOMTokenList类型的实例")])]),t._v(" "),a("li",[a("p",[t._v("add：添加css")]),t._v(" "),a("ul",[a("li",[t._v('div.classList.add("newcss")')])])]),t._v(" "),a("li",[a("p",[t._v("contains：是否包含")])]),t._v(" "),a("li",[a("p",[t._v("remove：移除")])]),t._v(" "),a("li",[a("p",[t._v("toggle：存在就删除，没有就添加")])])])])]),t._v(" "),a("h3",{attrs:{id:"焦点管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#焦点管理"}},[t._v("#")]),t._v(" 焦点管理")]),t._v(" "),a("ul",[a("li",[t._v("document.activeElement：始终引用文档中当前焦点元素")]),t._v(" "),a("li",[t._v("document.hasFocus：元素是否获得了焦点")])]),t._v(" "),a("h3",{attrs:{id:"readystate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readystate"}},[t._v("#")]),t._v(" readyState")]),t._v(" "),a("ul",[a("li",[t._v("document的属性")]),t._v(" "),a("li",[t._v("loading：正在加载文档")]),t._v(" "),a("li",[t._v("complete：文档已经加载完成")])]),t._v(" "),a("h3",{attrs:{id:"自定义数据属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义数据属性"}},[t._v("#")]),t._v(" 自定义数据属性")]),t._v(" "),a("ul",[a("li",[t._v("前缀data-")]),t._v(" "),a("li",[t._v("可以通过元素的dataset属性访问，访问时点运算符去掉前缀")])]),t._v(" "),a("h3",{attrs:{id:"插入标记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入标记"}},[t._v("#")]),t._v(" 插入标记")]),t._v(" "),a("ul",[a("li",[t._v("innerHTML：返回或设置元素的所有子孙节点对应的HTML标记；返回的字符串是根据原字符串创建DOM树经序列化的结果")]),t._v(" "),a("li",[t._v("outerHTML：在innerHTML的基础上还有调用元素的HTML标记，设置时会完全替换调用元素")]),t._v(" "),a("li",[t._v("insertAdjentHTML")])]),t._v(" "),a("h3",{attrs:{id:"内存性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存性能"}},[t._v("#")]),t._v(" 内存性能")]),t._v(" "),a("ul",[a("li",[t._v("元素与其绑定事件一直留在内存中会对性能有影响，在使用上面三种插入标记方法时需要先手动删除原元素的所有事件个对象属性")]),t._v(" "),a("li",[t._v("innerHTML与原始的创建再设置关系方法相比，效率高得多，因为设置innerHTML时会创建一个HTML解析器（c++编写），但是频繁地创建和销毁HTML解析器也会带来性能问题，最好是先设置HTML标记字符串，再一次性设置innerHTML")])]),t._v(" "),a("h3",{attrs:{id:"滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滚动"}},[t._v("#")]),t._v(" 滚动")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("scrollIntoView")]),t._v(" "),a("ul",[a("li",[t._v("true：调用元素与视口顶部对齐；\nfalse：底部对齐\n为元素设置焦点也可以使得浏览器滚动显示元素")])])]),t._v(" "),a("li",[a("p",[t._v("scrollIntoViewIfNeeded")]),t._v(" "),a("ul",[a("li",[t._v("不可见时调用可以选择是否居中显示元素")])])]),t._v(" "),a("li",[a("p",[t._v("scrollByLines")]),t._v(" "),a("ul",[a("li",[t._v("按行向前或后滚动n行")])])]),t._v(" "),a("li",[a("p",[t._v("scrollByPages")]),t._v(" "),a("ul",[a("li",[t._v("按页面高度向前或后滚动n页")])])])]),t._v(" "),a("h3",{attrs:{id:"元素样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素样式"}},[t._v("#")]),t._v(" 元素样式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HTML元素在js中都有一个对应的style属性，是CSSStyleDeclaration的实例，包含元素style特性指定的样式，不包含外部样式表或嵌入样式表层叠的属性，点运算短线转驼峰或方括号")])]),t._v(" "),a("li",[a("p",[t._v("获取层叠计算来的样式：getComputedStyle()，接收两个参数：要计算的元素、伪元素字符串（没有就是null）。计算属性只读")]),t._v(" "),a("ul",[a("li",[t._v("let style=document.getComputedStyle(div,null);\nstyle.backgroundColor;")])])]),t._v(" "),a("li",[a("p",[t._v("样式表")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("CSSStyleSheet类型表示样式表，\nlink元素和style元素中的样式，\n只读")]),t._v(" "),a("ul",[a("li",[t._v("disable：可设置，是否禁用样式表")]),t._v(" "),a("li",[t._v("href：link样式表的url")]),t._v(" "),a("li",[t._v("parentStyleSheet：@import导入的指针")]),t._v(" "),a("li",[t._v("CSSRules：样式表中包含的样式规则集合")])])]),t._v(" "),a("li",[a("p",[t._v("CSS规则CSSRule")])])])]),t._v(" "),a("li",[a("p",[t._v("度量")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("偏移量offset")]),t._v(" "),a("ul",[a("li",[t._v("包括元素在屏幕上占用的所有可见空间。高度、宽度、内边距（没有外边距）、边框、滚动条")]),t._v(" "),a("li",[t._v("offsetHeight：垂直方向占用空间（像素）")]),t._v(" "),a("li",[t._v("offsetWidth：水平方向占用空间（像素）")]),t._v(" "),a("li",[t._v("offsetTop：元素上外边框与包含元素的上内边框的像素距离")]),t._v(" "),a("li",[t._v("offsetLeft：元素左外边框与包含元素的左内边框的像素距离")]),t._v(" "),a("li",[t._v("offsetParent：包含元素，与parentNode相同")]),t._v(" "),a("li",[t._v("想知道在页面上的偏移量可以层层递归")]),t._v(" "),a("li",[t._v("偏移量属性只读，每次访问都会重新计算，保存到变量中可以优化性能")])])]),t._v(" "),a("li",[a("p",[t._v("客户区client")]),t._v(" "),a("ul",[a("li",[t._v("元素内容及其内边距所占据的空间")]),t._v(" "),a("li",[t._v("clientHeight：客户区高度")]),t._v(" "),a("li",[t._v("clientWidth：客户区宽度")])])]),t._v(" "),a("li",[a("p",[t._v("滚动区scroll")]),t._v(" "),a("ul",[a("li",[t._v("包含滚动内容的元素的大小")]),t._v(" "),a("li",[t._v("scrollHeight：没有滚动条时，元素内容总高度")]),t._v(" "),a("li",[t._v("scrollWidth：没有滚动条时，元素内容总宽度")]),t._v(" "),a("li",[t._v("scrollTop：隐藏在元素内容区域上方的像素数，上内边框之上，即不可见，可设置以滚动")]),t._v(" "),a("li",[t._v("scrollLeft：隐藏在元素内容区域左方的像素数，左内边框之左，即不可见，可设置以滚动")]),t._v(" "),a("li",[t._v("在确定文档总高度时，取scrollHeight、clientHeight中大者才精确")])])]),t._v(" "),a("li",[a("p",[t._v("元素大小")]),t._v(" "),a("ul",[a("li",[t._v("getBoundingClientRect方法返回一个矩形对象，left、top、right、bottom，给出了元素在页面中相对于视口的位置")])])])])])]),t._v(" "),a("h3",{attrs:{id:"元素遍历-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素遍历-2"}},[t._v("#")]),t._v(" 元素遍历")]),t._v(" "),a("ul",[a("li",[t._v("NodeIterator")]),t._v(" "),a("li",[t._v("TreeWalker")])]),t._v(" "),a("h3",{attrs:{id:"范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范围"}},[t._v("#")]),t._v(" 范围")]),t._v(" "),a("ul",[a("li",[t._v("选择DOM结构中特定部分进行操作")])]),t._v(" "),a("h2",{attrs:{id:"_13-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-事件"}},[t._v("#")]),t._v(" 13 事件")]),t._v(" "),a("h3",{attrs:{id:"js与html的交互是通过事件来完成的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js与html的交互是通过事件来完成的"}},[t._v("#")]),t._v(" JS与HTML的交互是通过事件来完成的")]),t._v(" "),a("h3",{attrs:{id:"观察者模式：使用侦听器预订事件，事件发生就执行相应代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式：使用侦听器预订事件，事件发生就执行相应代码"}},[t._v("#")]),t._v(" 观察者模式：使用侦听器预订事件，事件发生就执行相应代码")]),t._v(" "),a("h3",{attrs:{id:"事件流："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件流："}},[t._v("#")]),t._v(" 事件流：")]),t._v(" "),a("p",[t._v("描述从页面中接收事件的顺序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("事件冒泡流")]),t._v(" "),a("ul",[a("li",[t._v("由嵌套最深的元素先接收再层层向上传播，微观到宏观")])])]),t._v(" "),a("li",[a("p",[t._v("事件捕获流")]),t._v(" "),a("ul",[a("li",[t._v("在事件到达预定目标前捕获，不具体到具体，宏观到微观")])])])]),t._v(" "),a("h3",{attrs:{id:"事件流三阶段："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件流三阶段："}},[t._v("#")]),t._v(" 事件流三阶段：")]),t._v(" "),a("p",[t._v("事件捕获阶段、\n处于目标阶段、\n事件冒泡阶段")]),t._v(" "),a("h3",{attrs:{id:"事件处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件处理程序"}},[t._v("#")]),t._v(" 事件处理程序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HTML事件处理")]),t._v(" "),a("ul",[a("li",[t._v("on开头的元素特性")]),t._v(" "),a("li",[t._v("HTML与JS紧密耦合，不适合")])])]),t._v(" "),a("li",[a("p",[t._v("DOM0级事件处理")]),t._v(" "),a("ul",[a("li",[t._v("div.onclick=function(){};")]),t._v(" "),a("li",[t._v("this引用当前元素")]),t._v(" "),a("li",[t._v("在事件冒泡阶段被处理")]),t._v(" "),a("li",[t._v("设为null即可删除")])])]),t._v(" "),a("li",[a("p",[t._v("DOM2级事件处理")]),t._v(" "),a("ul",[a("li",[t._v("addEventListener：添加，可多次添加")]),t._v(" "),a("li",[t._v("removeEventListener：移除指定函数名的函数，无法移除匿名")]),t._v(" "),a("li",[t._v("三个参数：事件名、事件处理函数、是捕获否冒泡")])])])]),t._v(" "),a("h3",{attrs:{id:"事件对象event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件对象event"}},[t._v("#")]),t._v(" 事件对象event")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("触发DOM事件时，产生事件对象，可以传入事件处理程序，包含所有与事件有关的信息，事件的元素、事件的类型、其他信息")])]),t._v(" "),a("li",[a("p",[t._v("属性/方法\n只读")]),t._v(" "),a("ul",[a("li",[t._v("eventPhase：事件所处阶段，1捕获，2目标，3冒泡")]),t._v(" "),a("li",[t._v("cancelable：是否可以取消默认行为")]),t._v(" "),a("li",[t._v("preventDefault()：取消事件默认行为，cancelable为true时可用")]),t._v(" "),a("li",[t._v("stopImmediatePropagation()：取消事件的进一步捕获或冒泡，同时组织任何事件处理程序调用")]),t._v(" "),a("li",[t._v("stopPropagation()：取消进一步的捕获或冒泡")]),t._v(" "),a("li",[t._v("target：事件目标元素，具体微观的元素")]),t._v(" "),a("li",[t._v("currentTarget：当前正在处理事件的元素，this")])])]),t._v(" "),a("li",[a("p",[t._v("只存在于事件处理期间，执行完毕就被销毁")])])]),t._v(" "),a("h3",{attrs:{id:"事件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件类型"}},[t._v("#")]),t._v(" 事件类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("UI事件")]),t._v(" "),a("ul",[a("li",[t._v("用户与页面元素交互")]),t._v(" "),a("li",[t._v("load：页面完全加载后触发（图片、JS、CSS）")]),t._v(" "),a("li",[t._v("unload：文档被完全卸载后触发，常用于清除引用，避免内存泄漏")]),t._v(" "),a("li",[t._v("resize：浏览器窗口大小被调整时触发，重复触发")]),t._v(" "),a("li",[t._v("scroll：属于window对象，但是实际是表示相应元素，重复触发")])])]),t._v(" "),a("li",[a("p",[t._v("焦点事件")]),t._v(" "),a("ul",[a("li",[t._v("获得或失去焦点")]),t._v(" "),a("li",[t._v("blur：失去焦点触发，不冒泡")]),t._v(" "),a("li",[t._v("focus：获得焦点触发，不冒泡")])])]),t._v(" "),a("li",[a("p",[t._v("鼠标、滚轮事件")]),t._v(" "),a("ul",[a("li",[t._v("鼠标或滚轮操作")]),t._v(" "),a("li",[t._v("click：左键单击或回车触发")]),t._v(" "),a("li",[t._v("dblclick：双击鼠标左键")]),t._v(" "),a("li",[t._v("mousedown：按下任意鼠标按钮触发")]),t._v(" "),a("li",[t._v("mouseenter：鼠标首次移入元素范围时触发，不冒泡")]),t._v(" "),a("li",[t._v("mouseleave：鼠标移出元素范围，不冒泡")]),t._v(" "),a("li",[t._v("mousemove：鼠标在元素范围内移动，重复触发")]),t._v(" "),a("li",[t._v("mouseout：鼠标移出元素，移入另一个元素（父或子元素）")]),t._v(" "),a("li",[t._v("mouseover：鼠标从外部首次移入另一个元素边界时触发")]),t._v(" "),a("li",[t._v("mouseup：释放鼠标按钮时触发")]),t._v(" "),a("li",[t._v("mousewheel：鼠标滚轮事件，wheelData属性前滚是120的倍数，后滚是-120的倍数")]),t._v(" "),a("li",[t._v("在一个元素上相机触发mousedown和mouseup才会触发click，任一取消都不会触发click，阻止两次click触发就不会触发dblclick")]),t._v(" "),a("li",[t._v("客户区坐标位置：clientX、clientY，鼠标的水平和垂直坐标")]),t._v(" "),a("li",[t._v("页面坐标位置：pageX、pageY，在页面中的什么位置，没有滚动时，与客户区坐标相等")]),t._v(" "),a("li",[t._v("屏幕坐标位置：screenX、screenY，显示器屏幕的位置坐标")]),t._v(" "),a("li",[t._v("修改键：bool值，shiftKey、ctrlKey、altKey、metaKey（windows下是windows键），检测以上值就可以知道是否同时按下了")]),t._v(" "),a("li",[t._v("相关元素relatedTarget：mouseover、mouseout事件发生时，另一个与事件有关的元素")]),t._v(" "),a("li",[t._v("鼠标按钮：0主鼠标按钮、1中间滚轮按钮、2右边鼠标按钮，mousedown、mouseup")])])]),t._v(" "),a("li",[a("p",[t._v("键盘、文本事件")]),t._v(" "),a("ul",[a("li",[t._v("键盘操作、在文档中输入文本")]),t._v(" "),a("li",[t._v("keydown：按下键盘按键触发，按住不放会重复触发")]),t._v(" "),a("li",[t._v("keypress：按下键盘按键触发，按住不放会重复触发")]),t._v(" "),a("li",[t._v("keyup：释放键盘按键时触发")]),t._v(" "),a("li",[t._v("textInput：keyPress的补充，在文本显式之前拦截文本，只在可编辑区域触发，事件的data属性就是用户输入的字符串，inputMethod属性表示文本输入到输入框中的方式")]),t._v(" "),a("li",[t._v("keyCode属性：键码，keydown、keyup时")])])]),t._v(" "),a("li",[a("p",[t._v("合成事件\n仅IE支持")]),t._v(" "),a("ul",[a("li",[t._v("为IME（Input Method Editor，输入法编辑器）输入字符时触发")]),t._v(" "),a("li",[t._v("compositionstart：打开IME输入开始，data表示正在编辑的文本（被选中要替换的文本）")]),t._v(" "),a("li",[t._v("compositionupdate：插入新字符，data：正插入的字符")]),t._v(" "),a("li",[t._v("compositionend：关闭IME输入结束，此次插入的所有字符")])])]),t._v(" "),a("li",[a("p",[t._v("变动事件")]),t._v(" "),a("ul",[a("li",[t._v("DOM结构发生变化时触发")])])]),t._v(" "),a("li",[a("p",[t._v("HTML事件")]),t._v(" "),a("ul",[a("li",[t._v("contextmenu事件：右键调出上下文菜单，可取消默认行为，冒泡")]),t._v(" "),a("li",[t._v("beforeunload事件：浏览器卸载页面前触发，返回bool")]),t._v(" "),a("li",[t._v("hashchange事件：url的hash改变时触发")])])]),t._v(" "),a("li",[a("p",[t._v("设备事件")]),t._v(" "),a("ul",[a("li",[t._v("orientationchange事件：屏幕的横纵模式改变")]),t._v(" "),a("li",[t._v("deviceorientation事件：三维模式")])])]),t._v(" "),a("li",[a("p",[t._v("触摸、手势事件")])]),t._v(" "),a("li",[a("p",[t._v("拖放事件")]),t._v(" "),a("ul",[a("li",[t._v("拖放时，依次触发：dragstart、drag、dragend")]),t._v(" "),a("li",[t._v("dragstart：鼠标按下开始移动")]),t._v(" "),a("li",[t._v("drag：dragstart事件触发之后触发，类似mousemove，重复触发，mousemove也会触发")]),t._v(" "),a("li",[t._v("dragend：鼠标停止移动触发")]),t._v(" "),a("li",[t._v("拖放到有效目标上时，依次触发：dragenter、dragover、dragleave或drop")]),t._v(" "),a("li",[t._v("重写dragenter和dragover方法就可以将一个元素转为一个放置目标")]),t._v(" "),a("li",[t._v("dataTransform：拖放事件对象的属性，setData、getData")])])])]),t._v(" "),a("h3",{attrs:{id:"内存性能-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存性能-2"}},[t._v("#")]),t._v(" 内存性能")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("添加到页面上的事件处理程序数量直接关系到页面的整体运行性能。1）函数都会对象，会占用内存；2）先指定所有事件处理程序会延迟页面的交互就绪时间")])]),t._v(" "),a("li",[a("p",[t._v("事件委托：利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件，如给ul添加点击事件，再通过检测target.id确定点击的是哪一个子li")]),t._v(" "),a("ul",[a("li",[t._v("给document添加事件委托，如：click、mousedown、mouseup、keypress、keydown、keyup")])])]),t._v(" "),a("li",[a("p",[t._v("在不需要的时候移除事件处理程序，因为事件与元素之间的连接越多，页面执行越慢")])]),t._v(" "),a("li",[a("p",[t._v("卸载页面时，没有清理干净事件处理程序，也会导致空事件处理程序，其滞留在内存中，影响性能，页面卸载前，移除所有事件处理程序")])])]),t._v(" "),a("h3",{attrs:{id:"模拟事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟事件"}},[t._v("#")]),t._v(" 模拟事件")]),t._v(" "),a("h2",{attrs:{id:"_14-表单脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-表单脚本"}},[t._v("#")]),t._v(" 14 表单脚本")]),t._v(" "),a("h3",{attrs:{id:"htmlformelement类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#htmlformelement类型"}},[t._v("#")]),t._v(" HTMLFormElement类型")]),t._v(" "),a("h3",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("submit事件：提交表单，只要有type=submit的控件，回车就能提交，但作为默认行为能被阻止，避免重复提交：禁用按钮、取消submit事件")])]),t._v(" "),a("li",[a("p",[t._v("reset事件：重置表单，type=reset，控件恢复默认值或空")])]),t._v(" "),a("li",[a("p",[t._v("elements：表单字段，通过位置或name特性寻找相应的表单元素")])]),t._v(" "),a("li",[a("p",[t._v("表单元素属性：disabled、form、name、readOnly、tabIndex、type、value")])]),t._v(" "),a("li",[a("p",[t._v("最好是在submit事件中防止用户重复提交表单")])]),t._v(" "),a("li",[a("p",[t._v("方法：focus、blur")])]),t._v(" "),a("li",[a("p",[t._v("事件：focus、change、blur")]),t._v(" "),a("ul",[a("li",[t._v("输入框元素只有失去焦点且value值改变才触发change")])])])]),t._v(" "),a("h3",{attrs:{id:"文本框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本框"}},[t._v("#")]),t._v(" 文本框")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("选择文本：select()；选择所有文本；方便在focus时选择所有文本再替换")])]),t._v(" "),a("li",[a("p",[t._v("选择事件：选择文本后触发")])]),t._v(" "),a("li",[a("p",[t._v("取得选择的文本：先创建范围，再提取文本")])]),t._v(" "),a("li",[a("p",[t._v("过滤输入")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("屏蔽字符：检测输入的字符再阻止keypress事件默认行为（禁止复制粘贴的键位）")])]),t._v(" "),a("li",[a("p",[t._v("操作剪贴板")]),t._v(" "),a("ul",[a("li",[t._v("beforecopy：发生复制操作前触发")]),t._v(" "),a("li",[t._v("copy：复制操作时触发")]),t._v(" "),a("li",[t._v("beforecut：剪切前触发")]),t._v(" "),a("li",[t._v("cut：剪切时触发")]),t._v(" "),a("li",[t._v("beforepaste：粘贴前触发")]),t._v(" "),a("li",[t._v("paste：粘贴时触发")]),t._v(" "),a("li",[t._v("clipboardData：剪贴板数据对象，最好是在剪切板事件触发时使用，getData（数据类型）、setData（数据类型、数据）、clearData方法")])])])])]),t._v(" "),a("li",[a("p",[t._v("自动切换焦点")])]),t._v(" "),a("li",[a("p",[t._v("HTML5约束验证")]),t._v(" "),a("ul",[a("li",[t._v("必填字段、输入类型、数值范围、输入模式、检测有效性、禁用验证")])])])]),t._v(" "),a("h3",{attrs:{id:"选择框"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择框"}},[t._v("#")]),t._v(" 选择框")]),t._v(" "),a("ul",[a("li",[t._v("选择选项")]),t._v(" "),a("li",[t._v("添加选项")]),t._v(" "),a("li",[t._v("移除选项")]),t._v(" "),a("li",[t._v("移动和重排选项")])]),t._v(" "),a("h3",{attrs:{id:"表单序列化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单序列化"}},[t._v("#")]),t._v(" 表单序列化")]),t._v(" "),a("h3",{attrs:{id:"富文本编辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#富文本编辑"}},[t._v("#")]),t._v(" 富文本编辑")]),t._v(" "),a("p",[t._v("WYSIWYG\n（what you see is what you get）")]),t._v(" "),a("ul",[a("li",[t._v("designMode：on使得HTML页面可编辑，off")]),t._v(" "),a("li",[t._v("contenteditable：true打开，false关闭，inherit继承，任何元素")]),t._v(" "),a("li",[t._v("操作富文本：document.execCommand方法：命令、是否提供用户界面、值，")]),t._v(" "),a("li",[t._v("富文本选区")]),t._v(" "),a("li",[t._v("富文本的内容在提交至服务器之前最好复制到表单字段中")])]),t._v(" "),a("h2",{attrs:{id:"_15-canvas绘图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-canvas绘图"}},[t._v("#")]),t._v(" 15 canvas绘图")]),t._v(" "),a("h3",{attrs:{id:"基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本"}},[t._v("#")]),t._v(" 基本")]),t._v(" "),a("ul",[a("li",[t._v("使用前先设置width和height，指定可绘图区域大小；绘图需要取得绘图上下文（2d）;toDataURL导出canvas的指定MIME图像")])]),t._v(" "),a("h3",{attrs:{id:"_2d上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2d上下文"}},[t._v("#")]),t._v(" 2D上下文")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("坐标：原点00位于canvas的左上角")])]),t._v(" "),a("li",[a("p",[t._v("填充和描边")]),t._v(" "),a("ul",[a("li",[t._v("fillStyle、strokeStyle")])])]),t._v(" "),a("li",[a("p",[t._v("绘制矩形")]),t._v(" "),a("ul",[a("li",[t._v("fillRect、clearRect")]),t._v(" "),a("li",[t._v("lineWidth、lineCap、lineJoin")])])]),t._v(" "),a("li",[a("p",[t._v("绘制路径")]),t._v(" "),a("ul",[a("li",[t._v("beginPath：开始绘制新路径")]),t._v(" "),a("li",[t._v("arc：绘制弧线，x、y、半径、开始弧度、结束弧度、是否逆时针")]),t._v(" "),a("li",[t._v("arcTo：从上一点开始绘制弧线，经过点x、y、终点x、y、半径")]),t._v(" "),a("li",[t._v("bezierCurveTo：从上一点开始绘制二次曲线，控制点1x、y、控制点2x、y、终点x、y")]),t._v(" "),a("li",[t._v("lineTo：从上一点开始绘制直线，终点x、y")]),t._v(" "),a("li",[t._v("moveTo：移动绘图点，不画线，终点x、y")]),t._v(" "),a("li",[t._v("quadraticCurveTo：绘制一条二次曲线，控制点x、y、终点x、y")]),t._v(" "),a("li",[t._v("rect：左上角x、y、宽、高")]),t._v(" "),a("li",[t._v("closePath：关闭路径的绘制")]),t._v(" "),a("li",[t._v("fill：填充绘制的路径")]),t._v(" "),a("li",[t._v("stroke：对路径描边")]),t._v(" "),a("li",[t._v("clip：剪切路径")])])]),t._v(" "),a("li",[a("p",[t._v("绘制文本")]),t._v(" "),a("ul",[a("li",[t._v("fillText、strokeText")]),t._v(" "),a("li",[t._v("font、textAlign、textBaseline")]),t._v(" "),a("li",[t._v("measureText：文本的测量")])])]),t._v(" "),a("li",[a("p",[t._v("变换")]),t._v(" "),a("ul",[a("li",[t._v("rotate：绕原点旋转图像")]),t._v(" "),a("li",[t._v("scale：缩放")]),t._v(" "),a("li",[t._v("translate：移动")]),t._v(" "),a("li",[t._v("transform：修改变换矩阵，与原来的相乘")]),t._v(" "),a("li",[t._v("setTransform：设置变换矩阵值")]),t._v(" "),a("li",[t._v("save：保存变换，栈结构")]),t._v(" "),a("li",[t._v("restore：回退变换，栈结构")])])]),t._v(" "),a("li",[a("p",[t._v("绘制图像")]),t._v(" "),a("ul",[a("li",[t._v("drawImage：需要同源")]),t._v(" "),a("li",[t._v("保存绘制的图像：toDataURL，canvas对象的方法")])])]),t._v(" "),a("li",[a("p",[t._v("阴影")])]),t._v(" "),a("li",[a("p",[t._v("渐变")]),t._v(" "),a("ul",[a("li",[t._v("作为Style")]),t._v(" "),a("li",[t._v("线性渐变、放射渐变")])])]),t._v(" "),a("li",[a("p",[t._v("模式")]),t._v(" "),a("ul",[a("li",[t._v("作为Style")])])]),t._v(" "),a("li",[a("p",[t._v("使用图像数据")]),t._v(" "),a("ul",[a("li",[t._v("getImageData：取得原始图像数据，需要同源")]),t._v(" "),a("li",[t._v("图像过滤器")])])]),t._v(" "),a("li",[a("p",[t._v("合成")]),t._v(" "),a("ul",[a("li",[t._v("globalAlpha、globalCompositionOperation")])])])]),t._v(" "),a("h2",{attrs:{id:"_18-webgl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-webgl"}},[t._v("#")]),t._v(" 18 webgl")]),t._v(" "),a("h2",{attrs:{id:"_19-媒体元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-媒体元素"}},[t._v("#")]),t._v(" 19 媒体元素")]),t._v(" "),a("h3",{attrs:{id:"video、audio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#video、audio"}},[t._v("#")]),t._v(" video、audio")]),t._v(" "),a("h3",{attrs:{id:"自定义媒体播放器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义媒体播放器"}},[t._v("#")]),t._v(" 自定义媒体播放器")]),t._v(" "),a("h2",{attrs:{id:"_20-历史状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-历史状态管理"}},[t._v("#")]),t._v(" 20 历史状态管理")]),t._v(" "),a("h3",{attrs:{id:"通过状态管理api，可以做到加载新页面的情况下改变浏览器的url，history对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过状态管理api，可以做到加载新页面的情况下改变浏览器的url，history对象"}},[t._v("#")]),t._v(" 通过状态管理API，可以做到加载新页面的情况下改变浏览器的URL，history对象")]),t._v(" "),a("h3",{attrs:{id:"pushstate、replacestate：改变url，但不会像服务器发送请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushstate、replacestate：改变url，但不会像服务器发送请求"}},[t._v("#")]),t._v(" pushState、replaceState：改变url，但不会像服务器发送请求")]),t._v(" "),a("h3",{attrs:{id:"state的url需要有一个实际url与其对应，避免点击刷新页面出现错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state的url需要有一个实际url与其对应，避免点击刷新页面出现错误"}},[t._v("#")]),t._v(" state的URL需要有一个实际URL与其对应，避免点击刷新页面出现错误")]),t._v(" "),a("h2",{attrs:{id:"_21-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-json"}},[t._v("#")]),t._v(" 21 JSON")]),t._v(" "),a("h3",{attrs:{id:"javascript-object-notation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-object-notation"}},[t._v("#")]),t._v(" JavaScript Object Notation")]),t._v(" "),a("h3",{attrs:{id:"json对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json对象"}},[t._v("#")]),t._v(" JSON对象")]),t._v(" "),a("ul",[a("li",[t._v("stringify：JS对象序列化为JSON字符串")]),t._v(" "),a("li",[t._v("parse：JSON字符串反序列化为JS对象")])]),t._v(" "),a("h3",{attrs:{id:"序列化选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列化选项"}},[t._v("#")]),t._v(" 序列化选项")]),t._v(" "),a("ul",[a("li",[t._v("js对象、过滤器（数组或函数）、缩进选项（空格数或缩进字符）")])]),t._v(" "),a("h3",{attrs:{id:"tojson方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tojson方法"}},[t._v("#")]),t._v(" toJSON方法")]),t._v(" "),a("ul",[a("li",[t._v("在js对象上实现此方法")])]),t._v(" "),a("h3",{attrs:{id:"序列化的顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列化的顺序"}},[t._v("#")]),t._v(" 序列化的顺序")]),t._v(" "),a("ul",[a("li",[t._v("1）有toJSON就调用该方法，否则，按默认顺序序列化")]),t._v(" "),a("li",[t._v("2）有过滤器，则调用过滤器")]),t._v(" "),a("li",[t._v("3）对第2）步结果序列化")]),t._v(" "),a("li",[t._v("4）有缩进选项就执行缩进")])]),t._v(" "),a("h3",{attrs:{id:"解析选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析选项"}},[t._v("#")]),t._v(" 解析选项")]),t._v(" "),a("ul",[a("li",[t._v("还原函数")])]),t._v(" "),a("h2",{attrs:{id:"_22-ajax和comet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-ajax和comet"}},[t._v("#")]),t._v(" 22 AJAX和Comet")]),t._v(" "),a("h3",{attrs:{id:"ajax技术的核心是xmlhttprequest（xhr），无须刷新即可从服务器取得数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax技术的核心是xmlhttprequest（xhr），无须刷新即可从服务器取得数据"}},[t._v("#")]),t._v(" AJAX技术的核心是XMLHttpRequest（XHR），无须刷新即可从服务器取得数据")]),t._v(" "),a("h2",{attrs:{id:"高级技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级技巧"}},[t._v("#")]),t._v(" 高级技巧")]),t._v(" "),a("h3",{attrs:{id:"安全的类型检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全的类型检测"}},[t._v("#")]),t._v(" 安全的类型检测")]),t._v(" "),a("h3",{attrs:{id:"作用域安全的构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域安全的构造函数"}},[t._v("#")]),t._v(" 作用域安全的构造函数")]),t._v(" "),a("h3",{attrs:{id:"惰性载入函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#惰性载入函数"}},[t._v("#")]),t._v(" 惰性载入函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数执行的分支仅会发生一次")])]),t._v(" "),a("li",[a("p",[t._v("1）在函数被调用时再处理函数，在第一次调用的时候，将该函数覆盖成另外一个按合适方式执行的函数，这样再执行就不会在经过分支（函数名就是变量名，可以重新赋值）")]),t._v(" "),a("ul",[a("li",[t._v("const fn=()=>{\nif(...){\nfn=()=>{...}\n}else{\nfn=()=>{...}\n}\n}")])])]),t._v(" "),a("li",[a("p",[t._v("2）在声明函数时就指定适当的函数，在1）的基础上，实现为立即执行函数，将新函数返回，第一次调用不再损失性能，声明时损失")]),t._v(" "),a("ul",[a("li",[t._v("const fn=(()=>{\nif(...){\nreturn ()=>{...}\n}else{\nreturn ()=>{...}\n}\n})()")])])])]),t._v(" "),a("h3",{attrs:{id:"函数绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数绑定"}},[t._v("#")]),t._v(" 函数绑定")]),t._v(" "),a("h3",{attrs:{id:"函数柯里化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数柯里化"}},[t._v("#")]),t._v(" 函数柯里化")]),t._v(" "),a("ul",[a("li",[t._v("用于创建已经设置好了一个或多个参数的函数")]),t._v(" "),a("li",[t._v("使用一个闭包返回一个函数")]),t._v(" "),a("li",[t._v("常动态创建：调用一个函数传入要柯里化的函数和必要的参数")])]),t._v(" "),a("h3",{attrs:{id:"对象防篡改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象防篡改"}},[t._v("#")]),t._v(" 对象防篡改")]),t._v(" "),a("ul",[a("li",[t._v("Object.preventExtensions：不可扩展")]),t._v(" "),a("li",[t._v("Object.seal：密封")]),t._v(" "),a("li",[t._v("Object.freeze：冻结")])]),t._v(" "),a("h3",{attrs:{id:"高级定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级定时器"}},[t._v("#")]),t._v(" 高级定时器")]),t._v(" "),a("ul",[a("li",[t._v("js单线程，定时器只是计划代码在未来某个时间执行，浏览器负责排序，指派某段代码在某个时间点运行的优先级")]),t._v(" "),a("li",[t._v("处JS执行进程外，还有一个需要在进程下一次空闲时执行的代码队列")]),t._v(" "),a("li",[t._v("定时器是在给定时间间隔后将代码加入到队列中，如果队列为空，就执行，否则等待，所以给定时间后并不是一定立即执行")])]),t._v(" "),a("h3",{attrs:{id:"数组分块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组分块"}},[t._v("#")]),t._v(" 数组分块")]),t._v(" "),a("ul",[a("li",[t._v("使用定时器将一系列步骤分开操作")])]),t._v(" "),a("h3",{attrs:{id:"函数节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数节流"}},[t._v("#")]),t._v(" 函数节流")]),t._v(" "),a("p",[t._v("throttle")]),t._v(" "),a("ul",[a("li",[t._v("某些代码不可以在没有间断的情况下连续重复执行（resize、mousemove之类中操作dom元素，占用太多内存和CPU时间，可能会让浏览器崩溃）")]),t._v(" "),a("li",[t._v("第一次调用函数，创建一个定时器，在指定时间间隔后将代码插入队列执行；第二次调用的时候，先清除定时器，再设置一个新的定时器")]),t._v(" "),a("li",[t._v("只要代码是周期性执行的都应该节流")])]),t._v(" "),a("h3",{attrs:{id:"自定义事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),a("ul",[a("li",[t._v("观察者模式：主体发布事件，观察者订阅事件来观察主体，DOM中，元素是主体，事件处理程序是观察者")]),t._v(" "),a("li",[t._v("一个存储事件处理程序的数组对象")])]),t._v(" "),a("h3",{attrs:{id:"拖放事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拖放事件"}},[t._v("#")]),t._v(" 拖放事件")]),t._v(" "),a("h2",{attrs:{id:"_23-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-最佳实践"}},[t._v("#")]),t._v(" 23 最佳实践")]),t._v(" "),a("h3",{attrs:{id:"可维护性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可维护性"}},[t._v("#")]),t._v(" 可维护性")]),t._v(" "),a("ul",[a("li",[t._v("代码约定：变量类型透明（初始化、匈牙利命名）")]),t._v(" "),a("li",[t._v("代码解耦：HTML与JS（如：显式元素而不是插入元素）、CSS与JS（如：修改className）、应用逻辑与事件处理（如：只传输事件的数据）")]),t._v(" "),a("li",[t._v("编程实践：尊重对象所有权、避免全局变量、使用常量、避免与null比较（typeof、isinstanceof）")])]),t._v(" "),a("h3",{attrs:{id:"性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用域：避免全局查找（document）")])]),t._v(" "),a("li",[a("p",[t._v("正确方法")]),t._v(" "),a("ul",[a("li",[t._v("避免不必要的属性查找（对象的属性）")]),t._v(" "),a("li",[t._v("优化循环：减值迭代、简化终止条件、简化循环体、使用后测试循环（do...while）")]),t._v(" "),a("li",[t._v("展开循环：如果循环次数一定，直接展开循环，函数调用会更快；Duff装置，减少循环次数，一次循环中处理多次（大数据情况下更快）")])])]),t._v(" "),a("li",[a("p",[t._v("优先原生、switch、位运算")])]),t._v(" "),a("li",[a("p",[t._v("最小化语句数")]),t._v(" "),a("ul",[a("li",[t._v("合并变量声明")]),t._v(" "),a("li",[t._v("插入迭代值（++、--）")]),t._v(" "),a("li",[t._v("使用数组和对象字面量")])])]),t._v(" "),a("li",[a("p",[t._v("优化DOM交互")]),t._v(" "),a("ul",[a("li",[t._v("最小化现场更新：如果要更新的DOM已经显示在文档中，就是现场更新。使用文档片段构建好再插入文档")]),t._v(" "),a("li",[t._v("使用innerHTML：利用后台的HTML解析器，构建好字符串，一次替换")]),t._v(" "),a("li",[t._v("使用事件代理：在祖先节点上处理事件，如果可能，就在文档上添加事件处理")]),t._v(" "),a("li",[t._v("避免使用HTMLCollection")])])])]),t._v(" "),a("h2",{attrs:{id:"_24-未分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-未分类"}},[t._v("#")]),t._v(" 24 未分类")]),t._v(" "),a("h3",{attrs:{id:"requestanimationframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe"}},[t._v("#")]),t._v(" requestAnimationFrame")]),t._v(" "),a("ul",[a("li",[t._v("确定何时绘制下一帧是保证动画平滑的关键，但浏览器的计时器并非精确到毫秒级")]),t._v(" "),a("li",[t._v("CSS动画又是在于浏览器知道何时开始动画，再计算出准确的循环间隔")])]),t._v(" "),a("h3",{attrs:{id:"geolocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geolocation"}},[t._v("#")]),t._v(" geolocation")]),t._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" file")]),t._v(" "),a("ul",[a("li",[t._v("filereader")])]),t._v(" "),a("h3",{attrs:{id:"performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance"}},[t._v("#")]),t._v(" performance")]),t._v(" "),a("h3",{attrs:{id:"web-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[t._v("#")]),t._v(" web worker")]),t._v(" "),a("ul",[a("li",[t._v("运行JS异步代码，避免阻塞用户界面")]),t._v(" "),a("li",[t._v("后台运行另一个拥有不同全局作用域的js代码文件，与当前代码不共享作用域，其全局作用域为worker")]),t._v(" "),a("li",[t._v("postMessage")])]),t._v(" "),a("h2",{attrs:{id:"_25-异步编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-异步编程"}},[t._v("#")]),t._v(" 25 异步编程")]),t._v(" "),a("h3",{attrs:{id:"generator函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator函数"}},[t._v("#")]),t._v(" Generator函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ES6 提供的一种异步编程解决方案")]),t._v(" "),a("ul",[a("li",[t._v("语法上，首先可以把它理解成，Generator 函数是一个状态机，封装了多个内部状态")]),t._v(" "),a("li",[t._v("执行 Generator 函数会返回一个遍历器对象，所以，Generator 函数除了状态机，还是一个遍历器对象生成函数，返回的遍历器对象，可以依次遍历 Generator 函数内部的每一个状态")]),t._v(" "),a("li",[t._v("两个特征：\n一是，function关键字与函数名之间有一个星号；\n二是，函数体内部使用yield表达式，定义不同的内部状态")])])]),t._v(" "),a("li",[a("p",[t._v("调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象（遍历器对象）")]),t._v(" "),a("ul",[a("li",[t._v("Generator 函数是分段执行的，yield表达式是暂停执行的标记，而next方法可以恢复执行")]),t._v(" "),a("li",[t._v("每次调用遍历器对象的next方法，就会返回一个有着value和done两个属性的对象。\nvalue属性表示当前的内部状态的值，是yield表达式后面那个表达式的值；\ndone属性是一个布尔值，表示是否遍历结束")])])]),t._v(" "),a("li",[a("p",[t._v("Generator 函数从上次yield表达式停下的地方，一直执行到下一个yield表达式")])]),t._v(" "),a("li",[a("p",[t._v("yield表达式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("yield表达式就是暂停标志")])]),t._v(" "),a("li",[a("p",[t._v("next方法的运行逻辑")]),t._v(" "),a("ul",[a("li",[t._v("1）遇到yield表达式，就暂停执行后面的操作，并将紧跟在yield后面的那个表达式的值，作为返回的对象的value属性值")]),t._v(" "),a("li",[t._v("2）下一次调用next方法时，再继续往下执行，直到遇到下一个yield表达式")]),t._v(" "),a("li",[t._v("3）如果没有再遇到新的yield表达式，就一直运行到函数结束，直到return语句为止，并将return语句后面的表达式的值，作为返回的对象的value属性值")]),t._v(" "),a("li",[t._v("4）如果该函数没有return语句，则返回的对象的value属性值为undefined")]),t._v(" "),a("li",[t._v("注意，yield表达式后面的表达式，只有当调用next方法、内部指针指向该语句时才会执行，因此等于为 JavaScript 提供了手动的“惰性求值”（Lazy Evaluation）的语法功能")])])]),t._v(" "),a("li",[a("p",[t._v("与return对比")]),t._v(" "),a("ul",[a("li",[t._v("都能返回紧跟在语句后面的那个表达式的值")]),t._v(" "),a("li",[t._v("每次遇到yield，函数暂停执行，下一次再从该位置继续向后执行，而return语句不具备位置记忆的功能")]),t._v(" "),a("li",[t._v("一个函数里面，只能执行一次（或者说一个）return语句，但是可以执行多次（或者说多个）yield表达式")]),t._v(" "),a("li",[t._v("正常函数只能返回一个值，因为只能执行一次return；Generator 函数可以返回一系列的值，因为可以有任意多个yield")])])]),t._v(" "),a("li",[a("p",[t._v("不用yield表达式，这时就变成了一个单纯的暂缓执行函数")])]),t._v(" "),a("li",[a("p",[t._v("注意，yield表达式只能用在 Generator 函数里面，用在其他地方都会报错")])]),t._v(" "),a("li",[a("p",[t._v("yield表达式如果用在另一个表达式之中，必须放在圆括号里面")])])])]),t._v(" "),a("li",[a("p",[t._v("与Iterator接口关系")]),t._v(" "),a("ul",[a("li",[t._v("Generator 函数就是遍历器生成函数，因此可以把 Generator 赋值给对象的Symbol.iterator属性，从而使得该对象具有 Iterator 接口")]),t._v(" "),a("li",[t._v("Generator 函数执行后，返回一个遍历器对象。该对象本身也具有Symbol.iterator属性，执行后返回自身")])])]),t._v(" "),a("li",[a("p",[t._v("next方法参数")]),t._v(" "),a("ul",[a("li",[t._v("yield表达式本身没有返回值，或者说总是返回undefined。next方法可以带一个参数，该参数就会被当作上一个yield表达式的返回值")]),t._v(" "),a("li",[t._v("意义：Generator 函数从暂停状态到恢复运行，它的上下文状态（context）是不变的。通过next方法的参数，就有办法在 Generator 函数开始运行之后，继续向函数体内部注入值。也就是说，可以在 Generator 函数运行的不同阶段，从外部向内部注入不同的值，从而调整函数行为")])])]),t._v(" "),a("li",[a("p",[t._v("for...of循环")]),t._v(" "),a("ul",[a("li",[t._v("可以自动遍历 Generator 函数运行时生成的Iterator对象，且此时不再需要调用next方法")]),t._v(" "),a("li",[t._v("一旦next方法的返回对象的done属性为true，for...of循环就会中止，且不包含该返回对象")])])]),t._v(" "),a("li",[a("p",[t._v("实例方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("throw()")]),t._v(" "),a("ul",[a("li",[t._v("Generator 函数返回的遍历器对象，都有一个throw方法，可以在函数体外抛出错误，然后在 Generator 函数体内捕获")]),t._v(" "),a("li",[t._v("throw方法可以接受一个参数，该参数会被catch语句接收，建议抛出Error对象的实例")]),t._v(" "),a("li",[t._v("注意，不要混淆遍历器对象的throw方法和全局的throw命令，两者无关，互不影响")]),t._v(" "),a("li",[t._v("throw方法抛出的错误要被内部捕获，前提是必须至少执行过一次next方法")]),t._v(" "),a("li",[t._v("throw方法被捕获以后，会附带执行下一条yield表达式。也就是说，会附带执行一次next方法")]),t._v(" "),a("li",[t._v("多个yield表达式，可以只用一个try...catch代码块来捕获错误")]),t._v(" "),a("li",[t._v("Generator 函数体外抛出的错误，可以在函数体内捕获；反过来，Generator 函数体内抛出的错误，也可以被函数体外的catch捕获")]),t._v(" "),a("li",[t._v("一旦 Generator 执行过程中抛出错误，且没有被内部捕获，就不会再执行下去了。如果此后还调用next方法，将返回一个value属性等于undefined、done属性等于true的对象，即 JavaScript 引擎认为这个 Generator 已经运行结束了")])])]),t._v(" "),a("li",[a("p",[t._v("return()")]),t._v(" "),a("ul",[a("li",[t._v("可以返回给定的值，并且终结遍历 Generator 函数")]),t._v(" "),a("li",[t._v("如果return方法调用时，不提供参数，则返回值的value属性为undefined")]),t._v(" "),a("li",[t._v("如果 Generator 函数内部有try...finally代码块，且正在执行try代码块，那么return方法会导致立刻进入finally代码块，执行完以后，整个函数才会结束")])])]),t._v(" "),a("li",[a("p",[t._v("next、throw、return的共同点")]),t._v(" "),a("ul",[a("li",[t._v("next()是将yield表达式替换成一个值")]),t._v(" "),a("li",[t._v("throw()是将yield表达式替换成一个throw语句")]),t._v(" "),a("li",[t._v("return()是将yield表达式替换成一个return语句")])])])])]),t._v(" "),a("li",[a("p",[t._v("yield*表达式")]),t._v(" "),a("ul",[a("li",[t._v("用来在一个 Generator 函数里面执行另一个 Generator 函数")]),t._v(" "),a("li",[t._v("如果yield表达式后面跟的是一个遍历器对象，需要在yield表达式后面加上星号，表明它返回的是一个遍历器对象")]),t._v(" "),a("li",[t._v("yield*后面的 Generator 函数（没有return语句时），等同于在 Generator 函数内部，部署一个for...of循环")]),t._v(" "),a("li",[t._v("yield*命令可以很方便地取出嵌套数组的所有成员")])])]),t._v(" "),a("li",[a("p",[t._v("用作对象属性")])]),t._v(" "),a("li",[a("p",[t._v("this")]),t._v(" "),a("ul",[a("li",[t._v("Generator 函数总是返回一个遍历器，ES6 规定这个遍历器是 Generator 函数的实例，也继承了 Generator 函数的prototype对象上的方法")])])]),t._v(" "),a("li",[a("p",[t._v("状态机")])]),t._v(" "),a("li",[a("p",[t._v("协程")]),t._v(" "),a("ul",[a("li",[t._v("协程（coroutine）是一种程序运行的方式，可以理解成“协作的线程”或“协作的函数”。协程既可以用单线程实现，也可以用多线程实现。前者是一种特殊的子例程，后者是一种特殊的线程")]),t._v(" "),a("li",[t._v("Generator 函数是 ES6 对协程的实现，但属于不完全实现")])])]),t._v(" "),a("li",[a("p",[t._v("上下文")])])]),t._v(" "),a("h3",{attrs:{id:"async函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async函数"}},[t._v("#")]),t._v(" async函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Generator 函数的语法糖，async函数将 Generator 函数的星号（*）替换成async，将yield替换成await")])]),t._v(" "),a("li",[a("p",[t._v("改进")]),t._v(" "),a("ul",[a("li",[t._v("内置执行器")]),t._v(" "),a("li",[t._v("更好的语义")]),t._v(" "),a("li",[t._v("更广的适用性")]),t._v(" "),a("li",[t._v("返回值是 Promise")])])]),t._v(" "),a("li",[a("p",[t._v("基本用法")])]),t._v(" "),a("li",[a("p",[t._v("语法")])])]),t._v(" "),a("h2",{attrs:{id:"_26-控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-控制台"}},[t._v("#")]),t._v(" 26 控制台")]),t._v(" "),a("p",[t._v("console")]),t._v(" "),a("h3",{attrs:{id:"console对象是-javascript-的原生对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console对象是-javascript-的原生对象"}},[t._v("#")]),t._v(" console对象是 JavaScript 的原生对象")]),t._v(" "),a("h3",{attrs:{id:"用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ul",[a("li",[t._v("调试程序，显示网页代码运行时的错误信息。")]),t._v(" "),a("li",[t._v("提供了一个命令行接口，用来与网页代码互动")])]),t._v(" "),a("h3",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("log接受一个或多个参数，将它们连接起来输出")]),t._v(" "),a("ul",[a("li",[t._v("console.log('Hello World')\n// Hello World\nconsole.log('a', 'b', 'c')\n// a b c")])])]),t._v(" "),a("li",[a("p",[t._v("info是console.log方法的别名，用法完全一样。只不过console.info方法会在输出信息的前面，加上一个蓝色图标")])]),t._v(" "),a("li",[a("p",[t._v("debug与log类似，在控制台输出调试信息。默认情况下，debug输出的信息不会显示，只有在打开显示级别在verbose的情况下，才会显示")])]),t._v(" "),a("li",[a("p",[t._v("console对象的所有方法，都可以被覆盖")]),t._v(" "),a("ul",[a("li",[t._v("['log', 'info', 'warn', 'error'].forEach(function(method) {\nconsole[method] = console[method].bind(\nconsole,\nnew Date().toISOString()\n);\n});")])])])]),t._v(" "),a("p",[t._v('console.log("出错了！");\n// 2014-05-18T09:00.000Z 出错了！')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("warn和error也是在控制台输出信息\nwarn输出信息时，在最前面加一个黄色三角，表示警告\nerror输出信息时，在最前面加一个红色的叉，表示出错\n同时，还会高亮显示输出文字和错误发生的堆栈")])]),t._v(" "),a("li",[a("p",[t._v("table方法可以将复合类型转为表格显示")])]),t._v(" "),a("li",[a("p",[t._v("count方法用于计数，输出它被调用了多少次")])]),t._v(" "),a("li",[a("p",[t._v("dir方法用来对一个对象进行检查（inspect），并以易于阅读和打印的格式显示")]),t._v(" "),a("ul",[a("li",[t._v("对于输出 DOM 对象非常有用，因为会显示 DOM 对象的所有属性")]),t._v(" "),a("li",[t._v("Node 环境之中，还可以指定以代码高亮的形式输出")])])]),t._v(" "),a("li",[a("p",[t._v("dirxml方法主要用于以目录树的形式，显示 DOM 节点")])]),t._v(" "),a("li",[a("p",[t._v("assert方法主要用于程序运行过程中，进行条件判断，如果不满足条件，就显示一个错误，但不会中断程序执行")]),t._v(" "),a("ul",[a("li",[t._v("接受两个参数，第一个参数是表达式，第二个参数是字符串。只有当第一个参数为false，才会提示有错误，在控制台输出第二个参数，否则不会有任何结果")])])]),t._v(" "),a("li",[a("p",[t._v("time、timeEnd方法用于计时，可以算出一个操作所花费的准确时间")]),t._v(" "),a("ul",[a("li",[t._v("time方法表示计时开始，timeEnd方法表示计时结束。它们的参数是计时器的名称。")])])]),t._v(" "),a("li",[a("p",[t._v("trace方法显示当前执行的代码在堆栈中的调用路径")])]),t._v(" "),a("li",[a("p",[t._v("clear方法用于清除当前控制台的所有输出，将光标回置到第一行")])])]),t._v(" "),a("h3",{attrs:{id:"debugger语句主要用于除错，作用是设置断点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugger语句主要用于除错，作用是设置断点"}},[t._v("#")]),t._v(" debugger语句主要用于除错，作用是设置断点")]),t._v(" "),a("ul",[a("li",[t._v("Chrome 浏览器中，当代码运行到debugger语句时，就会暂停运行，自动打开脚本源码界面")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_27-标准库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-标准库"}},[t._v("#")]),t._v(" 27 标准库")]),t._v(" "),a("h3",{attrs:{id:"_27-1-object对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-1-object对象"}},[t._v("#")]),t._v(" 27.1 Object对象")]),t._v(" "),a("ol",[a("li",[t._v("Object对象的原生方法分成两类：Object本身的方法与Object的实例方法\n"),a("blockquote",[a("p",[t._v("访问属性或方法：点运算符、方括号运算符（其中传入字符串，即可以使用变量）")])])]),t._v(" "),a("li",[t._v("Object本身是一个函数，可以当作工具方法使用，将任意值转为对象。这个方法常用于保证某个值一定是对象。\n"),a("ol",[a("li",[t._v("如果参数为空（或者为undefined和null），Object()返回一个空对象"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("如果参数是原始类型的值，Object方法将其转为对应的包装对象的实例")]),t._v(" "),a("li",[t._v("如果Object方法的参数是一个对象，它总是返回该对象，即不用转换")])])]),t._v(" "),a("li",[t._v("Object不仅可以当作工具函数使用，还可以当作构造函数使用，即前面可以使用new命令\n"),a("ol",[a("li",[t._v("首要用途，是直接通过它来生成新对象")]),t._v(" "),a("li",[t._v("注意，通过"),a("code",[t._v("var obj = new Object()")]),t._v("的写法生成新对象，与字面量的写法"),a("code",[t._v("var obj = {}")]),t._v("是等价的。或者说，后者只是前者的一种简便写法")]),t._v(" "),a("li",[t._v("可以接受一个参数，如果该参数是一个对象，则直接返回这个对象；如果是一个原始类型的值，则返回该值对应的包装对象"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])])]),t._v(" "),a("li",[t._v("静态方法\n"),a("ol",[a("li",[t._v("所谓“静态方法”，是指部署在Object对象自身的方法")]),t._v(" "),a("li",[t._v("keys方法"),a("br"),t._v("\n参数是一个对象，返回一个数组。该数组的成员都是该对象自身的（而不是继承的）所有属性名，只返回可枚举的属性")]),t._v(" "),a("li",[t._v("getOwnPropertyNames方法"),a("br"),t._v("\n与Object.keys类似，也是接受一个对象作为参数，返回一个数组，包含了该对象自身的所有属性名，还返回不可枚举的属性名")]),t._v(" "),a("li",[t._v("getOwnPropertyDescriptor()：获取某个属性的描述对象")]),t._v(" "),a("li",[t._v("defineProperty()：通过描述对象，定义某个属性")]),t._v(" "),a("li",[t._v("defineProperties()：通过描述对象，定义多个属性")]),t._v(" "),a("li",[t._v("Object.preventExtensions()：防止对象扩展。")]),t._v(" "),a("li",[t._v("Object.isExtensible()：判断对象是否可扩展。")]),t._v(" "),a("li",[t._v("Object.seal()：禁止对象配置。")]),t._v(" "),a("li",[t._v("Object.isSealed()：判断一个对象是否可配置。")]),t._v(" "),a("li",[t._v("Object.freeze()：冻结一个对象。")]),t._v(" "),a("li",[t._v("Object.isFrozen()：判断一个对象是否被冻结。")]),t._v(" "),a("li",[t._v("Object.create()：该方法可以指定原型对象和属性，返回一个新的对象")]),t._v(" "),a("li",[t._v("Object.getPrototypeOf()：获取对象的Prototype对象")])])]),t._v(" "),a("li",[t._v("实例方法\n"),a("ol",[a("li",[t._v("定义在Object.prototype对象上的方法，称为实例方法，所有Object的实例对象都继承了这些方法")]),t._v(" "),a("li",[t._v("Object.prototype.valueOf()：返回当前对象对应的值。\n"),a("ul",[a("li",[t._v("默认情况下返回对象本身")]),t._v(" "),a("li",[t._v("自动类型转换时会默认调用这个方法")])])]),t._v(" "),a("li",[t._v("Object.prototype.toString()：返回当前对象对应的字符串形式。\n"),a("ul",[a("li",[t._v("返回一个对象的字符串形式，默认情况下返回类型字符串")]),t._v(" "),a("li",[t._v("由于实例对象可能会自定义toString方法，覆盖掉Object.prototype.toString方法，所以为了得到类型字符串，最好直接使用Object.prototype.toString方法。通过函数的call方法，可以在任意值上调用这个方法，帮助我们判断这个值的类型\n"),a("blockquote",[a("p",[t._v("数值：返回[object Number]"),a("br"),t._v("\n字符串：返回[object String]"),a("br"),t._v("\n布尔值：返回[object Boolean]"),a("br"),t._v("\nundefined：返回[object Undefined]"),a("br"),t._v("\nnull：返回[object Null]"),a("br"),t._v("\n数组：返回[object Array]"),a("br"),t._v("\narguments 对象：返回[object Arguments]"),a("br"),t._v("\n函数：返回[object Function]"),a("br"),t._v("\nError 对象：返回[object Error]"),a("br"),t._v("\nDate 对象：返回[object Date]"),a("br"),t._v("\nRegExp 对象：返回[object RegExp]"),a("br"),t._v("\n其他对象：返回[object Object]")])])])])]),t._v(" "),a("li",[t._v("Object.prototype.toLocaleString()：返回当前对象对应的本地字符串形式")]),t._v(" "),a("li",[t._v("Object.prototype.hasOwnProperty()：判断某个属性是否为当前对象自身的属性，还是继承自原型"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiger'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[t._v("Object.prototype.isPrototypeOf()：判断当前对象是否为另一个对象的原型")]),t._v(" "),a("li",[t._v("Object.prototype.propertyIsEnumerable()：判断某个属性是否可枚举")])])])]),t._v(" "),a("h3",{attrs:{id:"_27-2-属性描述符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-2-属性描述符"}},[t._v("#")]),t._v(" 27.2 属性描述符")]),t._v(" "),a("ol",[a("li",[t._v("JavaScript 提供了一个内部数据结构，用来描述对象的属性，控制它的行为。这个内部数据结构称为“属性描述对象”（attributes object）。每个属性都有自己对应的属性描述对象，保存该属性的一些元信息")]),t._v(" "),a("li",[t._v("元属性\n"),a("ol",[a("li",[t._v("value：该属性的属性值")]),t._v(" "),a("li",[t._v("writable\n"),a("ul",[a("li",[t._v("一个布尔值，表示属性值（value）是否可改变（即是否可写），默认为true")]),t._v(" "),a("li",[t._v("注意，正常模式下，对writable为false的属性赋值不会报错，只会默默失败。但是，严格模式下会报错，即使对a属性重新赋予一个同样的值")]),t._v(" "),a("li",[t._v("如果原型对象的某个属性的writable为false，那么子对象将无法自定义这个属性，但是，通过覆盖属性描述对象，绕过这个限制，原型链会被完全忽视")])])]),t._v(" "),a("li",[t._v("enumerable\n"),a("ul",[a("li",[t._v("一个布尔值，表示该属性是否可遍历，默认为true")]),t._v(" "),a("li",[t._v("如果一个属性的enumerable为false，下面三个操作不会取到该属性。\n"),a("blockquote",[a("p",[t._v("for..in循环、Object.keys方法、JSON.stringify方法")])])]),t._v(" "),a("li",[t._v("如果需要获取对象自身的所有属性，不管是否可遍历，可以使用Object.getOwnPropertyNames方法")])])]),t._v(" "),a("li",[t._v("configurable\n"),a("ul",[a("li",[t._v("是一个布尔值，表示可配置性，默认为true")]),t._v(" "),a("li",[t._v("configurable为false时，value、writable、enumerable和configurable都不能被修改了")]),t._v(" "),a("li",[t._v("注意，writable只有在false改为true会报错，true改为false是允许的")]),t._v(" "),a("li",[t._v("至于value，只要writable和configurable有一个为true，就允许改动")]),t._v(" "),a("li",[t._v("可配置性决定了目标属性是否可以被删除（delete）")])])]),t._v(" "),a("li",[t._v("get\n"),a("ul",[a("li",[t._v("一个方法函数，表示该属性的取值函数（getter），默认为undefined")]),t._v(" "),a("li",[t._v("取值函数get不能接受参数")])])]),t._v(" "),a("li",[t._v("set\n"),a("ul",[a("li",[t._v("一个方法函数，表示该属性的存值函数（setter），默认为undefined")]),t._v(" "),a("li",[t._v("存值函数set只能接受一个参数（即属性的值）")])])])])]),t._v(" "),a("li",[t._v("Object.getOwnPropertyDescriptor()方法\n"),a("ol",[a("li",[t._v("可以获取属性描述对象")]),t._v(" "),a("li",[t._v("只能用于对象自身的属性，不能用于继承的属性")]),t._v(" "),a("li",[t._v("第一个参数是目标对象，")]),t._v(" "),a("li",[t._v("第二个参数是一个字符串，对应目标对象的某个属性名")])])]),t._v(" "),a("li",[t._v("Object.getOwnPropertyNames方法\n"),a("ol",[a("li",[t._v("返回一个数组，成员是参数对象自身的全部属性的属性名，不管该属性是否可遍历")]),t._v(" "),a("li",[t._v("跟Object.keys的行为不同，Object.keys只返回对象自身的可遍历属性的全部属性名")]),t._v(" "),a("li",[t._v("也返回继承属性")])])]),t._v(" "),a("li",[t._v("Object.defineProperty()方法\n"),a("ol",[a("li",[t._v("允许通过属性描述对象，定义或修改一个属性，然后返回修改后的对象，接受三个参数")]),t._v(" "),a("li",[t._v("object：属性所在的对象")]),t._v(" "),a("li",[t._v("propertyName：字符串，表示属性名")]),t._v(" "),a("li",[t._v("attributesObject：属性描述对象")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   writable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("Object.defineProperties()方法：可以一次性定义或修改多个属性"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   p1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   p2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   p3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("blockquote",[a("p",[t._v("Object.defineProperty()和Object.defineProperties()参数里面的属性描述对象，writable、configurable、enumerable这三个属性的默认值都为false")])])]),t._v(" "),a("li",[t._v("一旦定义了取值函数get（或存值函数set），就不能将writable属性设为true，也不能同时定义value属性，否则会报错")]),t._v(" "),a("li",[t._v("实例对象的 "),a("code",[t._v("propertyIsEnumerable()")]),t._v(" 方法返回一个布尔值，用来判断某个属性是否可遍历。注意，这个方法只能用于判断对象自身的属性，对于继承的属性一律返回false")]),t._v(" "),a("li",[t._v("拷贝对象\n"),a("blockquote",[a("p",[t._v("注意：如果遇到存取器定义的属性，会只拷贝值，可以通过Object.defineProperty方法来拷贝属性")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("extend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" property "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n         to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { get a(){ return 1 } })")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])]),t._v(" "),a("li",[t._v("控制状态\n"),a("ol",[a("li",[t._v("JavaScript 提供了三种对象冻结方法，最弱的一种是"),a("code",[t._v("Object.preventExtensions")]),t._v("，其次是"),a("code",[t._v("Object.seal")]),t._v("，最强的是"),a("code",[t._v("Object.freeze")])]),t._v(" "),a("li",[t._v("Object.preventExtensions方法可以使得一个对象无法再添加新的属性\n"),a("blockquote",[a("p",[t._v("Object.isExtensible方法用于检查一个对象是否使用了Object.preventExtensions方法")])])]),t._v(" "),a("li",[t._v("Object.seal方法使得一个对象既无法添加新属性，也无法删除旧属性"),a("br"),t._v("\n只是禁止新增或删除属性，并不影响修改某个属性的值\n"),a("blockquote",[a("p",[t._v("Object.isSealed方法用于检查一个对象是否使用了Object.seal方法，这时，Object.isExtensible方法也返回false")])])]),t._v(" "),a("li",[t._v("Object.freeze方法可以使得一个对象无法添加新属性、无法删除旧属性、也无法改变属性的值，使得这个对象实际上变成了常量\n"),a("blockquote",[a("p",[t._v("Object.isFrozen方法用于检查一个对象是否使用了Object.freeze方法"),a("br"),t._v("\n使用Object.freeze方法以后，Object.isSealed将会返回true，Object.isExtensible返回false")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiger'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { name: 'tiger', age: 97 }")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("school "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ncepu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'seu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { name: 'tiger', age: 97 }")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFrozen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSealed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isExtensible")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])]),t._v(" "),a("li",[t._v("漏洞：可以通过改变原型对象，来为对象增加属性")]),t._v(" "),a("li",[t._v("局限：如果属性值是对象，上面这些方法只能冻结属性指向的对象，而不能冻结对象本身的内容。")])])])]),t._v(" "),a("h3",{attrs:{id:"_27-4-包装对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-4-包装对象"}},[t._v("#")]),t._v(" 27.4 包装对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("三种原始类型的值——数值、字符串、布尔值——在一定条件下，也会自动转为对象，也就是原始类型的“包装对象”（wrapper）")]),t._v(" "),a("ul",[a("li",[t._v("var v1 = new Number(123);\nvar v2 = new String('abc');\nvar v3 = new Boolean(true);")])])])]),t._v(" "),a("p",[t._v('typeof v1 // "object"\ntypeof v2 // "object"\ntypeof v3 // "object"')]),t._v(" "),a("p",[t._v("v1 === 123 // false\nv2 === 'abc' // false\nv3 === true // false")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("“包装对象”，指的是与数值、字符串、布尔值分别相对应的Number、String、Boolean三个原生对象")])]),t._v(" "),a("li",[a("p",[t._v("设计目的，首先是使得“对象”这种类型可以覆盖 JavaScript 所有的值，整门语言有一个通用的数据模型，其次是使得原始类型的值也有办法调用自己的方法")])]),t._v(" "),a("li",[a("p",[t._v("Number、String和Boolean这三个原生对象，如果不作为构造函数调用（即调用时不加new），而是作为普通函数调用，常常用于将任意类型的值转为数值、字符串和布尔值")]),t._v(" "),a("ul",[a("li",[t._v("// 字符串转为数值\nNumber('123') // 123")])])])]),t._v(" "),a("p",[t._v('// 数值转为字符串\nString(123) // "123"')]),t._v(" "),a("p",[t._v("// 数值转为布尔值\nBoolean(123) // true")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实例方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("valueOf()方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("返回包装对象实例对应的原始类型的值")]),t._v(" "),a("ul",[a("li",[t._v("new Number(123).valueOf()  // 123\nnew String('abc').valueOf() // \"abc\"\nnew Boolean(true).valueOf() // true")])])])])]),t._v(" "),a("li",[a("p",[t._v("toString()方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("返回对应的字符串形式")]),t._v(" "),a("ul",[a("li",[t._v('new Number(123).toString() // "123"\nnew String(\'abc\').toString() // "abc"\nnew Boolean(true).toString() // "true"')])])])])])])]),t._v(" "),a("li",[a("p",[t._v("原始类型与实例对象\n的自动转换")]),t._v(" "),a("ul",[a("li",[t._v("某些场合，原始类型的值会自动当作包装对象调用，即调用包装对象的属性和方法。这时，JavaScript 引擎会自动将原始类型的值转为包装对象实例，并在使用后立刻销毁实例")]),t._v(" "),a("li",[t._v("自动转换生成的包装对象是只读的，无法修改")]),t._v(" "),a("li",[t._v("调用结束后，包装对象实例会自动销毁")])])]),t._v(" "),a("li",[a("p",[t._v("自定义方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在它的原型对象String.prototype上定义方法和属性，供原始类型的值直接调用")]),t._v(" "),a("ul",[a("li",[t._v("Number.prototype.double = function () {\nreturn this.valueOf() + this.valueOf();\n};")])])])])])]),t._v(" "),a("p",[t._v("(123).double() // 246")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Boolean对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作为构造函数，它主要用于生成布尔值的包装对象实例")])]),t._v(" "),a("li",[a("p",[t._v("注意，false对应的包装对象实例，布尔运算结果也是true")]),t._v(" "),a("ul",[a("li",[t._v("new Boolean(false);// true\nnew Boolean(false).valueOf();// false")])])]),t._v(" "),a("li",[a("p",[t._v("作为类型转换函数")]),t._v(" "),a("ul",[a("li",[t._v("可以单独使用，将任意值转为布尔值。这时Boolean就是一个单纯的工具方法")]),t._v(" "),a("li",[t._v("Boolean(undefined) // false\nBoolean(null) // false\nBoolean(0) // false\nBoolean('') // false\nBoolean(NaN) // false")]),t._v(" "),a("li",[t._v("Boolean(1) // true\nBoolean('false') // true\nBoolean([]) // true\nBoolean({}) // true\nBoolean(function () {}) // true\nBoolean(/foo/) // true")]),t._v(" "),a("li",[t._v("使用双重的否运算符（!）也可以将任意值转为对应的布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("对于一些特殊值，Boolean对象前面加不加new，会得到完全相反的结果，必须小心")])])])]),t._v(" "),a("li",[a("p",[t._v("Number对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Number对象是数值对应的包装对象，可以作为构造函数使用，也可以作为工具函数使用")]),t._v(" "),a("ul",[a("li",[t._v("作为构造函数时，它用于生成值为数值的对象")]),t._v(" "),a("li",[t._v("作为工具函数时，它可以将任何类型的值转为数值")])])]),t._v(" "),a("li",[a("p",[t._v("静态属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Number.POSITIVE_INFINITY")]),t._v(" "),a("ul",[a("li",[t._v("正的无限，指向Infinity")])])]),t._v(" "),a("li",[a("p",[t._v("Number.NEGATIVE_INFINITY")]),t._v(" "),a("ul",[a("li",[t._v("负的无限，指向-Infinity")])])]),t._v(" "),a("li",[a("p",[t._v("Number.NaN")]),t._v(" "),a("ul",[a("li",[t._v("表示非数值，指向NaN")])])]),t._v(" "),a("li",[a("p",[t._v("Number.MIN_VALUE")]),t._v(" "),a("ul",[a("li",[t._v("表示最小的正数（即最接近0的正数，在64位浮点数体系中为5e-324），相应的，最接近0的负数为-Number.MIN_VALUE")])])]),t._v(" "),a("li",[a("p",[t._v("Number.MAX_SAFE_INTEGER")]),t._v(" "),a("ul",[a("li",[t._v("表示能够精确表示的最大整数，即9007199254740991")])])]),t._v(" "),a("li",[a("p",[t._v("Number.MIN_SAFE_INTEGER")]),t._v(" "),a("ul",[a("li",[t._v("表示能够精确表示的最小整数，即-9007199254740991")])])])])]),t._v(" "),a("li",[a("p",[t._v("实例方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("toString方法")]),t._v(" "),a("ul",[a("li",[t._v("用来将一个数值转为字符串形式")]),t._v(" "),a("li",[t._v("可以接受一个参数，表示输出的进制。如果省略这个参数，默认将数值先转为十进制，再输出字符串；否则，就根据参数指定的进制，将一个数字转化成某个进制的字符串")])])]),t._v(" "),a("li",[a("p",[t._v("toFixed()方法")]),t._v(" "),a("ul",[a("li",[t._v("先将一个数转为指定位数的小数，然后返回这个小数对应的字符串")]),t._v(" "),a("li",[t._v("由于浮点数的原因，小数5的四舍五入是不确定的，使用的时候必须小心")])])]),t._v(" "),a("li",[a("p",[t._v("toExponential方法")]),t._v(" "),a("ul",[a("li",[t._v("用于将一个数转为科学计数法形式")])])]),t._v(" "),a("li",[a("p",[t._v("toPrecision()方法")]),t._v(" "),a("ul",[a("li",[t._v("用于将一个数转为指定位数的有效数字")]),t._v(" "),a("li",[t._v("该方法用于四舍五入时不太可靠，跟浮点数不是精确储存有关")])])]),t._v(" "),a("li",[a("p",[t._v("toLocaleString()方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("接受一个地区码作为参数，返回一个字符串，表示当前数字在该地区的当地书写形式")]),t._v(" "),a("ul",[a("li",[t._v("(123).toLocaleString('zh-Hans-CN-u-nu-hanidec')\n// \"一二三\"")])])]),t._v(" "),a("li",[a("p",[t._v("如果style属性的值为currency，则可以搭配currency属性，输出指定格式的货币字符串形式")]),t._v(" "),a("ul",[a("li",[t._v("(123).toLocaleString('zh-Hans-CN', { style: 'currency', currency: 'CNY' })\n// \"￥123.00\"")])])]),t._v(" "),a("li",[a("p",[t._v("省略了参数，则由浏览器自行决定如何处理，通常会使用操作系统的地区设定")])])])]),t._v(" "),a("li",[a("p",[t._v("自定义方法")]),t._v(" "),a("ul",[a("li",[t._v("Number.prototype对象上面可以自定义方法，被Number的实例继承")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("String对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字符串对象是一个类似数组的对象（很像数组，但不是数组）")])]),t._v(" "),a("li",[a("p",[t._v("除了用作构造函数，String对象还可以当作工具方法使用，将任意类型的值转为字符串")])]),t._v(" "),a("li",[a("p",[t._v("静态方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("fromCharCode()方法")]),t._v(" "),a("ul",[a("li",[t._v("参数是一个或多个数值，代表 Unicode 码点，返回值是这些码点组成的字符串")]),t._v(" "),a("li",[t._v("不支持 Unicode 码点大于0xFFFF的字符")]),t._v(" "),a("li",[t._v("根本原因在于，码点大于0xFFFF的字符占用四个字节，而 JavaScript 默认支持两个字节的字符")])])])])]),t._v(" "),a("li",[a("p",[t._v("实例属性")]),t._v(" "),a("ul",[a("li",[t._v("length属性返回字符串的长度")])])]),t._v(" "),a("li",[a("p",[t._v("实例方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字符")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("charAt方法")]),t._v(" "),a("ul",[a("li",[t._v("返回指定位置的字符，参数是从0开始编号的位置")]),t._v(" "),a("li",[t._v("完全可以用数组下标替代")]),t._v(" "),a("li",[t._v("如果参数为负数，或大于等于字符串的长度，charAt返回空字符串")])])]),t._v(" "),a("li",[a("p",[t._v("charCodeAt方法")]),t._v(" "),a("ul",[a("li",[t._v("返回字符串指定位置的 Unicode 码点（十进制表示），相当于String.fromCharCode()的逆操作")]),t._v(" "),a("li",[t._v("只返回两个字节的字符的码点")]),t._v(" "),a("li",[t._v("如果遇到码点大于 65536 的字符（四个字节的字符），必需连续使用两次charCodeAt，不仅读入charCodeAt(i)，还要读入charCodeAt(i+1)，将两个值放在一起，才能得到准确的字符")])])])])]),t._v(" "),a("li",[a("p",[t._v("连接\n分割")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("concat方法")]),t._v(" "),a("ul",[a("li",[t._v("用于连接两个字符串，返回一个新字符串，不改变原字符串")]),t._v(" "),a("li",[t._v("如果参数不是字符串，concat方法会将其先转为字符串，然后再连接")])])]),t._v(" "),a("li",[a("p",[t._v("split方法")]),t._v(" "),a("ul",[a("li",[t._v("按照给定规则分割字符串，返回一个由分割出来的子字符串组成的数组")]),t._v(" "),a("li",[t._v("如果分割规则为空字符串，则返回数组的成员是原字符串的每一个字符")]),t._v(" "),a("li",[t._v("如果满足分割规则的两个部分紧邻着（即两个分割符中间没有其他字符），则返回数组之中会有一个空字符串")]),t._v(" "),a("li",[t._v("如果满足分割规则的部分处于字符串的开头或结尾（即它的前面或后面没有其他字符），则返回数组的第一个或最后一个成员是一个空字符串")]),t._v(" "),a("li",[t._v("还可以接受第二个参数，限定返回数组的最大成员数")])])])])]),t._v(" "),a("li",[a("p",[t._v("提取")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("slice方法")]),t._v(" "),a("ul",[a("li",[t._v("用于从原字符串取出子字符串并返回，不改变原字符串。")]),t._v(" "),a("li",[t._v("第一个参数是子字符串的开始位置\n第二个参数是子字符串的结束位置（不含该位置）\n左闭右开")]),t._v(" "),a("li",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串结束")]),t._v(" "),a("li",[t._v("如果参数是负值，表示从结尾开始倒数计算的位置，即该负值加上字符串长度")]),t._v(" "),a("li",[t._v("如果第一个参数大于第二个参数，slice方法返回一个空字符串")])])]),t._v(" "),a("li",[a("p",[t._v("substring方法")]),t._v(" "),a("ul",[a("li",[t._v("用于从原字符串取出子字符串并返回，不改变原字符串，跟slice方法很相像")]),t._v(" "),a("li",[t._v("第一个参数是子字符串的开始位置\n第二个参数是子字符串的结束位置（不含该位置）\n左闭右开")]),t._v(" "),a("li",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串的结束")]),t._v(" "),a("li",[t._v("如果第一个参数大于第二个参数，substring方法会自动更换两个参数的位置")]),t._v(" "),a("li",[t._v("如果参数是负数，substring方法会自动将负数转为0")]),t._v(" "),a("li",[t._v("不建议使用substring方法，应该优先使用slice")])])]),t._v(" "),a("li",[a("p",[t._v("substr方法")]),t._v(" "),a("ul",[a("li",[t._v("用于从原字符串取出子字符串并返回，不改变原字符串，跟slice和substring方法的作用相同")]),t._v(" "),a("li",[t._v("第一个参数是子字符串的开始位置（从0开始计算）\n第二个参数是子字符串的长度")]),t._v(" "),a("li",[t._v("如果省略第二个参数，则表示子字符串一直到原字符串的结束")]),t._v(" "),a("li",[t._v("如果第一个参数是负数，表示倒数计算的字符位置。如果第二个参数是负数，将被自动转为0，因此会返回空字符串")])])])])]),t._v(" "),a("li",[a("p",[t._v("索引")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("indexOf方法")]),t._v(" "),a("ul",[a("li",[t._v("用于确定一个字符串在另一个字符串中第一次出现的位置，返回结果是匹配开始的位置。如果返回-1，就表示不匹配")]),t._v(" "),a("li",[t._v("还可以接受第二个参数，表示从该位置开始向后匹配")])])]),t._v(" "),a("li",[a("p",[t._v("lastIndexOf方法")]),t._v(" "),a("ul",[a("li",[t._v("用法跟indexOf方法一致，主要的区别是lastIndexOf从尾部开始匹配，indexOf则是从头部开始匹配")]),t._v(" "),a("li",[t._v("第二个参数表示从该位置起向前匹配")])])])])]),t._v(" "),a("li",[a("p",[t._v("转换")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("trim方法")]),t._v(" "),a("ul",[a("li",[t._v("用于去除字符串两端的空格，返回一个新字符串，不改变原字符串")]),t._v(" "),a("li",[t._v("去除的不仅是空格，还包括制表符（\\t、\\v）、换行符（\\n）和回车符（\\r）")])])]),t._v(" "),a("li",[a("p",[t._v("toLowerCase方法")]),t._v(" "),a("ul",[a("li",[t._v("用于将一个字符串全部转为小写")]),t._v(" "),a("li",[t._v("返回一个新字符串，不改变原字符串")])])]),t._v(" "),a("li",[a("p",[t._v("toUpperCase方法")]),t._v(" "),a("ul",[a("li",[t._v("全部转为大写")]),t._v(" "),a("li",[t._v("返回一个新字符串，不改变原字符串")])])])])]),t._v(" "),a("li",[a("p",[t._v("正则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("match方法")]),t._v(" "),a("ul",[a("li",[t._v("用于确定原字符串是否匹配某个子字符串，返回一个数组，成员为匹配的第一个字符串。如果没有找到匹配，则返回null")]),t._v(" "),a("li",[t._v("返回的数组还有index属性和input属性，分别表示匹配字符串开始的位置和原始字符串")])])]),t._v(" "),a("li",[a("p",[t._v("search方法")]),t._v(" "),a("ul",[a("li",[t._v("用法基本等同于match，但是返回值为匹配的第一个位置。如果没有找到匹配，则返回-1")])])]),t._v(" "),a("li",[a("p",[t._v("replace方法")]),t._v(" "),a("ul",[a("li",[t._v("用于替换匹配的子字符串，一般情况下只替换第一个匹配（除非使用带有g修饰符的正则表达式）")])])])])]),t._v(" "),a("li",[a("p",[t._v("比较")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("localeCompare方法")]),t._v(" "),a("ul",[a("li",[t._v("用于比较两个字符串，返回一个整数，\n如果小于0，表示第一个字符串小于第二个字符串；\n如果等于0，表示两者相等；\n如果大于0，表示第一个字符串大于第二个字符串")])])])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"_27-5-math对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-5-math对象"}},[t._v("#")]),t._v(" 27.5 Math对象")]),t._v(" "),a("ol",[a("li",[t._v("常用静态函数"),a("br"),t._v("\nmax、min、ceil、floor、toFixed、round")]),t._v(" "),a("li",[t._v("随机数函数\nMath.random()：[0, 1)"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("randomArrVal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   floor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   random\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[start, end) ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start + [0, 1) * (end - start) ==> [start, end)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chars "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomArrVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0，所以使用Math.floor()函数")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_27-6-date对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-6-date对象"}},[t._v("#")]),t._v(" 27.6 Date对象")]),t._v(" "),a("ol",[a("li",[t._v("Date() 函数既是一个构造函数，也是一个工具函数\n"),a("ol",[a("li",[t._v("作为构造函数时，返回一个Date对象")]),t._v(" "),a("li",[t._v("作为工具函数时，返回一个当前时间的string字符串")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nowObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" nowObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nowObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2020-06-18T09:27:43.710Z")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nowObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1592472511364")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nowStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 工具函数")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" nowStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nowStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Thu Jun 18 2020 17:27:43 GMT+0800 (GMT+08:00)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nowStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])]),t._v(" "),a("li",[t._v("静态方法\n"),a("ol",[a("li",[t._v("now函数：返回一个当前时间对应的毫秒时间戳\n"),a("blockquote",[a("p",[t._v("计算脚本执行时间，或使用"),a("code",[t._v("console.time('label')")]),t._v("和"),a("code",[t._v("console.timeEnd('label')")])])])])])]),t._v(" "),a("li",[t._v("实例方法\ngetFullYear()、getMonth()、getDate()、getHours()、getMinutes()、getSeconds()")]),t._v(" "),a("li",[t._v("ISO时间对象与timestamp时间戳的相互转换"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" birthObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1997-01-12 03:45:12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 853011912000")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 853011912000")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 853011912000")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 853011912000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" birthMs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("853011912000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 格林威治时间")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("birthMs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1997-01-11T19:45:12.000Z")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])]),t._v(" "),a("li",[t._v("时间格式化"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1997-01-12 03:45:12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" formatDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YYYY-MM-DD HH:mm:ss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("YYYY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      mm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ss"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("formatDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1997-0-12 3:45:12")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("formatDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YYYY年MM月DD日 HH时mm分ss秒'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1997年0月12日 3时45分12秒")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_27-7-regexp对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-7-regexp对象"}},[t._v("#")]),t._v(" 27.7 RegExp对象")]),t._v(" "),a("h3",{attrs:{id:"_27-8-json对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-8-json对象"}},[t._v("#")]),t._v(" 27.8 JSON对象")]),t._v(" "),a("h3",{attrs:{id:"_27-9-proxy对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-9-proxy对象"}},[t._v("#")]),t._v(" 27.9 Proxy对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种“元编程”（meta programming），即对编程语言进行编程")])]),t._v(" "),a("li",[a("p",[t._v("Proxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写")])]),t._v(" "),a("li",[a("p",[t._v("ES6 原生提供 Proxy 构造函数，用来生成 Proxy 实例")]),t._v(" "),a("ul",[a("li",[t._v("var proxy = new Proxy(target, handler);\ntarget参数表示所要拦截的目标对象\nhandler参数也是一个对象，用来定制拦截行为")])])]),t._v(" "),a("li",[a("p",[t._v("注意，要使得Proxy起作用，必须针对Proxy实例进行操作，而不是针对目标对象进行操作")]),t._v(" "),a("ul",[a("li",[t._v("var proxy = new Proxy({}, {\nget: function(target, propKey) {\nreturn 35;\n}\n});")])])])]),t._v(" "),a("p",[t._v("proxy.time // 35\nproxy.name // 35\nproxy.title // 35")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果handler没有设置任何拦截，那就等同于直接通向原对象")])]),t._v(" "),a("li",[a("p",[t._v("一个技巧是将 Proxy 对象，设置到object.proxy属性，从而可以在object对象上调用")]),t._v(" "),a("ul",[a("li",[t._v("var object = { proxy: new Proxy(target, handler) };")])])]),t._v(" "),a("li",[a("p",[t._v("Proxy 实例也可以作为其他对象的原型对象")])]),t._v(" "),a("li",[a("p",[t._v("拦截操作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("get(target, propKey, receiver)")]),t._v(" "),a("ul",[a("li",[t._v("拦截对象属性的读取，比如proxy.foo和proxy['foo']")]),t._v(" "),a("li",[t._v("接受三个参数，依次为目标对象、属性名和 proxy 实例本身（严格地说，是操作行为所针对的对象），其中最后一个参数可选")]),t._v(" "),a("li",[t._v("get方法可以继承")]),t._v(" "),a("li",[t._v("利用 Proxy，可以将读取属性的操作（get），转变为执行某个函数，从而实现属性的链式操作")])])]),t._v(" "),a("li",[a("p",[t._v("set(target, propKey, value, receiver)")]),t._v(" "),a("ul",[a("li",[t._v("拦截对象属性的设置，比如proxy.foo = v或proxy['foo'] = v，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("has(target, propKey)")]),t._v(" "),a("ul",[a("li",[t._v("拦截propKey in proxy的操作，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("deleteProperty(target, propKey)")]),t._v(" "),a("ul",[a("li",[t._v("拦截delete proxy[propKey]的操作，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("ownKeys(target)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.getOwnPropertyNames(proxy)、Object.getOwnPropertySymbols(proxy)、Object.keys(proxy)、for...in循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而Object.keys()的返回结果仅包括目标对象自身的可遍历属性")])])]),t._v(" "),a("li",[a("p",[t._v("getOwnPropertyDescriptor(target, propKey)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.getOwnPropertyDescriptor(proxy, propKey)，返回属性的描述对象")])])]),t._v(" "),a("li",[a("p",[t._v("defineProperty(target, propKey, propDesc)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.defineProperty(proxy, propKey, propDesc）、Object.defineProperties(proxy, propDescs)，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("preventExtensions(target)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.preventExtensions(proxy)，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("getPrototypeOf(target)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.getPrototypeOf(proxy)，返回一个对象")])])]),t._v(" "),a("li",[a("p",[t._v("isExtensible(target)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.isExtensible(proxy)，返回一个布尔值")])])]),t._v(" "),a("li",[a("p",[t._v("setPrototypeOf(target, proto)")]),t._v(" "),a("ul",[a("li",[t._v("拦截Object.setPrototypeOf(proxy, proto)，返回一个布尔值。如果目标对象是函数，那么还有两种额外操作可以拦截")])])]),t._v(" "),a("li",[a("p",[t._v("apply(target, object, args)")]),t._v(" "),a("ul",[a("li",[t._v("拦截 Proxy 实例作为函数调用的操作，比如proxy(...args)、proxy.call(object, ...args)、proxy.apply(...)")])])]),t._v(" "),a("li",[a("p",[t._v("construct(target, args)")]),t._v(" "),a("ul",[a("li",[t._v("拦截 Proxy 实例作为构造函数调用的操作，比如new proxy(...args)")])])])])])]),t._v(" "),a("h3",{attrs:{id:"reflect对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reflect对象"}},[t._v("#")]),t._v(" Reflect对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("设计目的：\n1） 将Object对象的一些明显属于语言内部的方法，放到Reflect对象上（包括未来的新方法）\n2） 修改某些Object方法的返回结果，让其变得更合理\n3） 让Object操作都变成函数行为\n4）Reflect对象的方法与Proxy对象的方法一一对应，只要是Proxy对象的方法，就能在Reflect对象上找到对应的方法。让Proxy对象可以方便地调用对应的Reflect方法，完成默认行为，作为修改行为的基础。也就是说，不管Proxy怎么修改默认行为，你总可以在Reflect上获取默认行为")])]),t._v(" "),a("li",[a("p",[t._v("13个静态方法\n与Proxy对应")]),t._v(" "),a("ul",[a("li",[t._v("Reflect.apply(target, thisArg, args)")]),t._v(" "),a("li",[t._v("Reflect.construct(target, args)")]),t._v(" "),a("li",[t._v("Reflect.get(target, name, receiver)")]),t._v(" "),a("li",[t._v("Reflect.set(target, name, value, receiver)")]),t._v(" "),a("li",[t._v("Reflect.defineProperty(target, name, desc)")]),t._v(" "),a("li",[t._v("Reflect.deleteProperty(target, name)")]),t._v(" "),a("li",[t._v("Reflect.has(target, name)")]),t._v(" "),a("li",[t._v("Reflect.ownKeys(target)")]),t._v(" "),a("li",[t._v("Reflect.isExtensible(target)")]),t._v(" "),a("li",[t._v("Reflect.preventExtensions(target)")]),t._v(" "),a("li",[t._v("Reflect.getOwnPropertyDescriptor(target, name)")]),t._v(" "),a("li",[t._v("Reflect.getPrototypeOf(target)")]),t._v(" "),a("li",[t._v("Reflect.setPrototypeOf(target, prototype)")])])])]),t._v(" "),a("h3",{attrs:{id:"promise对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise对象"}},[t._v("#")]),t._v(" Promise对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大")])]),t._v(" "),a("li",[a("p",[t._v("Promise，就是一个容器，保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理")])]),t._v(" "),a("li",[a("p",[t._v("两个特点")]),t._v(" "),a("ul",[a("li",[t._v("1）对象的状态不受外界影响。Promise对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）和rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态")]),t._v(" "),a("li",[t._v("2）一旦状态改变，就不会再变，任何时候都可以得到这个结果。Promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为rejected。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果，这时就称为 resolved（已定型）。如果改变已经发生了，你再对Promise对象添加回调函数，也会立即得到这个结果。这与事件（Event）完全不同，事件的特点是，如果你错过了它，再去监听，是得不到结果的")])])]),t._v(" "),a("li",[a("p",[t._v("三个缺点")]),t._v(" "),a("ul",[a("li",[t._v("首先，无法取消Promise，一旦新建它就会立即执行，无法中途取消")]),t._v(" "),a("li",[t._v("其次，如果不设置回调函数，Promise内部抛出的错误，不会反应到外部")]),t._v(" "),a("li",[t._v("第三，当处于pending状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）")])])]),t._v(" "),a("li",[a("p",[t._v("基本用法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Promise对象是一个构造函数，用来生成Promise实例")])]),t._v(" "),a("li",[a("p",[t._v("接受一个函数作为参数，该函数的两个参数分别是resolve和reject")]),t._v(" "),a("ul",[a("li",[t._v("resolve函数的作用是，将Promise对象的状态从“未完成”变为“成功”（即从 pending 变为 resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去")]),t._v(" "),a("li",[t._v("reject函数的作用是，将Promise对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去")])])]),t._v(" "),a("li",[a("p",[t._v("Promise实例生成以后，可以用then方法分别指定resolved状态和rejected（可选）状态的回调函数")]),t._v(" "),a("ul",[a("li",[t._v("promise.then(function(value) {\n// success\n}, function(error) {\n// failure\n});")]),t._v(" "),a("li",[t._v("如果调用resolve函数和reject函数时带有参数，那么它们的参数会被传递给回调函数")]),t._v(" "),a("li",[t._v("resolve函数的参数除了正常的值以外，还可能是另一个 Promise 实例")]),t._v(" "),a("li",[t._v("reject函数的参数通常是Error对象的实例，表示抛出的错误")])])]),t._v(" "),a("li",[a("p",[t._v("Promise 新建后就会立即执行")])]),t._v(" "),a("li",[a("p",[t._v("注意，调用resolve或reject并不会终结 Promise 的参数函数的执行")]),t._v(" "),a("ul",[a("li",[t._v("调用resolve或reject以后，Promise 的使命就完成了，后继操作应该放到then方法里面，而不应该直接写在resolve或reject的后面")]),t._v(" "),a("li",[t._v("最好在它们前面加上return语句")])])])])]),t._v(" "),a("li",[a("p",[t._v("实例方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("then()")]),t._v(" "),a("ul",[a("li",[t._v("作用是为 Promise 实例添加状态改变时的回调函数")]),t._v(" "),a("li",[t._v("then方法的第一个参数是resolved状态的回调函数，第二个参数（可选）是rejected状态的回调函数")]),t._v(" "),a("li",[t._v("返回的是一个新的Promise实例（注意，不是原来那个Promise实例），可以采用链式写法，即then方法后面再调用另一个then方法")]),t._v(" "),a("li",[t._v("链式调用：第一个回调函数完成以后，会将返回结果作为参数，传入第二个回调函数")]),t._v(" "),a("li",[t._v("链式调用：第一个then方法指定的回调函数，返回的是另一个Promise对象。这时，第二个then方法指定的回调函数，就会等待这个新的Promise对象状态发生变化。如果变为resolved，就调用第一个回调函数，如果状态变为rejected，就调用第二个回调函数")])])]),t._v(" "),a("li",[a("p",[t._v("catch()")]),t._v(" "),a("ul",[a("li",[t._v("是.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数")]),t._v(" "),a("li",[t._v("返回一个 Promise 对象，如果该对象状态变为resolved，则会调用then方法指定的回调函数；如果异步操作抛出错误，状态就会变为rejected，就会调用catch方法指定的回调函数，处理这个错误")]),t._v(" "),a("li",[t._v("then方法指定的回调函数，如果运行中抛出错误，也会被catch方法捕获")]),t._v(" "),a("li",[t._v("如果 Promise 状态已经变成resolved，再抛出错误是无效的")]),t._v(" "),a("li",[t._v("Promise 对象的错误具有“冒泡”性质，会一直向后传递，直到被捕获为止，即错误总是会被下一个catch语句捕获")]),t._v(" "),a("li",[t._v("一般来说，不要在then方法里面定义 Reject 状态的回调函数（即then的第二个参数），总是使用catch方法")]),t._v(" "),a("li",[t._v("Promise 会吃掉错误：跟传统的try/catch代码块不同的是，如果没有使用catch方法指定错误处理的回调函数，Promise 对象抛出的错误不会传递到外层代码")]),t._v(" "),a("li",[t._v("catch方法返回的还是一个 Promise 对象，因此后面还可以接着调用then方法")]),t._v(" "),a("li",[t._v("catch方法之中，还能再抛出错误")])])]),t._v(" "),a("li",[a("p",[t._v("finally()")]),t._v(" "),a("ul",[a("li",[t._v("用于指定不管 Promise 对象最后状态如何，都会执行的操作")]),t._v(" "),a("li",[t._v("finally方法的回调函数不接受任何参数，所以没有办法知道，前面的 Promise 状态到底是fulfilled还是rejected。因此finally方法里面的操作，应该是与状态无关的，不依赖于 Promise 的执行结果")]),t._v(" "),a("li",[t._v("本质上是then方法的特例")])])])])]),t._v(" "),a("li",[a("p",[t._v("静态方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("all()")]),t._v(" "),a("ul",[a("li",[t._v("用于将多个 Promise 实例，包装成一个新的 Promise 实例")]),t._v(" "),a("li",[t._v("接受一个数组作为参数，数组元素都是 Promise 实例，如果不是，就会先调用Promise.resolve方法，将参数转为 Promise 实例，再进一步处理")]),t._v(" "),a("li",[t._v("Promise.all()方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例")]),t._v(" "),a("li",[t._v("状态：如果数组中所有Promise都转为fulfilled，才为fulfilled；如果任一Promise为rejected，则为rejected")]),t._v(" "),a("li",[t._v("注意，如果作为参数的 Promise 实例，自己定义了catch方法，那么它一旦被rejected，并不会触发Promise.all()的catch方法；如果数组Promise元素没有自己的catch方法，就会调用Promise.all()的catch方法")])])]),t._v(" "),a("li",[a("p",[t._v("race()")]),t._v(" "),a("ul",[a("li",[t._v("同样是将多个 Promise 实例，包装成一个新的 Promise 实例")]),t._v(" "),a("li",[t._v("只要Promise数组之中有一个实例率先改变状态，总体状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给包装Promise的回调函数")]),t._v(" "),a("li",[t._v("如果数组中不是 Promise 实例，就会先调用Promise.resolve()方法，将参数转为 Promise 实例")])])]),t._v(" "),a("li",[a("p",[t._v("allSettled()")]),t._v(" "),a("ul",[a("li",[t._v("接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例。只有等到所有这些参数实例都返回结果，不管是fulfilled还是rejected，包装实例才会结束")]),t._v(" "),a("li",[t._v("不关心异步操作的结果，只关心这些操作有没有结束。这时，Promise.allSettled()方法就很有用")])])]),t._v(" "),a("li",[a("p",[t._v("any()")]),t._v(" "),a("ul",[a("li",[t._v("接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例。只要参数实例有一个变成fulfilled状态，包装实例就会变成fulfilled状态；如果所有参数实例都变成rejected状态，包装实例就会变成rejected状态")]),t._v(" "),a("li",[t._v("Promise.any()抛出的错误，不是一个一般的错误，而是一个 AggregateError 实例。它相当于一个数组，每个成员对应一个被rejected的操作所抛出的错误")])])]),t._v(" "),a("li",[a("p",[t._v("resolve()")]),t._v(" "),a("ul",[a("li",[t._v("将现有对象转为 Promise 对象，Promise.resolve()方法就起到这个作用")])])]),t._v(" "),a("li",[a("p",[t._v("reject()")]),t._v(" "),a("ul",[a("li",[t._v("Promise.reject(reason)方法也会返回一个新的 Promise 实例，该实例的状态为rejected")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_28-iterator遍历器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-iterator遍历器"}},[t._v("#")]),t._v(" 28 Iterator遍历器")]),t._v(" "),a("h3",{attrs:{id:"一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署-iterator-接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署-iterator-接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）"}},[t._v("#")]),t._v(" 一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）")]),t._v(" "),a("ul",[a("li",[t._v("function getIterator(arr) {\nlet index = 0;\nreturn {\nnext() {\nreturn index < arr.length ? {\nvalue: arr[index++],\ndone: false\n} : {\nvalue: undefined,\ndone: true\n};\n}\n};\n}")])]),t._v(" "),a("p",[t._v('let it = getIterator(["1", 2, "3"]);\nconsole.log(it);\nconsole.log(it.next());')]),t._v(" "),a("h3",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),a("ul",[a("li",[t._v("一是为各种数据结构，提供一个统一的、简便的访问接口；")]),t._v(" "),a("li",[t._v("二是使得数据结构的成员能够按某种次序排列；")]),t._v(" "),a("li",[t._v("三是 ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费")])]),t._v(" "),a("h3",{attrs:{id:"遍历过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历过程"}},[t._v("#")]),t._v(" 遍历过程")]),t._v(" "),a("ul",[a("li",[t._v("（1）创建一个指针对象，指向当前数据结构的起始位置。也就是说，遍历器对象本质上，就是一个指针对象。")]),t._v(" "),a("li",[t._v("（2）第一次调用指针对象的next方法，可以将指针指向数据结构的第一个成员。")]),t._v(" "),a("li",[t._v("（3）第二次调用指针对象的next方法，指针就指向数据结构的第二个成员。")]),t._v(" "),a("li",[t._v("（4）不断调用指针对象的next方法，直到它指向数据结构的结束位置。")])]),t._v(" "),a("h3",{attrs:{id:"iterator-只是把接口规格加到数据结构之上，所以，遍历器与它所遍历的那个数据结构，实际上是分开的，完全可以写出没有对应数据结构的遍历器对象，或者说用遍历器对象模拟出数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterator-只是把接口规格加到数据结构之上，所以，遍历器与它所遍历的那个数据结构，实际上是分开的，完全可以写出没有对应数据结构的遍历器对象，或者说用遍历器对象模拟出数据结构"}},[t._v("#")]),t._v(" Iterator 只是把接口规格加到数据结构之上，所以，遍历器与它所遍历的那个数据结构，实际上是分开的，完全可以写出没有对应数据结构的遍历器对象，或者说用遍历器对象模拟出数据结构")]),t._v(" "),a("h3",{attrs:{id:"一种数据结构只要部署了-iterator-接口，我们就称这种数据结构是-可遍历的-（iterable）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种数据结构只要部署了-iterator-接口，我们就称这种数据结构是-可遍历的-（iterable）"}},[t._v("#")]),t._v(" 一种数据结构只要部署了 Iterator 接口，我们就称这种数据结构是“可遍历的”（iterable）")]),t._v(" "),a("h3",{attrs:{id:"默认的-iterator-接口部署在数据结构的symbol-iterator属性，或者说，一个数据结构只要具有symbol-iterator属性，就可以认为是-可遍历的-（iterable）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认的-iterator-接口部署在数据结构的symbol-iterator属性，或者说，一个数据结构只要具有symbol-iterator属性，就可以认为是-可遍历的-（iterable）"}},[t._v("#")]),t._v(" 默认的 Iterator 接口部署在数据结构的Symbol.iterator属性，或者说，一个数据结构只要具有Symbol.iterator属性，就可以认为是“可遍历的”（iterable）")]),t._v(" "),a("h3",{attrs:{id:"本质上，遍历器是一种线性处理，对于任何非线性的数据结构，部署遍历器接口，就等于部署一种线性转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本质上，遍历器是一种线性处理，对于任何非线性的数据结构，部署遍历器接口，就等于部署一种线性转换"}},[t._v("#")]),t._v(" 本质上，遍历器是一种线性处理，对于任何非线性的数据结构，部署遍历器接口，就等于部署一种线性转换")]),t._v(" "),a("h3",{attrs:{id:"一个对象如果要具备可被for-of循环调用的-iterator-接口，就必须在symbol-iterator的属性上部署遍历器生成方法（原型链上的对象具有该方法也可）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个对象如果要具备可被for-of循环调用的-iterator-接口，就必须在symbol-iterator的属性上部署遍历器生成方法（原型链上的对象具有该方法也可）"}},[t._v("#")]),t._v(" 一个对象如果要具备可被for...of循环调用的 Iterator 接口，就必须在Symbol.iterator的属性上部署遍历器生成方法（原型链上的对象具有该方法也可）")]),t._v(" "),a("h3",{attrs:{id:"调用场合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用场合"}},[t._v("#")]),t._v(" 调用场合")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("解构赋值")]),t._v(" "),a("ul",[a("li",[t._v("对数组和 Set 结构进行解构赋值时，会默认调用Symbol.iterator方法")])])]),t._v(" "),a("li",[a("p",[t._v("扩展运算符")]),t._v(" "),a("ul",[a("li",[t._v("可以将任何部署了 Iterator 接口的数据结构，转为数组")])])]),t._v(" "),a("li",[a("p",[t._v("yield*")]),t._v(" "),a("ul",[a("li",[t._v("yield*后面跟的是一个可遍历的结构，它会调用该结构的遍历器接口")])])]),t._v(" "),a("li",[a("p",[t._v("for...of")]),t._v(" "),a("ul",[a("li",[t._v("一个数据结构只要部署了Symbol.iterator属性，就被视为具有 iterator 接口，就可以用for...of循环遍历它的成员")]),t._v(" "),a("li",[t._v("for...of循环内部调用的是数据结构的Symbol.iterator方法")]),t._v(" "),a("li",[t._v("数组、Set 和 Map 结构、某些类似数组的对象（比如arguments对象、DOM NodeList 对象）、 Generator 对象，以及字符串")])])]),t._v(" "),a("li",[a("p",[t._v("Array.from()")])]),t._v(" "),a("li",[a("p",[t._v("Map(), Set(), WeakMap(), WeakSet()（比如new Map([['a',1],['b',2]])）")])]),t._v(" "),a("li",[a("p",[t._v("Promise.all()")])]),t._v(" "),a("li",[a("p",[t._v("Promise.race()")])])]),t._v(" "),a("h3",{attrs:{id:"遍历对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历对比"}},[t._v("#")]),t._v(" 遍历对比")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("for循环")]),t._v(" "),a("ul",[a("li",[t._v("写法比较麻烦")])])]),t._v(" "),a("li",[a("p",[t._v("forEach循环")]),t._v(" "),a("ul",[a("li",[t._v("数组内置")]),t._v(" "),a("li",[t._v("无法中途跳出forEach循环，break命令或return命令都不能奏效")])])]),t._v(" "),a("li",[a("p",[t._v("for...in循环")]),t._v(" "),a("ul",[a("li",[t._v("可以遍历数组的键名")]),t._v(" "),a("li",[t._v("数组的键名是数字，但是for...in循环是以字符串作为键名“0”、“1”、“2”等等")]),t._v(" "),a("li",[t._v("不仅遍历数字键名，还会遍历手动添加的其他键，甚至包括原型链上的键")]),t._v(" "),a("li",[t._v("某些情况下，for...in循环会以任意顺序遍历键名")]),t._v(" "),a("li",[t._v("本质：in操作符，主要是为遍历对象而设计的，不适用于遍历数组")])])]),t._v(" "),a("li",[a("p",[t._v("for...of循环")]),t._v(" "),a("ul",[a("li",[t._v("有着同for...in一样的简洁语法，但是没有for...in那些缺点。")]),t._v(" "),a("li",[t._v("不同于forEach方法，它可以与break、continue和return配合使用。")]),t._v(" "),a("li",[t._v("提供了遍历所有数据结构的统一操作接口")]),t._v(" "),a("li",[t._v("本质：Iterator接口")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);